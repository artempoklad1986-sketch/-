<?php  
// ← НЕТ пробелов/переносов перед <?php
session_start(); // ← должно быть СРАЗУ после <?php
require_once 'data.php';

// Простая авторизация
if (!isset($_SESSION['admin_logged_in'])) {
    if (($_POST['admin_password'] ?? '') === ADMIN_PASSWORD) {
        $_SESSION['admin_logged_in'] = true;
        $_SESSION['admin_name'] = 'Администратор';
        $_SESSION['admin_role'] = 'Супер-админ';
        header('Location: admin.php');
        exit;
    } elseif (!empty($_POST['admin_password'])) {
        $login_error = 'Неверный пароль';
    }
}

// Выход
if (($_GET['action'] ?? '') === 'logout') {
    unset($_SESSION['admin_logged_in']);
    header('Location: admin.php');
    exit;
}

// Проверка авторизации
if (!isset($_SESSION['admin_logged_in'])) {
    renderLoginPage($login_error ?? '');
    exit;
}

$section = $_GET['section'] ?? 'dashboard';
$action = $_POST['action'] ?? $_GET['action'] ?? '';

// Обработка AJAX запросов - ИСПРАВЛЕНО
if (isset($_POST['ajax']) || isset($_GET['ajax'])) {
    header('Content-Type: application/json');
    echo json_encode(handleAjaxRequest($action));
    exit;
}

// Обработка файловых загрузок - НОВОЕ
if (isset($_FILES) && !empty($_FILES)) {
    $response = handleFileUpload($action);
    if (isset($_POST['ajax'])) {
        header('Content-Type: application/json');
        echo json_encode($response);
        exit;
    } else {
        $_SESSION['admin_message'] = [
            'text' => $response['message'],
            'type' => $response['success'] ? 'success' : 'error'
        ];
    }
}

// Обработка обычных действий
if ($action && !isset($_POST['ajax'])) {
    handleAdminAction($action, $section);
}

// Получаем данные для админки
$adminData = getAdminData($section);

?><!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title><?= $adminData['title'] ?? 'Админ-панель' ?> - АкваСбор CRM</title>

    <!-- Стили админки -->
    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' rel='stylesheet'>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>
    <style>
        /* Базовые стили - улучшенная версия */
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #3498db;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --text-primary: #2c3e50;
            --text-secondary: #6c757d;
            --text-muted: #95a5a6;
            --border-color: #dee2e6;
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 12px rgba(0,0,0,0.1);
            --shadow-lg: 0 8px 25px rgba(0,0,0,0.15);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--bg-secondary);
            color: var(--text-primary);
            line-height: 1.5;
        }

        .admin-panel {
            display: flex;
            min-height: 100vh;
        }

        /* Боковое меню - улучшено */
        .sidebar {
            width: 280px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            z-index: 1000;
            transition: var(--transition);
        }

        .sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .sidebar::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.1);
        }

        .sidebar::-webkit-scrollbar-thumb {
            background: rgba(255,255,255,0.3);
            border-radius: 3px;
        }

        .sidebar-header {
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .admin-logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            font-size: 32px;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-3px); }
        }

        .logo-title {
            font-size: 20px;
            font-weight: 700;
        }

        .logo-subtitle {
            font-size: 12px;
            opacity: 0.8;
        }

        .sidebar-nav {
            padding: 20px 0;
        }

        .nav-section {
            margin-bottom: 25px;
        }

        .nav-title {
            padding: 0 20px 10px;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 1px;
            opacity: 0.7;
            font-weight: 600;
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: var(--transition);
            position: relative;
        }

        .sidebar-link:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            padding-left: 25px;
        }

        .sidebar-link.active {
            background: rgba(255,255,255,0.15);
            color: white;
        }

        .sidebar-link.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 3px;
            background: white;
        }

        .sidebar-link i {
            width: 20px;
            margin-right: 12px;
        }

        .sidebar-badge {
            margin-left: auto;
            padding: 2px 8px;
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
        }

        .sidebar-badge.badge-warning {
            background: var(--warning-color);
        }

        .sidebar-badge.badge-premium {
            background: linear-gradient(45deg, gold, orange);
        }

        .sidebar-footer {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 20px;
            border-top: 1px solid rgba(255,255,255,0.1);
        }

        .admin-profile {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .admin-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
        }

        .admin-name {
            font-weight: 600;
            font-size: 14px;
        }

        .admin-role {
            font-size: 11px;
            opacity: 0.7;
        }

        .logout-btn {
            margin-left: auto;
            color: rgba(255,255,255,0.6);
            text-decoration: none;
            padding: 8px;
            border-radius: var(--border-radius);
            transition: var(--transition);
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.1);
            color: white;
        }

        /* Основной контент */
        .main-content {
            flex: 1;
            margin-left: 280px;
            min-height: 100vh;
        }

        .top-bar {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            padding: 16px 24px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: var(--shadow-sm);
        }

        .page-title {
            font-size: 24px;
            font-weight: 700;
            color: var(--text-primary);
        }

        .top-bar-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: var(--border-radius);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            cursor: pointer;
            transition: var(--transition);
            white-space: nowrap;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: #5a6fd8;
            transform: translateY(-1px);
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-warning {
            background: var(--warning-color);
            color: white;
        }

        .btn-danger {
            background: var(--danger-color);
            color: white;
        }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 1px solid var(--primary-color);
        }

        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
        }

        .btn-sm {
            padding: 4px 8px;
            font-size: 12px;
        }

        .btn-lg {
            padding: 12px 24px;
            font-size: 16px;
        }

        /* Контент страниц */
        .page-content {
            padding: 24px;
        }

        /* Карточки статистики - улучшены */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: var(--bg-primary);
            padding: 24px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-md);
            border-left: 4px solid var(--primary-color);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100px;
            height: 100px;
            background: linear-gradient(45deg, transparent, rgba(255,255,255,0.05));
            transform: rotate(45deg);
            transition: var(--transition);
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card:hover::before {
            top: -25%;
            right: -25%;
        }

        .stat-card.stat-success {
            border-left-color: var(--success-color);
        }

        .stat-card.stat-warning {
            border-left-color: var(--warning-color);
        }

        .stat-card.stat-danger {
            border-left-color: var(--danger-color);
        }

        .stat-card.stat-info {
            border-left-color: var(--info-color);
        }

        .stat-value {
            font-size: 32px;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 4px;
        }

        .stat-label {
            font-size: 14px;
            color: var(--text-secondary);
            margin-bottom: 8px;
        }

        .stat-change {
            font-size: 12px;
            padding: 2px 8px;
            border-radius: 12px;
            display: inline-block;
        }

        .stat-change.positive {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }

        .stat-change.negative {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }

        .stat-change.neutral {
            background: rgba(149, 165, 166, 0.1);
            color: var(--text-muted);
        }

        /* Таблицы - улучшены */
        .table-container {
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            overflow: hidden;
            box-shadow: var(--shadow-md);
            margin-bottom: 24px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th {
            background: var(--bg-secondary);
            padding: 16px;
            text-align: left;
            font-weight: 600;
            color: var(--text-primary);
            border-bottom: 1px solid var(--border-color);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table td {
            padding: 16px;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .table tr:hover {
            background: var(--bg-secondary);
        }

        .table tr.selected {
            background: rgba(102, 126, 234, 0.1);
        }

        /* Чекбоксы для массовых операций */
        .bulk-checkbox {
            width: 18px;
            height: 18px;
            margin: 0;
        }

        .bulk-actions {
            display: none;
            background: var(--primary-color);
            color: white;
            padding: 12px 20px;
            margin-bottom: 16px;
            border-radius: var(--border-radius);
            align-items: center;
            gap: 16px;
        }

        .bulk-actions.show {
            display: flex;
        }

        /* Модальные окна - улучшены */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            animation: fadeIn 0.3s ease;
        }

        .modal.show {
            display: flex;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-dialog {
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            max-width: 600px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: var(--shadow-lg);
            animation: slideUp 0.3s ease;
        }

        @keyframes slideUp {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-header {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .modal-title {
            font-size: 20px;
            font-weight: 700;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-muted);
            padding: 4px;
            border-radius: 4px;
            transition: var(--transition);
        }

        .modal-close:hover {
            background: var(--bg-secondary);
            color: var(--text-primary);
        }

        .modal-body {
            padding: 20px;
        }

        .modal-footer {
            padding: 20px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            gap: 12px;
        }

        /* Формы - улучшены */
        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 14px;
            transition: var(--transition);
            font-family: inherit;
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 100px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .form-row-3 {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
        }

        /* Файловые загрузки */
        .file-upload-area {
            border: 2px dashed var(--border-color);
            border-radius: var(--border-radius);
            padding: 40px;
            text-align: center;
            transition: var(--transition);
            cursor: pointer;
        }

        .file-upload-area:hover {
            border-color: var(--primary-color);
            background: rgba(102, 126, 234, 0.05);
        }

        .file-upload-area.dragover {
            border-color: var(--success-color);
            background: rgba(46, 204, 113, 0.05);
        }

        .uploaded-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 16px;
            margin-top: 16px;
        }

        .uploaded-image {
            position: relative;
            border-radius: var(--border-radius);
            overflow: hidden;
            aspect-ratio: 1;
            border: 2px solid var(--border-color);
        }

        .uploaded-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .image-remove {
            position: absolute;
            top: 4px;
            right: 4px;
            background: var(--danger-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            cursor: pointer;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Статус бейджи - улучшены */
        .status-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 4px;
        }

        .status-new {
            background: rgba(52, 152, 219, 0.1);
            color: var(--info-color);
        }

        .status-processing {
            background: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
        }

        .status-completed {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }

        .status-cancelled {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }

        /* Фильтры и поиск */
        .filters-bar {
            background: var(--bg-primary);
            padding: 16px;
            border-radius: var(--border-radius-lg);
            margin-bottom: 20px;
            box-shadow: var(--shadow-sm);
        }

        .filters-content {
            display: flex;
            align-items: center;
            gap: 16px;
            flex-wrap: wrap;
        }

        .search-box {
            position: relative;
            flex: 1;
            min-width: 200px;
        }

        .search-input {
            width: 100%;
            padding: 10px 40px 10px 16px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 14px;
        }

        .search-btn {
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-muted);
            cursor: pointer;
        }

        /* Пустые состояния */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--text-muted);
        }

        .empty-state-icon {
            font-size: 48px;
            margin-bottom: 16px;
        }

        .empty-state h3 {
            margin-bottom: 8px;
            color: var(--text-secondary);
        }

        /* Уведомления */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-lg);
            z-index: 9999;
            animation: slideInRight 0.3s ease;
            max-width: 350px;
        }

        .notification-success {
            background: var(--success-color);
            color: white;
        }

        .notification-error {
            background: var(--danger-color);
            color: white;
        }

        .notification-info {
            background: var(--info-color);
            color: white;
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* Лоадер */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 3000;
        }

        .loading-overlay.show {
            display: flex;
        }

        .spinner {
            border: 4px solid var(--bg-secondary);
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Адаптивность */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .form-row, .form-row-3 {
                grid-template-columns: 1fr;
            }

            .filters-content {
                flex-direction: column;
                align-items: stretch;
            }

            .modal-dialog {
                width: 95%;
                margin: 10px;
            }
        }

        /* Темная тема - НОВОЕ */
        @media (prefers-color-scheme: dark) {
            :root {
                --bg-primary: #1e1e1e;
                --bg-secondary: #2d2d2d;
                --text-primary: #ffffff;
                --text-secondary: #cccccc;
                --text-muted: #999999;
                --border-color: #404040;
            }
        }
    </style>
</head>
<body class='admin-panel'>
    <!-- Боковое меню -->
    <aside class='sidebar' id='sidebar'>
        <div class='sidebar-header'>
            <div class='admin-logo'>
                <div class='logo-icon'>🐠</div>
                <div class='logo-text'>
                    <div class='logo-title'>АкваСбор</div>
                    <div class='logo-subtitle'>MEGA CRM v3.0</div>
                </div>
            </div>
        </div>

        <nav class='sidebar-nav'>
            <div class='nav-section'>
                <div class='nav-title'>📊 Аналитика</div>
                <a href='admin.php?section=dashboard' class='sidebar-link <?= $section === 'dashboard' ? 'active' : '' ?>'>
                    <i class='fas fa-chart-pie'></i>
                    <span>KPI Дашборд</span>
                </a>
                <a href='admin.php?section=analytics' class='sidebar-link <?= $section === 'analytics' ? 'active' : '' ?>'>
                    <i class='fas fa-chart-line'></i>
                    <span>Графики продаж</span>
                    <span class='sidebar-badge'>LIVE</span>
                </a>
            </div>

            <div class='nav-section'>
                <div class='nav-title'>🛒 Магазин</div>
                <a href='admin.php?section=products' class='sidebar-link <?= $section === 'products' ? 'active' : '' ?>'>
                    <i class='fas fa-fish'></i>
                    <span>Товары</span>
                    <span class='sidebar-badge'><?= count(getProducts()) ?></span>
                </a>
                <a href='admin.php?section=categories' class='sidebar-link <?= $section === 'categories' ? 'active' : '' ?>'>
                    <i class='fas fa-tags'></i>
                    <span>Категории</span>
                    <span class='sidebar-badge'><?= count(getCategories()) ?></span>
                </a>
                <a href='admin.php?section=orders' class='sidebar-link <?= $section === 'orders' ? 'active' : '' ?>'>
                    <i class='fas fa-shopping-bag'></i>
                    <span>Заказы</span>
                    <span class='sidebar-badge badge-warning'><?= count(array_filter(getOrders(), fn($o) => $o['status'] === 'new')) ?></span>
                </a>
                <a href='admin.php?section=reviews' class='sidebar-link <?= $section === 'reviews' ? 'active' : '' ?>'>
                    <i class='fas fa-star'></i>
                    <span>Отзывы</span>
                    <span class='sidebar-badge'><?= count(array_filter(getReviews(), fn($r) => !$r['is_approved'])) ?></span>
                </a>
            </div>

            <div class='nav-section'>
                <div class='nav-title'>📝 Контент</div>
                <a href='admin.php?section=news' class='sidebar-link <?= $section === 'news' ? 'active' : '' ?>'>
                    <i class='fas fa-newspaper'></i>
                    <span>Новости</span>
                    <span class='sidebar-badge'><?= count(getNews()) ?></span>
                </a>
                <a href='admin.php?section=pages' class='sidebar-link <?= $section === 'pages' ? 'active' : '' ?>'>
                    <i class='fas fa-file-alt'></i>
                    <span>Страницы</span>
                </a>
            </div>

            <div class='nav-section'>
                <div class='nav-title'>⚙️ Система</div>
                <a href='admin.php?section=settings' class='sidebar-link <?= $section === 'settings' ? 'active' : '' ?>'>
                    <i class='fas fa-cog'></i>
                    <span>Настройки</span>
                    <span class='sidebar-badge badge-premium'>PRO</span>
                </a>
                <a href='admin.php?section=logs' class='sidebar-link <?= $section === 'logs' ? 'active' : '' ?>'>
                    <i class='fas fa-list-alt'></i>
                    <span>Логи системы</span>
                </a>
            </div>
        </nav>

        <div class='sidebar-footer'>
            <div class='admin-profile'>
                <div class='admin-avatar'>👤</div>
                <div class='admin-info'>
                    <div class='admin-name'><?= $_SESSION['admin_name'] ?></div>
                    <div class='admin-role'><?= $_SESSION['admin_role'] ?></div>
                </div>
                <a href='admin.php?action=logout' class='logout-btn' title='Выход'>
                    <i class='fas fa-sign-out-alt'></i>
                </a>
            </div>
        </div>
    </aside>

    <!-- Основной контент -->
    <main class='main-content'>
        <!-- Верхняя панель -->
        <header class='top-bar'>
            <div class='top-bar-left'>
                <h1 class='page-title'><?= $adminData['title'] ?? 'Админ-панель' ?></h1>
            </div>

            <div class='top-bar-right'>
                <button class='btn btn-outline' onclick='toggleSidebar()' id='sidebarToggle'>
                    <i class='fas fa-bars'></i>
                </button>
                <a href='index.php' class='btn btn-outline' target='_blank'>
                    <i class='fas fa-external-link-alt'></i>
                    На сайт
                </a>
            </div>
        </header>

        <!-- Контент страницы -->
        <div class='page-content'>
            <?php if (isset($_SESSION['admin_message'])): ?>
                <div class='notification notification-<?= $_SESSION['admin_message']['type'] ?>' id='adminNotification'>
                    <?= htmlspecialchars($_SESSION['admin_message']['text']) ?>
                </div>
                <?php unset($_SESSION['admin_message']); ?>
            <?php endif; ?>

            <?php renderAdminSection($section, $adminData); ?>
        </div>
    </main>

    <!-- Лоадер -->
    <div class='loading-overlay' id='loadingOverlay'>
        <div class='spinner'></div>
    </div>

    <!-- Скрипты -->
    <script>
        // === БАЗОВЫЕ ФУНКЦИИ АДМИНКИ ===

        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }

        function openModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.remove('show');
                document.body.style.overflow = '';
            }
        }

        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('open');
        }

        function showNotification(message, type = 'info') {
            // Удаляем старые уведомления
            document.querySelectorAll('.notification').forEach(n => n.remove());

            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class='fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}'></i>
                ${message}
            `;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, 4000);
        }

        // === ОБРАБОТЧИК ФОРМ ===
        document.addEventListener('submit', function(e) {
            if (e.target.classList.contains('ajax-form')) {
                e.preventDefault();
                handleAjaxForm(e.target);
            }
        });

        async function handleAjaxForm(form) {
            showLoading();

            const formData = new FormData(form);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Действие выполнено успешно', 'success');

                    if (data.reload) {
                        setTimeout(() => location.reload(), 1500);
                    }

                    if (data.close_modal) {
                        Object.keys(data.close_modal === true ? {'modal': true} : data.close_modal).forEach(modalId => {
                            closeModal(modalId);
                        });
                    }

                    if (data.callback) {
                        window[data.callback](data);
                    }
                } else {
                    showNotification(data.message || 'Произошла ошибка', 'error');
                }
            } catch (error) {
                console.error('AJAX Error:', error);
                showNotification('Ошибка сети', 'error');
            } finally {
                hideLoading();
            }
        }

        // === ФУНКЦИИ ДЛЯ ТАБЛИЦ ===

        function toggleAllCheckboxes(masterCheckbox) {
            const checkboxes = document.querySelectorAll('.bulk-checkbox[data-id]');
            checkboxes.forEach(cb => {
                cb.checked = masterCheckbox.checked;
                toggleRowSelection(cb);
            });
            updateBulkActions();
        }

        function toggleRowSelection(checkbox) {
            const row = checkbox.closest('tr');
            if (checkbox.checked) {
                row.classList.add('selected');
            } else {
                row.classList.remove('selected');
            }
        }

        function updateBulkActions() {
            const selectedCheckboxes = document.querySelectorAll('.bulk-checkbox[data-id]:checked');
            const bulkActions = document.querySelector('.bulk-actions');
            const selectedCount = document.getElementById('selectedCount');

            if (selectedCheckboxes.length > 0) {
                bulkActions?.classList.add('show');
                if (selectedCount) {
                    selectedCount.textContent = selectedCheckboxes.length;
                }
            } else {
                bulkActions?.classList.remove('show');
            }
        }

        function getSelectedIds() {
            const selectedCheckboxes = document.querySelectorAll('.bulk-checkbox[data-id]:checked');
            return Array.from(selectedCheckboxes).map(cb => cb.getAttribute('data-id'));
        }

        async function bulkAction(action, additionalData = {}) {
            const selectedIds = getSelectedIds();

            if (selectedIds.length === 0) {
                showNotification('Выберите элементы для выполнения действия', 'error');
                return;
            }

            if (!confirm(`Выполнить действие "${action}" для ${selectedIds.length} элементов?`)) {
                return;
            }

            showLoading();

            const formData = new FormData();
            formData.append('action', 'bulk_action');
            formData.append('bulk_action', action);
            formData.append('ids', JSON.stringify(selectedIds));
            formData.append('ajax', '1');

            // Добавляем дополнительные данные
            Object.entries(additionalData).forEach(([key, value]) => {
                formData.append(key, value);
            });

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message, 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Произошла ошибка', 'error');
                }
            } catch (error) {
                console.error('Bulk Action Error:', error);
                showNotification('Ошибка выполнения действия', 'error');
            } finally {
                hideLoading();
            }
        }

        // === ФУНКЦИИ ДЛЯ ЗАГРУЗКИ ФАЙЛОВ ===

        function initFileUpload(uploadAreaId, inputId) {
            const uploadArea = document.getElementById(uploadAreaId);
            const fileInput = document.getElementById(inputId);

            if (!uploadArea || !fileInput) return;

            uploadArea.addEventListener('click', () => fileInput.click());

            uploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });

            uploadArea.addEventListener('dragleave', () => {
                uploadArea.classList.remove('dragover');
            });

            uploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                const files = e.dataTransfer.files;
                handleFileSelection(files, inputId);
            });

            fileInput.addEventListener('change', (e) => {
                handleFileSelection(e.target.files, inputId);
            });
        }

        function handleFileSelection(files, inputId) {
            const previewContainer = document.getElementById(inputId.replace('Input', 'Preview'));
            if (!previewContainer) return;

            Array.from(files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const imageDiv = document.createElement('div');
                        imageDiv.className = 'uploaded-image';
                        imageDiv.innerHTML = `
                            <img src='${e.target.result}' alt='Preview'>
                            <button type='button' class='image-remove' onclick='removePreviewImage(this)'>
                                <i class='fas fa-times'></i>
                            </button>
                        `;
                        previewContainer.appendChild(imageDiv);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        function removePreviewImage(button) {
            button.parentElement.remove();
        }

        // === ФИЛЬТРЫ И ПОИСК ===

        let searchTimeout;
        function initSearch(inputId, callback) {
            const searchInput = document.getElementById(inputId);
            if (!searchInput) return;

            searchInput.addEventListener('input', (e) => {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    callback(e.target.value);
                }, 300);
            });
        }

        function filterTable(tableId, searchTerm, columns = []) {
            const table = document.getElementById(tableId);
            if (!table) return;

            const rows = table.querySelectorAll('tbody tr');
            const term = searchTerm.toLowerCase();

            rows.forEach(row => {
                let match = false;

                if (columns.length > 0) {
                    columns.forEach(colIndex => {
                        const cell = row.cells[colIndex];
                        if (cell && cell.textContent.toLowerCase().includes(term)) {
                            match = true;
                        }
                    });
                } else {
                    // Поиск по всем столбцам
                    if (row.textContent.toLowerCase().includes(term)) {
                        match = true;
                    }
                }

                row.style.display = match ? '' : 'none';
            });
        }

        // === ИНИЦИАЛИЗАЦИЯ ===
        document.addEventListener('DOMContentLoaded', function() {
            // Скрываем уведомление через 5 секунд
            const notification = document.getElementById('adminNotification');
            if (notification) {
                setTimeout(() => {
                    notification.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }, 5000);
            }

            // Закрытие модалов по клику вне их
            document.addEventListener('click', function(e) {
                if (e.target.classList.contains('modal')) {
                    closeModal(e.target.id);
                }
            });

            // Инициализация обработчиков для чекбоксов
            document.addEventListener('change', function(e) {
                if (e.target.classList.contains('bulk-checkbox')) {
                    if (e.target.hasAttribute('data-id')) {
                        toggleRowSelection(e.target);
                        updateBulkActions();
                    } else {
                        // Это master checkbox
                        toggleAllCheckboxes(e.target);
                    }
                }
            });
        });

        // === CSS АНИМАЦИИ ===
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideOutRight {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>

<?php

// === ФУНКЦИИ ДАННЫХ АДМИНКИ ===

function getAdminData($section) {
    switch ($section) {
        case 'dashboard':
            return [
                'title' => 'KPI Дашборд',
                'stats' => getDashboardStats()
            ];

        case 'products':
            return [
                'title' => 'Управление товарами',
                'products' => getProducts(),
                'categories' => getCategories()
            ];

        case 'categories':
            return [
                'title' => 'Управление категориями',
                'categories' => getCategories(),
                'products' => getProducts()
            ];

        case 'orders':
            return [
                'title' => 'Управление заказами',
                'orders' => getOrders()
            ];

        case 'reviews':
            return [
                'title' => 'Управление отзывами',
                'reviews' => getReviews()
            ];

        case 'news':
            return [
                'title' => 'Управление новостями',
                'news' => getNews()
            ];

        case 'analytics':
            return [
                'title' => 'Аналитика продаж',
                'charts' => getAnalyticsData()
            ];

        case 'settings':
            return [
                'title' => 'Настройки системы',
                'settings' => getSiteSettings()
            ];

        case 'logs':
            return [
                'title' => 'Системные логи',
                'logs' => getLogs()
            ];

        case 'pages':
            return [
                'title' => 'Управление страницами',
                'pages' => getPages()
            ];

        default:
            return [
                'title' => ucfirst($section),
                'description' => "Раздел '$section' готов к использованию"
            ];
    }
}

// === СТАТИСТИКА ДАШБОРДА ===

function getDashboardStats() {
    $products = getProducts();
    $orders = getOrders();
    $reviews = getReviews();
    $categories = getCategories();

    $totalRevenue = array_sum(array_column($orders, 'total_amount'));
    $newOrders = count(array_filter($orders, fn($o) => $o['status'] === 'new'));
    $lowStock = count(array_filter($products, fn($p) => $p['stock'] <= 5));
    $avgRating = count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0;
    $activeProducts = count(array_filter($products, fn($p) => $p['is_active']));
    $pendingReviews = count(array_filter($reviews, fn($r) => !$r['is_approved']));

    // Данные за последний месяц
    $monthAgo = date('Y-m-d', strtotime('-30 days'));
    $monthlyOrders = array_filter($orders, fn($o) => $o['created_at'] >= $monthAgo);
    $monthlyRevenue = array_sum(array_column($monthlyOrders, 'total_amount'));

    // Рост по сравнению с предыдущим месяцем
    $twoMonthsAgo = date('Y-m-d', strtotime('-60 days'));
    $prevMonthOrders = array_filter($orders, function($o) use ($monthAgo, $twoMonthsAgo) {
        return $o['created_at'] >= $twoMonthsAgo && $o['created_at'] < $monthAgo;
    });
    $prevMonthRevenue = array_sum(array_column($prevMonthOrders, 'total_amount'));

    $revenueGrowth = $prevMonthRevenue > 0 ? 
        round((($monthlyRevenue - $prevMonthRevenue) / $prevMonthRevenue) * 100, 1) : 0;

    return [
        'revenue' => [
            'value' => number_format($totalRevenue, 0, '', ' ') . ' ₽',
            'label' => 'Общая выручка',
            'change' => ($revenueGrowth > 0 ? '+' : '') . $revenueGrowth . '%',
            'color' => 'success',
            'trend' => $revenueGrowth > 0 ? 'up' : ($revenueGrowth < 0 ? 'down' : 'neutral')
        ],
        'orders' => [
            'value' => count($orders),
            'label' => 'Всего заказов',
            'change' => '+' . $newOrders . ' новых',
            'color' => 'info',
            'trend' => 'up'
        ],
        'products' => [
            'value' => $activeProducts,
            'label' => 'Активных товаров',
            'change' => $lowStock . ' заканчиваются',
            'color' => $lowStock > 10 ? 'warning' : 'success',
            'trend' => $lowStock > 10 ? 'down' : 'neutral'
        ],
        'rating' => [
            'value' => number_format($avgRating, 1),
            'label' => 'Средний рейтинг',
            'change' => count($reviews) . ' отзывов',
            'color' => $avgRating >= 4 ? 'success' : ($avgRating >= 3 ? 'warning' : 'danger'),
            'trend' => 'neutral'
        ],
        'categories' => [
            'value' => count(array_filter($categories, fn($c) => $c['active'])),
            'label' => 'Активных категорий',
            'change' => 'из ' . count($categories),
            'color' => 'info',
            'trend' => 'neutral'
        ],
        'pending_reviews' => [
            'value' => $pendingReviews,
            'label' => 'Ожидают модерации',
            'change' => 'отзывов',
            'color' => $pendingReviews > 5 ? 'warning' : 'success',
            'trend' => $pendingReviews > 5 ? 'up' : 'neutral'
        ]
    ];
}

// === РЕНДЕРИНГ РАЗДЕЛОВ ===

function renderAdminSection($section, $data) {
    switch ($section) {
        case 'dashboard':
            renderDashboard($data);
            break;
        case 'products':
            renderProductsSection($data);
            break;
        case 'categories':
            renderCategoriesSection($data);
            break;
        case 'orders':
            renderOrdersSection($data);
            break;
        case 'reviews':
            renderReviewsSection($data);
            break;
        case 'news':
            renderNewsSection($data);
            break;
        case 'analytics':
            renderAnalyticsSection($data);
            break;
        case 'settings':
            renderSettingsSection($data);
            break;
        case 'logs':
            renderLogsSection($data);
            break;
        case 'pages':
            renderPagesSection($data);
            break;
        default:
            renderDefaultSection($section, $data);
    }
}

// === ДАШБОРД ===
function renderDashboard($data) {
    $stats = $data['stats'];
    ?>
    <!-- Статистические карточки -->
    <div class='stats-grid'>
        <?php foreach ($stats as $key => $stat): ?>
            <div class='stat-card stat-<?= $stat['color'] ?>'>
                <div style='display: flex; justify-content: space-between; align-items: start; margin-bottom: 16px;'>
                    <div class='stat-value'><?= $stat['value'] ?></div>
                    <div style='color: var(--<?= $stat['color'] ?>-color);'>
                        <i class='fas fa-<?= $stat['trend'] === 'up' ? 'arrow-up' : ($stat['trend'] === 'down' ? 'arrow-down' : 'minus') ?>'></i>
                    </div>
                </div>
                <div class='stat-label'><?= $stat['label'] ?></div>
                <div class='stat-change <?= $stat['trend'] === 'up' ? 'positive' : ($stat['trend'] === 'down' ? 'negative' : 'neutral') ?>'>
                    <?= $stat['change'] ?>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Быстрые действия -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px;'>
        <div class='stat-card' style='cursor: pointer; border-left-color: var(--primary-color);' onclick='location.href="admin.php?section=products"'>
            <div style='display: flex; align-items: center; gap: 16px;'>
                <div style='font-size: 3em; color: var(--primary-color);'>🛍️</div>
                <div>
                    <div class='stat-label'>Управление товарами</div>
                    <div style='font-size: 14px; color: var(--text-secondary);'>Добавить, редактировать, модерировать</div>
                </div>
            </div>
        </div>

        <div class='stat-card' style='cursor: pointer; border-left-color: var(--warning-color);' onclick='location.href="admin.php?section=orders"'>
            <div style='display: flex; align-items: center; gap: 16px;'>
                <div style='font-size: 3em; color: var(--warning-color);'>📋</div>
                <div>
                    <div class='stat-label'>Обработать заказы</div>
                    <div style='font-size: 14px; color: var(--text-secondary);'>Изменить статусы, управление</div>
                </div>
            </div>
        </div>

        <div class='stat-card' style='cursor: pointer; border-left-color: var(--success-color);' onclick='location.href="admin.php?section=news"'>
            <div style='display: flex; align-items: center; gap: 16px;'>
                <div style='font-size: 3em; color: var(--success-color);'>📰</div>
                <div>
                    <div class='stat-label'>Добавить новость</div>
                    <div style='font-size: 14px; color: var(--text-secondary);'>Создать публикацию</div>
                </div>
            </div>
        </div>

        <div class='stat-card' style='cursor: pointer; border-left-color: var(--info-color);' onclick='location.href="admin.php?section=settings"'>
            <div style='display: flex; align-items: center; gap: 16px;'>
                <div style='font-size: 3em; color: var(--info-color);'>⚙️</div>
                <div>
                    <div class='stat-label'>Настройки</div>
                    <div style='font-size: 14px; color: var(--text-secondary);'>Конфигурация системы</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Последняя активность -->
    <div class='table-container'>
        <div style='padding: 20px 20px 0; display: flex; justify-content: space-between; align-items: center;'>
            <h3 style='margin: 0; color: var(--text-primary);'>📈 Последняя активность</h3>
            <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                <i class='fas fa-sync-alt'></i> Обновить
            </button>
        </div>
        <table class='table'>
            <thead>
                <tr>
                    <th>Время</th>
                    <th>Действие</th>
                    <th>Детали</th>
                    <th>Статус</th>
                </tr>
            </thead>
            <tbody>
                <?php
                $activities = [
                    ['time' => '2 мин назад', 'action' => 'Новый заказ', 'details' => 'Заказ #AQ-2024-0051 на сумму 2,450 ₽', 'status' => 'new', 'icon' => 'shopping-bag'],
                    ['time' => '8 мин назад', 'action' => 'Новый отзыв', 'details' => 'Отзыв на товар "Анубиас Бартера нана"', 'status' => 'processing', 'icon' => 'star'],
                    ['time' => '23 мин назад', 'action' => 'Товар обновлен', 'details' => 'Обновлен товар "Скалярия серебристая"', 'status' => 'completed', 'icon' => 'edit'],
                    ['time' => '1 час назад', 'action' => 'Заказ доставлен', 'details' => 'Заказ #AQ-2024-0049 успешно доставлен', 'status' => 'completed', 'icon' => 'truck'],
                    ['time' => '2 часа назад', 'action' => 'Новая категория', 'details' => 'Добавлена категория "Морские рыбки"', 'status' => 'completed', 'icon' => 'plus']
                ];
                foreach ($activities as $activity): ?>
                    <tr>
                        <td style='color: var(--text-muted); font-size: 13px;'><?= $activity['time'] ?></td>
                        <td>
                            <div style='display: flex; align-items: center; gap: 8px;'>
                                <i class='fas fa-<?= $activity['icon'] ?>' style='color: var(--primary-color);'></i>
                                <span style='font-weight: 600;'><?= $activity['action'] ?></span>
                            </div>
                        </td>
                        <td><?= $activity['details'] ?></td>
                        <td>
                            <span class='status-badge status-<?= $activity['status'] ?>'>
                                <?= $activity['status'] === 'new' ? 'Новое' : ($activity['status'] === 'processing' ? 'Обработка' : 'Выполнено') ?>
                            </span>
                        </td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>
    <?php
}
<?php
// === УПРАВЛЕНИЕ ТОВАРАМИ - МАКСИМАЛЬНО ИСПРАВЛЕНО ===
function renderProductsSection($data) {
    $products = $data['products'];
    $categories = $data['categories'];
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Товары (<?= count($products) ?>)</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Управление каталогом товаров</p>
        </div>
        <div style='display: flex; gap: 12px;'>
            <button class='btn btn-success' onclick='openModal("addProductModal")'>
                <i class='fas fa-plus'></i>
                Добавить товар
            </button>
            <button class='btn btn-outline' onclick='exportProducts()'>
                <i class='fas fa-download'></i>
                Экспорт
            </button>
        </div>
    </div>

    <!-- Фильтры и поиск -->
    <div class='filters-bar'>
        <div class='filters-content'>
            <div class='search-box'>
                <input type='text' id='productSearch' class='search-input' placeholder='Поиск товаров по названию, артикулу...'>
                <button class='search-btn' type='button'>
                    <i class='fas fa-search'></i>
                </button>
            </div>
            <select class='form-select' style='max-width: 200px;' onchange='filterByCategory(this.value)'>
                <option value=''>Все категории</option>
                <?php foreach ($categories as $category): ?>
                    <option value='<?= $category['id'] ?>'><?= htmlspecialchars($category['name']) ?></option>
                <?php endforeach; ?>
            </select>
            <select class='form-select' style='max-width: 150px;' onchange='filterByStock(this.value)'>
                <option value=''>Любой остаток</option>
                <option value='in_stock'>В наличии</option>
                <option value='low_stock'>Мало товара</option>
                <option value='out_of_stock'>Нет в наличии</option>
            </select>
            <select class='form-select' style='max-width: 150px;' onchange='filterByStatus(this.value)'>
                <option value=''>Любой статус</option>
                <option value='active'>Активные</option>
                <option value='inactive'>Неактивные</option>
                <option value='featured'>Популярные</option>
                <option value='new'>Новинки</option>
            </select>
        </div>
    </div>

    <!-- Массовые операции -->
    <div class='bulk-actions' id='bulkActions'>
        <div style='display: flex; align-items: center; gap: 16px;'>
            <span>Выбрано: <strong id='selectedCount'>0</strong> товаров</span>
            <button class='btn btn-success btn-sm' onclick='bulkAction("activate")'>
                <i class='fas fa-eye'></i> Активировать
            </button>
            <button class='btn btn-warning btn-sm' onclick='bulkAction("deactivate")'>
                <i class='fas fa-eye-slash'></i> Деактивировать
            </button>
            <button class='btn btn-outline btn-sm' onclick='openBulkCategoryModal()'>
                <i class='fas fa-tags'></i> Изменить категорию
            </button>
            <button class='btn btn-danger btn-sm' onclick='bulkAction("delete")'>
                <i class='fas fa-trash'></i> Удалить
            </button>
        </div>
    </div>

    <!-- Таблица товаров -->
    <div class='table-container'>
        <table class='table' id='productsTable'>
            <thead>
                <tr>
                    <th style='width: 40px;'>
                        <input type='checkbox' class='bulk-checkbox' onchange='toggleAllCheckboxes(this)'>
                    </th>
                    <th>Изображение</th>
                    <th>Товар</th>
                    <th>Категория</th>
                    <th>Цена</th>
                    <th>Остаток</th>
                    <th>Статус</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($products as $product): ?>
                <tr class='product-row' data-category='<?= $product['category_id'] ?>' 
                    data-stock='<?= $product['stock'] ?>' data-status='<?= $product['is_active'] ? 'active' : 'inactive' ?>'>
                    <td>
                        <input type='checkbox' class='bulk-checkbox' data-id='<?= $product['id'] ?>' onchange='updateBulkActions()'>
                    </td>
                    <td>
                        <div style='width: 60px; height: 60px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-secondary); display: flex; align-items: center; justify-content: center;'>
                            <?php if (!empty($product['images'])): ?>
                                <img src='<?= htmlspecialchars($product['images'][0]) ?>' alt='<?= htmlspecialchars($product['name']) ?>' 
                                     style='width: 100%; height: 100%; object-fit: cover;'>
                            <?php else: ?>
                                <i class='fas fa-image' style='color: var(--text-muted); font-size: 20px;'></i>
                            <?php endif; ?>
                        </div>
                    </td>
                    <td>
                        <div>
                            <div style='font-weight: 600; margin-bottom: 4px; cursor: pointer;' onclick='editProduct(<?= $product['id'] ?>)'>
                                <?= htmlspecialchars(mb_substr($product['name'], 0, 50)) ?>
                                <?php if (mb_strlen($product['name']) > 50): ?>...<?php endif; ?>
                            </div>
                            <div style='font-size: 12px; color: var(--text-muted);'>
                                Артикул: <?= $product['sku'] ?> | ID: <?= $product['id'] ?>
                            </div>
                            <div style='display: flex; gap: 4px; margin-top: 4px;'>
                                <?php if ($product['is_featured']): ?>
                                    <span style='background: gold; color: white; padding: 2px 6px; border-radius: 4px; font-size: 10px;'>🔥 ХИТ</span>
                                <?php endif; ?>
                                <?php if ($product['is_new']): ?>
                                    <span style='background: var(--info-color); color: white; padding: 2px 6px; border-radius: 4px; font-size: 10px;'>✨ НОВИНКА</span>
                                <?php endif; ?>
                            </div>
                        </div>
                    </td>
                    <td>
                        <span style='padding: 4px 8px; background: var(--info-color); color: white; border-radius: 4px; font-size: 11px;'>
                            <?= htmlspecialchars($product['category']) ?>
                        </span>
                    </td>
                    <td>
                        <div style='font-weight: 600; color: var(--success-color);'><?= number_format($product['price'], 0, '', ' ') ?> ₽</div>
                        <?php if ($product['old_price']): ?>
                            <div style='font-size: 11px; color: var(--text-muted); text-decoration: line-through;'>
                                <?= number_format($product['old_price'], 0, '', ' ') ?> ₽
                            </div>
                        <?php endif; ?>
                    </td>
                    <td>
                        <span class='status-badge <?= $product['stock'] <= 0 ? 'status-cancelled' : ($product['stock'] <= 5 ? 'status-processing' : 'status-completed') ?>'>
                            <?= $product['stock'] ?> шт
                        </span>
                    </td>
                    <td>
                        <label style='display: flex; align-items: center; cursor: pointer;'>
                            <input type='checkbox' <?= $product['is_active'] ? 'checked' : '' ?> 
                                   onchange='toggleProductStatus(<?= $product['id'] ?>, this.checked)' 
                                   style='margin-right: 8px;'>
                            <span class='status-badge <?= $product['is_active'] ? 'status-completed' : 'status-cancelled' ?>'>
                                <?= $product['is_active'] ? 'Активен' : 'Скрыт' ?>
                            </span>
                        </label>
                    </td>
                    <td>
                        <div style='display: flex; gap: 4px;'>
                            <button class='btn btn-primary btn-sm' onclick='editProduct(<?= $product['id'] ?>)' title='Редактировать'>
                                <i class='fas fa-edit'></i>
                            </button>
                            <button class='btn btn-outline btn-sm' onclick='duplicateProduct(<?= $product['id'] ?>)' title='Дублировать'>
                                <i class='fas fa-copy'></i>
                            </button>
                            <button class='btn btn-outline btn-sm' onclick='viewProduct(<?= $product['id'] ?>)' title='Просмотр на сайте'>
                                <i class='fas fa-eye'></i>
                            </button>
                            <button class='btn btn-danger btn-sm' onclick='deleteProduct(<?= $product['id'] ?>)' title='Удалить'>
                                <i class='fas fa-trash'></i>
                            </button>
                        </div>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>

    <!-- Модальное окно добавления товара -->
    <div class='modal' id='addProductModal'>
        <div class='modal-dialog' style='max-width: 900px;'>
            <form class='ajax-form' method='POST' enctype='multipart/form-data'>
                <input type='hidden' name='action' value='add_product'>
                <div class='modal-header'>
                    <h3 class='modal-title'>Добавить новый товар</h3>
                    <button type='button' class='modal-close' onclick='closeModal("addProductModal")'>&times;</button>
                </div>
                <div class='modal-body'>
                    <!-- Основная информация -->
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>Название товара *</label>
                            <input type='text' name='name' class='form-input' required 
                                   placeholder='Введите название товара'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Артикул</label>
                            <input type='text' name='sku' class='form-input' 
                                   placeholder='Оставьте пустым для автогенерации'>
                        </div>
                    </div>

                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>Категория *</label>
                            <select name='category_id' class='form-select' required>
                                <option value=''>Выберите категорию</option>
                                <?php foreach ($categories as $category): ?>
                                    <option value='<?= $category['id'] ?>'><?= htmlspecialchars($category['name']) ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Количество *</label>
                            <input type='number' name='stock' class='form-input' min='0' required value='1'>
                        </div>
                    </div>

                    <!-- Цены -->
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>Цена (₽) *</label>
                            <input type='number' name='price' class='form-input' min='0' step='0.01' required>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Старая цена (₽)</label>
                            <input type='number' name='old_price' class='form-input' min='0' step='0.01' 
                                   placeholder='Для показа скидки'>
                        </div>
                    </div>

                    <!-- Описания -->
                    <div class='form-group'>
                        <label class='form-label'>Краткое описание</label>
                        <textarea name='short_description' class='form-textarea' rows='2' 
                                  placeholder='Краткое описание для карточки товара'></textarea>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Полное описание</label>
                        <textarea name='description' class='form-textarea' rows='4' 
                                  placeholder='Подробное описание товара'></textarea>
                    </div>

                    <!-- Изображения -->
                    <div class='form-group'>
                        <label class='form-label'>Изображения товара</label>
                        <div class='file-upload-area' id='productImageUpload'>
                            <i class='fas fa-cloud-upload-alt' style='font-size: 48px; color: var(--text-muted); margin-bottom: 16px;'></i>
                            <p style='margin: 0 0 16px; color: var(--text-muted);'>Перетащите изображения сюда или нажмите для выбора</p>
                            <button type='button' class='btn btn-outline'>Выбрать файлы</button>
                            <input type='file' name='images[]' accept='image/*' multiple style='display: none;' id='productImageInput'>
                        </div>
                        <div class='uploaded-images' id='productImagePreview'></div>
                        <small style='color: var(--text-muted);'>Максимум 10 изображений по 10MB каждое. Форматы: JPG, PNG, WEBP, GIF</small>
                    </div>

                    <!-- Размеры и вес -->
                    <div class='form-row-3'>
                        <div class='form-group'>
                            <label class='form-label'>Длина (см)</label>
                            <input type='number' name='length' class='form-input' min='0' value='10'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Ширина (см)</label>
                            <input type='number' name='width' class='form-input' min='0' value='10'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Высота (см)</label>
                            <input type='number' name='height' class='form-input' min='0' value='10'>
                        </div>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Вес (г)</label>
                        <input type='number' name='weight' class='form-input' min='0' value='100'>
                    </div>

                    <!-- SEO -->
                    <details style='margin: 20px 0;'>
                        <summary style='cursor: pointer; font-weight: 600; margin-bottom: 16px;'>SEO настройки</summary>
                        <div class='form-group'>
                            <label class='form-label'>SEO заголовок</label>
                            <input type='text' name='meta_title' class='form-input' 
                                   placeholder='Оставьте пустым для автогенерации'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>SEO описание</label>
                            <textarea name='meta_description' class='form-textarea' rows='2' 
                                      placeholder='Описание для поисковых систем'></textarea>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Ключевые слова</label>
                            <input type='text' name='meta_keywords' class='form-input' 
                                   placeholder='ключевое слово, еще слово'>
                        </div>
                    </details>

                    <!-- Статусы -->
                    <div style='display: flex; gap: 20px; align-items: center; margin-top: 20px;'>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='is_featured'> 
                            <span>🔥 Популярный товар</span>
                        </label>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='is_new'> 
                            <span>✨ Новинка</span>
                        </label>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='is_active' checked> 
                            <span>👁️ Активен</span>
                        </label>
                    </div>
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("addProductModal")'>Отмена</button>
                    <button type='submit' class='btn btn-success'>
                        <i class='fas fa-save'></i> Сохранить товар
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Модальное окно редактирования товара -->
    <div class='modal' id='editProductModal'>
        <div class='modal-dialog' style='max-width: 900px;'>
            <form class='ajax-form' method='POST' enctype='multipart/form-data' id='editProductForm'>
                <input type='hidden' name='action' value='edit_product'>
                <input type='hidden' name='product_id' id='editProductId'>
                <div class='modal-header'>
                    <h3 class='modal-title'>Редактировать товар</h3>
                    <button type='button' class='modal-close' onclick='closeModal("editProductModal")'>&times;</button>
                </div>
                <div class='modal-body' id='editProductContent'>
                    <!-- Содержимое загружается через AJAX -->
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("editProductModal")'>Отмена</button>
                    <button type='submit' class='btn btn-success'>
                        <i class='fas fa-save'></i> Сохранить изменения
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Модальное окно массового изменения категории -->
    <div class='modal' id='bulkCategoryModal'>
        <div class='modal-dialog'>
            <div class='modal-header'>
                <h3 class='modal-title'>Изменить категорию</h3>
                <button type='button' class='modal-close' onclick='closeModal("bulkCategoryModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div class='form-group'>
                    <label class='form-label'>Новая категория *</label>
                    <select class='form-select' id='bulkCategorySelect' required>
                        <option value=''>Выберите категорию</option>
                        <?php foreach ($categories as $category): ?>
                            <option value='<?= $category['id'] ?>'><?= htmlspecialchars($category['name']) ?></option>
                        <?php endforeach; ?>
                    </select>
                </div>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("bulkCategoryModal")'>Отмена</button>
                <button type='button' class='btn btn-primary' onclick='applyBulkCategory()'>
                    <i class='fas fa-check'></i> Применить
                </button>
            </div>
        </div>
    </div>

    <script>
        // === ИНИЦИАЛИЗАЦИЯ ===
        document.addEventListener('DOMContentLoaded', function() {
            // Инициализация поиска
            initSearch('productSearch', (query) => {
                filterTable('productsTable', query, [2, 3]); // Поиск по названию и категории
            });

            // Инициализация загрузки файлов
            initFileUpload('productImageUpload', 'productImageInput');
        });

        // === ФУНКЦИИ ФИЛЬТРАЦИИ ===
        function filterByCategory(categoryId) {
            const rows = document.querySelectorAll('.product-row');
            rows.forEach(row => {
                if (!categoryId || row.dataset.category === categoryId) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function filterByStock(type) {
            const rows = document.querySelectorAll('.product-row');
            rows.forEach(row => {
                const stock = parseInt(row.dataset.stock);
                let show = true;

                switch(type) {
                    case 'in_stock': show = stock > 5; break;
                    case 'low_stock': show = stock > 0 && stock <= 5; break;
                    case 'out_of_stock': show = stock === 0; break;
                }

                row.style.display = show ? '' : 'none';
            });
        }

        function filterByStatus(status) {
            const rows = document.querySelectorAll('.product-row');
            rows.forEach(row => {
                let show = true;

                switch(status) {
                    case 'active': show = row.dataset.status === 'active'; break;
                    case 'inactive': show = row.dataset.status === 'inactive'; break;
                    case 'featured': show = row.querySelector('.fa-fire') !== null; break;
                    case 'new': show = row.querySelector('.fa-star') !== null; break;
                }

                row.style.display = show ? '' : 'none';
            });
        }

        // === ФУНКЦИИ УПРАВЛЕНИЯ ТОВАРАМИ ===
        async function editProduct(id) {
            showLoading();

            try {
                const response = await fetch(`admin.php?action=get_product&id=${id}&ajax=1`);
                const data = await response.json();

                if (data.success) {
                    document.getElementById('editProductId').value = id;
                    document.getElementById('editProductContent').innerHTML = data.html;
                    openModal('editProductModal');

                    // Инициализируем загрузку файлов для модального окна редактирования
                    if (document.getElementById('editProductImageUpload')) {
                        initFileUpload('editProductImageUpload', 'editProductImageInput');
                    }
                } else {
                    showNotification(data.message || 'Ошибка загрузки данных товара', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети при загрузке товара', 'error');
            } finally {
                hideLoading();
            }
        }

        async function duplicateProduct(id) {
            if (!confirm('Создать копию товара?')) return;

            showLoading();

            const formData = new FormData();
            formData.append('action', 'duplicate_product');
            formData.append('product_id', id);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Товар скопирован', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Ошибка копирования', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            } finally {
                hideLoading();
            }
        }

        async function deleteProduct(id) {
            if (!confirm('Удалить товар? Это действие нельзя отменить.')) return;

            showLoading();

            const formData = new FormData();
            formData.append('action', 'delete_product');
            formData.append('product_id', id);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Товар удален', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Ошибка удаления', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            } finally {
                hideLoading();
            }
        }

        function viewProduct(id) {
            window.open(`index.php?page=product&id=${id}`, '_blank');
        }

        async function toggleProductStatus(id, isActive) {
            const formData = new FormData();
            formData.append('action', 'toggle_product_status');
            formData.append('product_id', id);
            formData.append('is_active', isActive ? '1' : '0');
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Статус изменен', 'success');
                    // Обновляем отображение статуса
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(data.message || 'Ошибка изменения статуса', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }

        // === МАССОВЫЕ ОПЕРАЦИИ ===
        function openBulkCategoryModal() {
            const selectedIds = getSelectedIds();
            if (selectedIds.length === 0) {
                showNotification('Выберите товары для изменения категории', 'error');
                return;
            }
            openModal('bulkCategoryModal');
        }

        function applyBulkCategory() {
            const categoryId = document.getElementById('bulkCategorySelect').value;
            if (!categoryId) {
                showNotification('Выберите категорию', 'error');
                return;
            }

            bulkAction('update_category', { category_id: categoryId });
            closeModal('bulkCategoryModal');
        }

        // === ЭКСПОРТ ===
        function exportProducts() {
            const link = document.createElement('a');
            link.href = 'admin.php?action=export_products';
            link.download = 'products_export.csv';
            link.click();
            showNotification('Экспорт товаров начат', 'info');
        }

        // Переопределяем функцию bulkAction для товаров
        window.originalBulkAction = window.bulkAction;
        window.bulkAction = async function(action, additionalData = {}) {
            const selectedIds = getSelectedIds();

            if (selectedIds.length === 0) {
                showNotification('Выберите товары для выполнения действия', 'error');
                return;
            }

            let confirmMessage = `Выполнить действие "${action}" для ${selectedIds.length} товаров?`;
            if (action === 'delete') {
                confirmMessage = `ВНИМАНИЕ! Вы собираетесь удалить ${selectedIds.length} товаров. Это действие нельзя отменить. Продолжить?`;
            }

            if (!confirm(confirmMessage)) {
                return;
            }

            showLoading();

            const formData = new FormData();
            formData.append('action', 'bulk_products');
            formData.append('bulk_action', action);
            formData.append('ids', JSON.stringify(selectedIds));
            formData.append('ajax', '1');

            // Добавляем дополнительные данные
            Object.entries(additionalData).forEach(([key, value]) => {
                formData.append(key, value);
            });

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message, 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Произошла ошибка', 'error');
                }
            } catch (error) {
                console.error('Bulk Action Error:', error);
                showNotification('Ошибка выполнения действия', 'error');
            } finally {
                hideLoading();
            }
        };
    </script>
    <?php
}

// === УПРАВЛЕНИЕ КАТЕГОРИЯМИ - ИСПРАВЛЕНО ===
function renderCategoriesSection($data) {
    $categories = $data['categories'];
    $products = $data['products'];

    // Подсчет товаров по категориям
    $categoryStats = [];
    foreach ($categories as $category) {
        $categoryStats[$category['id']] = count(array_filter($products, fn($p) => $p['category_id'] == $category['id']));
    }
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Категории (<?= count($categories) ?>)</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Управление категориями товаров</p>
        </div>
        <button class='btn btn-success' onclick='openModal("addCategoryModal")'>
            <i class='fas fa-plus'></i>
            Добавить категорию
        </button>
    </div>

    <!-- Сетка категорий -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 20px;'>
        <?php foreach ($categories as $category): ?>
            <div class='stat-card' style='position: relative; cursor: pointer;' onclick='editCategory(<?= $category['id'] ?>)'>
                <div style='display: flex; align-items: center; justify-content: space-between; margin-bottom: 16px;'>
                    <div style='display: flex; align-items: center; gap: 12px;'>
                        <div style='font-size: 48px;'><?= $category['icon'] ?></div>
                        <div>
                            <h3 style='margin: 0; font-size: 20px;'><?= htmlspecialchars($category['name']) ?></h3>
                            <p style='margin: 4px 0 0; color: var(--text-muted); font-size: 12px;'>
                                ID: <?= $category['id'] ?> | Slug: <?= $category['slug'] ?>
                            </p>
                        </div>
                    </div>
                    <div style='display: flex; flex-direction: column; align-items: end; gap: 8px;'>
                        <span class='status-badge <?= $category['active'] ? 'status-completed' : 'status-cancelled' ?>'>
                            <?= $category['active'] ? 'Активна' : 'Скрыта' ?>
                        </span>
                        <div style='font-size: 12px; color: var(--text-muted);'>
                            Порядок: <?= $category['sort_order'] ?>
                        </div>
                    </div>
                </div>

                <p style='color: var(--text-secondary); margin-bottom: 16px; font-size: 14px; line-height: 1.4;'>
                    <?= htmlspecialchars($category['description']) ?>
                </p>

                <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius);'>
                    <div style='text-align: center;'>
                        <div style='font-size: 24px; font-weight: 700; color: var(--primary-color);'>
                            <?= $categoryStats[$category['id']] ?? 0 ?>
                        </div>
                        <div style='font-size: 12px; color: var(--text-muted);'>товаров</div>
                    </div>
                    <div style='text-align: center;'>
                        <div style='font-size: 16px; font-weight: 600; color: var(--success-color);'>
                            <?= array_sum(array_column(array_filter($products, fn($p) => $p['category_id'] == $category['id']), 'views')) ?>
                        </div>
                        <div style='font-size: 12px; color: var(--text-muted);'>просмотров</div>
                    </div>
                    <div style='text-align: center;'>
                        <div style='font-size: 16px; font-weight: 600; color: var(--warning-color);'>
                            <?= array_sum(array_column(array_filter($products, fn($p) => $p['category_id'] == $category['id']), 'sales')) ?>
                        </div>
                        <div style='font-size: 12px; color: var(--text-muted);'>продаж</div>
                    </div>
                </div>

                <div style='display: flex; gap: 8px;' onclick='event.stopPropagation()'>
                    <button class='btn btn-primary btn-sm' style='flex: 1;' onclick='editCategory(<?= $category['id'] ?>)'>
                        <i class='fas fa-edit'></i> Редактировать
                    </button>
                    <button class='btn btn-outline btn-sm' onclick='viewCategoryProducts(<?= $category['id'] ?>)' title='Товары категории'>
                        <i class='fas fa-eye'></i>
                    </button>
                    <button class='btn btn-warning btn-sm' onclick='toggleCategory(<?= $category['id'] ?>)' title='Переключить статус'>
                        <i class='fas fa-power-off'></i>
                    </button>
                    <?php if (($categoryStats[$category['id']] ?? 0) == 0): ?>
                        <button class='btn btn-danger btn-sm' onclick='deleteCategory(<?= $category['id'] ?>)' title='Удалить'>
                            <i class='fas fa-trash'></i>
                        </button>
                    <?php endif; ?>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Модальное окно добавления категории -->
    <div class='modal' id='addCategoryModal'>
        <div class='modal-dialog'>
            <form class='ajax-form' method='POST'>
                <input type='hidden' name='action' value='add_category'>
                <div class='modal-header'>
                    <h3 class='modal-title'>Добавить новую категорию</h3>
                    <button type='button' class='modal-close' onclick='closeModal("addCategoryModal")'>&times;</button>
                </div>
                <div class='modal-body'>
                    <div class='form-group'>
                        <label class='form-label'>Название категории *</label>
                        <input type='text' name='name' class='form-input' required 
                               placeholder='Введите название категории'>
                    </div>

                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>Иконка (emoji)</label>
                            <input type='text' name='icon' class='form-input' placeholder='🐠' maxlength='4'
                                   style='text-align: center; font-size: 24px;'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Порядок сортировки</label>
                            <input type='number' name='sort_order' class='form-input' min='1' value='<?= count($categories) + 1 ?>'>
                        </div>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Описание</label>
                        <textarea name='description' class='form-textarea' rows='3' 
                                  placeholder='Краткое описание категории'></textarea>
                    </div>

                    <!-- SEO -->
                    <details style='margin: 20px 0;'>
                        <summary style='cursor: pointer; font-weight: 600; margin-bottom: 16px;'>SEO настройки</summary>
                        <div class='form-group'>
                            <label class='form-label'>SEO заголовок</label>
                            <input type='text' name='seo_title' class='form-input' 
                                   placeholder='Заголовок для поисковых систем'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>SEO описание</label>
                            <textarea name='seo_description' class='form-textarea' rows='2' 
                                      placeholder='Описание категории для поисковых систем'></textarea>
                        </div>
                    </details>

                    <div class='form-group'>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='active' checked> 
                            <span>Активная категория</span>
                        </label>
                    </div>
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("addCategoryModal")'>Отмена</button>
                    <button type='submit' class='btn btn-success'>
                        <i class='fas fa-save'></i> Создать категорию
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Модальное окно редактирования категории -->
    <div class='modal' id='editCategoryModal'>
        <div class='modal-dialog'>
            <form class='ajax-form' method='POST' id='editCategoryForm'>
                <input type='hidden' name='action' value='edit_category'>
                <input type='hidden' name='category_id' id='editCategoryId'>
                <div class='modal-header'>
                    <h3 class='modal-title'>Редактировать категорию</h3>
                    <button type='button' class='modal-close' onclick='closeModal("editCategoryModal")'>&times;</button>
                </div>
                <div class='modal-body' id='editCategoryContent'>
                    <!-- Содержимое загружается через AJAX -->
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("editCategoryModal")'>Отмена</button>
                    <button type='submit' class='btn btn-success'>
                        <i class='fas fa-save'></i> Сохранить изменения
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        async function editCategory(id) {
            showLoading();

            try {
                const response = await fetch(`admin.php?action=get_category&id=${id}&ajax=1`);
                const data = await response.json();

                if (data.success) {
                    document.getElementById('editCategoryId').value = id;
                    document.getElementById('editCategoryContent').innerHTML = data.html;
                    openModal('editCategoryModal');
                } else {
                    showNotification(data.message || 'Ошибка загрузки категории', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети при загрузке категории', 'error');
            } finally {
                hideLoading();
            }
        }

        function viewCategoryProducts(id) {
            location.href = `admin.php?section=products&category=${id}`;
        }

        async function toggleCategory(id) {
            const formData = new FormData();
            formData.append('action', 'toggle_category_status');
            formData.append('category_id', id);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Статус категории изменен', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Ошибка изменения статуса', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }

        async function deleteCategory(id) {
            if (!confirm('Удалить категорию? Это действие нельзя отменить.')) return;

            const formData = new FormData();
            formData.append('action', 'delete_category');
            formData.append('category_id', id);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Категория удалена', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Ошибка удаления', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }
    </script>
    <?php
}
?>

<!-- === УПРАВЛЕНИЕ ЗАКАЗАМИ === -->
<?php
function renderOrdersSection($data) {
    $orders = $data['orders'];
    $products = $data['products'];
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Заказы (<?= count($orders) ?>)</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Управление заказами клиентов</p>
        </div>
        <div style='display: flex; gap: 12px;'>
            <button class='btn btn-outline' onclick='exportOrders()'>
                <i class='fas fa-download'></i>
                Экспорт заказов
            </button>
            <button class='btn btn-primary' onclick='refreshOrders()'>
                <i class='fas fa-sync'></i>
                Обновить
            </button>
        </div>
    </div>

    <!-- Статистика заказов -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px;'>
        <?php
        $statusCounts = array_count_values(array_column($orders, 'status'));
        $totalAmount = array_sum(array_column($orders, 'total_amount'));
        $todayOrders = count(array_filter($orders, fn($o) => date('Y-m-d', strtotime($o['created_at'])) === date('Y-m-d')));
        ?>
        <div class='stat-card'>
            <div class='stat-value'><?= count($orders) ?></div>
            <div class='stat-label'>Всего заказов</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $todayOrders ?></div>
            <div class='stat-label'>Сегодня</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= number_format($totalAmount, 0, '', ' ') ?> ₽</div>
            <div class='stat-label'>Общая сумма</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $statusCounts['new'] ?? 0 ?></div>
            <div class='stat-label'>Новые заказы</div>
        </div>
    </div>

    <!-- Фильтры -->
    <div class='filters-bar'>
        <div class='filters-content'>
            <div class='search-box'>
                <input type='text' id='orderSearch' class='search-input' placeholder='Поиск по номеру, клиенту, email...'>
                <button class='search-btn' type='button'>
                    <i class='fas fa-search'></i>
                </button>
            </div>
            <select class='form-select' style='max-width: 150px;' onchange='filterByStatus(this.value)'>
                <option value=''>Все статусы</option>
                <option value='new'>Новые</option>
                <option value='processing'>Обработка</option>
                <option value='shipped'>Отправлен</option>
                <option value='delivered'>Доставлен</option>
                <option value='cancelled'>Отменен</option>
            </select>
            <input type='date' class='form-input' style='max-width: 150px;' onchange='filterByDate(this.value)'>
        </div>
    </div>

    <!-- Таблица заказов -->
    <div class='table-container'>
        <table class='table' id='ordersTable'>
            <thead>
                <tr>
                    <th>№ Заказа</th>
                    <th>Клиент</th>
                    <th>Дата</th>
                    <th>Сумма</th>
                    <th>Статус</th>
                    <th>Оплата</th>
                    <th>Доставка</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($orders as $order): ?>
                <tr class='order-row' data-status='<?= $order['status'] ?>' data-date='<?= date('Y-m-d', strtotime($order['created_at'])) ?>'>
                    <td>
                        <div style='font-weight: 600; color: var(--primary-color);'><?= $order['order_number'] ?></div>
                        <div style='font-size: 12px; color: var(--text-muted);'>ID: <?= $order['id'] ?></div>
                    </td>
                    <td>
                        <div style='font-weight: 600;'><?= htmlspecialchars($order['customer_name']) ?></div>
                        <div style='font-size: 12px; color: var(--text-muted);'><?= htmlspecialchars($order['customer_email']) ?></div>
                        <div style='font-size: 12px; color: var(--text-muted);'><?= htmlspecialchars($order['customer_phone']) ?></div>
                    </td>
                    <td>
                        <div><?= date('d.m.Y', strtotime($order['created_at'])) ?></div>
                        <div style='font-size: 12px; color: var(--text-muted);'><?= date('H:i', strtotime($order['created_at'])) ?></div>
                    </td>
                    <td>
                        <div style='font-weight: 600; color: var(--success-color);'><?= number_format($order['total_amount'], 0, '', ' ') ?> ₽</div>
                        <div style='font-size: 12px; color: var(--text-muted);'><?= $order['items_count'] ?> товаров</div>
                    </td>
                    <td>
                        <select class='form-select status-select' style='padding: 4px 8px; font-size: 12px;' 
                                onchange='updateOrderStatus(<?= $order['id'] ?>, this.value)'>
                            <option value='new' <?= $order['status'] === 'new' ? 'selected' : '' ?>>Новый</option>
                            <option value='processing' <?= $order['status'] === 'processing' ? 'selected' : '' ?>>Обработка</option>
                            <option value='shipped' <?= $order['status'] === 'shipped' ? 'selected' : '' ?>>Отправлен</option>
                            <option value='delivered' <?= $order['status'] === 'delivered' ? 'selected' : '' ?>>Доставлен</option>
                            <option value='cancelled' <?= $order['status'] === 'cancelled' ? 'selected' : '' ?>>Отменен</option>
                        </select>
                    </td>
                    <td>
                        <span class='status-badge status-<?= $order['payment_method'] === 'card' ? 'completed' : 'processing' ?>'>
                            <?= $order['payment_method'] === 'card' ? 'Карта' : 'Наличные' ?>
                        </span>
                    </td>
                    <td>
                        <span class='status-badge status-info'>
                            <?= $order['delivery_method'] === 'delivery' ? 'Доставка' : 'Самовывоз' ?>
                        </span>
                    </td>
                    <td>
                        <div style='display: flex; gap: 4px;'>
                            <button class='btn btn-primary btn-sm' onclick='viewOrder(<?= $order['id'] ?>)' title='Просмотр'>
                                <i class='fas fa-eye'></i>
                            </button>
                            <button class='btn btn-outline btn-sm' onclick='printOrder(<?= $order['id'] ?>)' title='Печать'>
                                <i class='fas fa-print'></i>
                            </button>
                            <?php if ($order['status'] === 'new'): ?>
                            <button class='btn btn-danger btn-sm' onclick='cancelOrder(<?= $order['id'] ?>)' title='Отменить'>
                                <i class='fas fa-times'></i>
                            </button>
                            <?php endif; ?>
                        </div>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>

    <!-- Модальное окно просмотра заказа -->
    <div class='modal' id='viewOrderModal'>
        <div class='modal-dialog' style='max-width: 800px;'>
            <div class='modal-header'>
                <h3 class='modal-title'>Детали заказа</h3>
                <button type='button' class='modal-close' onclick='closeModal("viewOrderModal")'>&times;</button>
            </div>
            <div class='modal-body' id='orderDetails'>
                <!-- Содержимое загружается через AJAX -->
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("viewOrderModal")'>Закрыть</button>
                <button type='button' class='btn btn-primary' onclick='printOrderFromModal()'>
                    <i class='fas fa-print'></i> Печать
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initSearch('orderSearch', (query) => {
                filterTable('ordersTable', query, [0, 1, 2]); // Поиск по номеру, клиенту, дате
            });
        });

        function filterByStatus(status) {
            const rows = document.querySelectorAll('.order-row');
            rows.forEach(row => {
                if (!status || row.dataset.status === status) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function filterByDate(date) {
            const rows = document.querySelectorAll('.order-row');
            rows.forEach(row => {
                if (!date || row.dataset.date === date) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        async function updateOrderStatus(orderId, newStatus) {
            const formData = new FormData();
            formData.append('action', 'update_order_status');
            formData.append('order_id', orderId);
            formData.append('status', newStatus);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Статус заказа обновлен', 'success');
                } else {
                    showNotification(data.message || 'Ошибка обновления статуса', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }

        async function viewOrder(orderId) {
            showLoading();
            try {
                const response = await fetch(`admin.php?action=get_order&id=${orderId}&ajax=1`);
                const data = await response.json();

                if (data.success) {
                    document.getElementById('orderDetails').innerHTML = data.html;
                    openModal('viewOrderModal');
                } else {
                    showNotification('Ошибка загрузки заказа', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            } finally {
                hideLoading();
            }
        }

        function printOrder(orderId) {
            window.open(`admin.php?action=print_order&id=${orderId}`, '_blank');
        }

        function printOrderFromModal() {
            window.print();
        }

        function exportOrders() {
            const link = document.createElement('a');
            link.href = 'admin.php?action=export_orders';
            link.download = 'orders_export.csv';
            link.click();
            showNotification('Экспорт заказов начат', 'info');
        }

        function refreshOrders() {
            location.reload();
        }

        async function cancelOrder(orderId) {
            if (!confirm('Отменить заказ?')) return;
            await updateOrderStatus(orderId, 'cancelled');
        }
    </script>
    <?php
}

// === УПРАВЛЕНИЕ ОТЗЫВАМИ ===
function renderReviewsSection($data) {
    $reviews = $data['reviews'];
    $products = $data['products'];
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Отзывы (<?= count($reviews) ?>)</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Управление отзывами клиентов</p>
        </div>
    </div>

    <!-- Статистика отзывов -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px;'>
        <?php
        $approvedCount = count(array_filter($reviews, fn($r) => $r['is_approved']));
        $pendingCount = count($reviews) - $approvedCount;
        $averageRating = $reviews ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0;
        ?>
        <div class='stat-card'>
            <div class='stat-value'><?= count($reviews) ?></div>
            <div class='stat-label'>Всего отзывов</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $approvedCount ?></div>
            <div class='stat-label'>Одобрено</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $pendingCount ?></div>
            <div class='stat-label'>На модерации</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= number_format($averageRating, 1) ?></div>
            <div class='stat-label'>Средний рейтинг</div>
        </div>
    </div>

    <!-- Фильтры -->
    <div class='filters-bar'>
        <div class='filters-content'>
            <div class='search-box'>
                <input type='text' id='reviewSearch' class='search-input' placeholder='Поиск по тексту отзыва, клиенту...'>
                <button class='search-btn' type='button'>
                    <i class='fas fa-search'></i>
                </button>
            </div>
            <select class='form-select' style='max-width: 150px;' onchange='filterByApproval(this.value)'>
                <option value=''>Все отзывы</option>
                <option value='approved'>Одобренные</option>
                <option value='pending'>На модерации</option>
            </select>
            <select class='form-select' style='max-width: 120px;' onchange='filterByRating(this.value)'>
                <option value=''>Все рейтинги</option>
                <option value='5'>5 звезд</option>
                <option value='4'>4 звезды</option>
                <option value='3'>3 звезды</option>
                <option value='2'>2 звезды</option>
                <option value='1'>1 звезда</option>
            </select>
        </div>
    </div>

    <!-- Сетка отзывов -->
    <div style='display: grid; gap: 20px;' id='reviewsGrid'>
        <?php foreach ($reviews as $review): ?>
        <div class='stat-card review-card' data-approved='<?= $review['is_approved'] ? 'approved' : 'pending' ?>' 
             data-rating='<?= $review['rating'] ?>'>
            <div style='display: flex; justify-content: space-between; align-items: start; margin-bottom: 16px;'>
                <div style='flex: 1;'>
                    <div style='display: flex; align-items: center; gap: 12px; margin-bottom: 8px;'>
                        <div style='font-weight: 600;'><?= htmlspecialchars($review['customer_name']) ?></div>
                        <div style='color: gold;'>
                            <?= str_repeat('★', $review['rating']) . str_repeat('☆', 5 - $review['rating']) ?>
                        </div>
                        <span class='status-badge <?= $review['is_approved'] ? 'status-completed' : 'status-processing' ?>'>
                            <?= $review['is_approved'] ? 'Одобрен' : 'На модерации' ?>
                        </span>
                    </div>
                    <div style='font-size: 12px; color: var(--text-muted); margin-bottom: 8px;'>
                        Товар: <?= htmlspecialchars($review['product_name']) ?>
                    </div>
                    <div style='font-size: 12px; color: var(--text-muted);'>
                        <?= date('d.m.Y H:i', strtotime($review['created_at'])) ?>
                    </div>
                </div>
                <div style='display: flex; gap: 8px;'>
                    <?php if (!$review['is_approved']): ?>
                    <button class='btn btn-success btn-sm' onclick='approveReview(<?= $review['id'] ?>)' title='Одобрить'>
                        <i class='fas fa-check'></i>
                    </button>
                    <?php endif; ?>
                    <button class='btn btn-danger btn-sm' onclick='deleteReview(<?= $review['id'] ?>)' title='Удалить'>
                        <i class='fas fa-trash'></i>
                    </button>
                </div>
            </div>

            <?php if ($review['title']): ?>
            <h4 style='margin: 0 0 8px 0; font-size: 16px;'><?= htmlspecialchars($review['title']) ?></h4>
            <?php endif; ?>

            <p style='margin: 0; line-height: 1.5; color: var(--text-secondary);'>
                <?= nl2br(htmlspecialchars($review['text'])) ?>
            </p>
        </div>
        <?php endforeach; ?>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initSearch('reviewSearch', (query) => {
                const cards = document.querySelectorAll('.review-card');
                cards.forEach(card => {
                    const text = card.textContent.toLowerCase();
                    card.style.display = text.includes(query.toLowerCase()) ? '' : 'none';
                });
            });
        });

        function filterByApproval(status) {
            const cards = document.querySelectorAll('.review-card');
            cards.forEach(card => {
                if (!status || card.dataset.approved === status) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        function filterByRating(rating) {
            const cards = document.querySelectorAll('.review-card');
            cards.forEach(card => {
                if (!rating || card.dataset.rating === rating) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        async function approveReview(reviewId) {
            const formData = new FormData();
            formData.append('action', 'approve_review');
            formData.append('review_id', reviewId);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (data.success) {
                    showNotification('Отзыв одобрен', 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(data.message || 'Ошибка одобрения', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }

        async function deleteReview(reviewId) {
            if (!confirm('Удалить отзыв?')) return;

            const formData = new FormData();
            formData.append('action', 'delete_review');
            formData.append('review_id', reviewId);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (data.success) {
                    showNotification('Отзыв удален', 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(data.message || 'Ошибка удаления', 'error');
                }
            } catch (error) {
                showNotification('Ошибка сети', 'error');
            }
        }
    </script>
    <?php
}

// === УПРАВЛЕНИЕ НОВОСТЯМИ ===
function renderNewsSection($data) {
    $news = $data['news'];
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Новости (<?= count($news) ?>)</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Управление новостями и статьями</p>
        </div>
        <button class='btn btn-success' onclick='openModal("addNewsModal")'>
            <i class='fas fa-plus'></i>
            Добавить новость
        </button>
    </div>

    <!-- Статистика новостей -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px;'>
        <?php
        $publishedCount = count(array_filter($news, fn($n) => $n['is_published']));
        $draftCount = count($news) - $publishedCount;
        $totalViews = array_sum(array_column($news, 'views'));
        ?>
        <div class='stat-card'>
            <div class='stat-value'><?= count($news) ?></div>
            <div class='stat-label'>Всего новостей</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $publishedCount ?></div>
            <div class='stat-label'>Опубликовано</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $draftCount ?></div>
            <div class='stat-label'>Черновики</div>
        </div>
        <div class='stat-card'>
            <div class='stat-value'><?= $totalViews ?></div>
            <div class='stat-label'>Всего просмотров</div>
        </div>
    </div>

    <!-- Фильтры -->
    <div class='filters-bar'>
        <div class='filters-content'>
            <div class='search-box'>
                <input type='text' id='newsSearch' class='search-input' placeholder='Поиск новостей...'>
                <button class='search-btn' type='button'>
                    <i class='fas fa-search'></i>
                </button>
            </div>
            <select class='form-select' style='max-width: 150px;' onchange='filterByStatus(this.value)'>
                <option value=''>Все новости</option>
                <option value='published'>Опубликованные</option>
                <option value='draft'>Черновики</option>
                <option value='featured'>Важные</option>
            </select>
        </div>
    </div>

    <!-- Сетка новостей -->
    <div style='display: grid; gap: 20px;' id='newsGrid'>
        <?php foreach ($news as $item): ?>
        <div class='stat-card news-card' data-status='<?= $item['is_published'] ? 'published' : 'draft' ?>'>
            <div style='display: flex; justify-content: space-between; align-items: start; margin-bottom: 16px;'>
                <div style='flex: 1;'>
                    <div style='display: flex; align-items: center; gap: 12px; margin-bottom: 8px;'>
                        <h3 style='margin: 0; font-size: 18px; cursor: pointer;' onclick='editNews(<?= $item['id'] ?>)'>
                            <?= htmlspecialchars($item['title']) ?>
                        </h3>
                        <span class='status-badge <?= $item['is_published'] ? 'status-completed' : 'status-processing' ?>'>
                            <?= $item['is_published'] ? 'Опубликована' : 'Черновик' ?>
                        </span>
                        <?php if ($item['is_featured']): ?>
                        <span class='status-badge' style='background: gold; color: white;'>Важная</span>
                        <?php endif; ?>
                    </div>
                    <div style='font-size: 12px; color: var(--text-muted); margin-bottom: 8px;'>
                        <?= date('d.m.Y H:i', strtotime($item['created_at'])) ?> | Просмотров: <?= $item['views'] ?>
                    </div>
                </div>
                <div style='display: flex; gap: 8px;'>
                    <button class='btn btn-primary btn-sm' onclick='editNews(<?= $item['id'] ?>)' title='Редактировать'>
                        <i class='fas fa-edit'></i>
                    </button>
                    <button class='btn btn-outline btn-sm' onclick='viewNews(<?= $item['id'] ?>)' title='Просмотр'>
                        <i class='fas fa-eye'></i>
                    </button>
                    <button class='btn btn-warning btn-sm' onclick='toggleNews(<?= $item['id'] ?>)' title='Переключить статус'>
                        <i class='fas fa-power-off'></i>
                    </button>
                    <button class='btn btn-danger btn-sm' onclick='deleteNews(<?= $item['id'] ?>)' title='Удалить'>
                        <i class='fas fa-trash'></i>
                    </button>
                </div>
            </div>

            <p style='margin: 0 0 12px 0; color: var(--text-secondary); line-height: 1.5;'>
                <?= htmlspecialchars($item['excerpt']) ?>
            </p>
        </div>
        <?php endforeach; ?>
    </div>

    <!-- Модальное окно добавления новости -->
    <div class='modal' id='addNewsModal'>
        <div class='modal-dialog' style='max-width: 800px;'>
            <form class='ajax-form' method='POST'>
                <input type='hidden' name='action' value='add_news'>
                <div class='modal-header'>
                    <h3 class='modal-title'>Добавить новость</h3>
                    <button type='button' class='modal-close' onclick='closeModal("addNewsModal")'>&times;</button>
                </div>
                <div class='modal-body'>
                    <div class='form-group'>
                        <label class='form-label'>Заголовок *</label>
                        <input type='text' name='title' class='form-input' required>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Краткое описание *</label>
                        <textarea name='excerpt' class='form-textarea' rows='2' required></textarea>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Полный текст *</label>
                        <textarea name='content' class='form-textarea' rows='8' required></textarea>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Изображение (URL)</label>
                        <input type='url' name='image' class='form-input' placeholder='https://example.com/image.jpg'>
                    </div>

                    <!-- SEO -->
                    <details style='margin: 20px 0;'>
                        <summary style='cursor: pointer; font-weight: 600; margin-bottom: 16px;'>SEO настройки</summary>
                        <div class='form-group'>
                            <label class='form-label'>SEO заголовок</label>
                            <input type='text' name='meta_title' class='form-input'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>SEO описание</label>
                            <textarea name='meta_description' class='form-textarea' rows='2'></textarea>
                        </div>
                    </details>

                    <div style='display: flex; gap: 20px; align-items: center;'>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='is_published' checked>
                            <span>Опубликовать</span>
                        </label>
                        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                            <input type='checkbox' name='is_featured'>
                            <span>Важная новость</span>
                        </label>
                    </div>
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("addNewsModal")'>Отмена</button>
                    <button type='submit' class='btn btn-success'>
                        <i class='fas fa-save'></i> Сохранить
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initSearch('newsSearch', (query) => {
                const cards = document.querySelectorAll('.news-card');
                cards.forEach(card => {
                    const text = card.textContent.toLowerCase();
                    card.style.display = text.includes(query.toLowerCase()) ? '' : 'none';
                });
            });
        });

        function filterByStatus(status) {
            const cards = document.querySelectorAll('.news-card');
            cards.forEach(card => {
                if (!status || card.dataset.status === status) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        async function editNews(id) {
            // Аналогично editProduct
            showNotification('Функция в разработке', 'info');
        }

        function viewNews(id) {
            window.open(`index.php?page=news&id=${id}`, '_blank');
        }

        async function toggleNews(id) {
            // Аналогично toggleCategory
            showNotification('Функция в разработке', 'info');
        }

        async function deleteNews(id) {
            if (!confirm('Удалить новость?')) return;
            showNotification('Функция в разработке', 'info');
        }
    </script>
    <?php
}

// === НАСТРОЙКИ САЙТА ===
function renderSettingsSection($data) {
    $settings = $data['settings'];
    ?>
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;'>
        <div>
            <h2 style='margin: 0; color: var(--text-primary);'>Настройки сайта</h2>
            <p style='margin: 5px 0 0; color: var(--text-secondary);'>Основные настройки интернет-магазина</p>
        </div>
    </div>

    <form class='ajax-form' method='POST' style='max-width: 800px;'>
        <input type='hidden' name='action' value='update_settings'>

        <!-- Основные настройки -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Основная информация</h3>

            <div class='form-row'>
                <div class='form-group'>
                    <label class='form-label'>Название сайта</label>
                    <input type='text' name='site_name' class='form-input' 
                           value='<?= htmlspecialchars($settings['site_name']) ?>'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Валюта</label>
                    <input type='text' name='currency' class='form-input' 
                           value='<?= htmlspecialchars($settings['currency']) ?>'>
                </div>
            </div>

            <div class='form-group'>
                <label class='form-label'>Описание сайта</label>
                <textarea name='site_description' class='form-textarea' rows='2'><?= htmlspecialchars($settings['site_description']) ?></textarea>
            </div>

            <div class='form-group'>
                <label class='form-label'>Ключевые слова</label>
                <input type='text' name='site_keywords' class='form-input' 
                       value='<?= htmlspecialchars($settings['site_keywords']) ?>'>
            </div>
        </div>

        <!-- Контакты -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Контактная информация</h3>

            <div class='form-row'>
                <div class='form-group'>
                    <label class='form-label'>Email администратора</label>
                    <input type='email' name='admin_email' class='form-input' 
                           value='<?= htmlspecialchars($settings['admin_email']) ?>'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Телефон</label>
                    <input type='text' name='phone' class='form-input' 
                           value='<?= htmlspecialchars($settings['phone']) ?>'>
                </div>
            </div>

            <div class='form-group'>
                <label class='form-label'>Адрес</label>
                <input type='text' name='address' class='form-input' 
                       value='<?= htmlspecialchars($settings['address']) ?>'>
            </div>

            <div class='form-group'>
                <label class='form-label'>Часы работы</label>
                <input type='text' name='working_hours' class='form-input' 
                       value='<?= htmlspecialchars($settings['working_hours']) ?>'>
            </div>
        </div>

        <!-- Магазин -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Настройки магазина</h3>

            <div class='form-row-3'>
                <div class='form-group'>
                    <label class='form-label'>Товаров на страницу</label>
                    <input type='number' name='products_per_page' class='form-input' min='1' max='100'
                           value='<?= $settings['products_per_page'] ?>'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Минимальная сумма заказа (₽)</label>
                    <input type='number' name='min_order_amount' class='form-input' min='0'
                           value='<?= $settings['min_order_amount'] ?>'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Бесплатная доставка от (₽)</label>
                    <input type='number' name='free_shipping_from' class='form-input' min='0'
                           value='<?= $settings['free_shipping_from'] ?>'>
                </div>
            </div>
        </div>

        <!-- Социальные сети -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Социальные сети</h3>

            <div class='form-row'>
                <div class='form-group'>
                    <label class='form-label'>ВКонтакте</label>
                    <input type='url' name='social_vk' class='form-input' 
                           value='<?= htmlspecialchars($settings['social_vk']) ?>' placeholder='https://vk.com/...'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Telegram</label>
                    <input type='url' name='social_telegram' class='form-input' 
                           value='<?= htmlspecialchars($settings['social_telegram']) ?>' placeholder='https://t.me/...'>
                </div>
            </div>

            <div class='form-row'>
                <div class='form-group'>
                    <label class='form-label'>Instagram</label>
                    <input type='url' name='social_instagram' class='form-input' 
                           value='<?= htmlspecialchars($settings['social_instagram']) ?>' placeholder='https://instagram.com/...'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>YouTube</label>
                    <input type='url' name='social_youtube' class='form-input' 
                           value='<?= htmlspecialchars($settings['social_youtube']) ?>' placeholder='https://youtube.com/...'>
                </div>
            </div>
        </div>

        <!-- Аналитика -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Аналитика и SEO</h3>

            <div class='form-row'>
                <div class='form-group'>
                    <label class='form-label'>Google Analytics ID</label>
                    <input type='text' name='google_analytics' class='form-input' 
                           value='<?= htmlspecialchars($settings['google_analytics']) ?>' placeholder='GA-XXXXXXXXX-X'>
                </div>
                <div class='form-group'>
                    <label class='form-label'>Яндекс.Метрика ID</label>
                    <input type='text' name='yandex_metrika' class='form-input' 
                           value='<?= htmlspecialchars($settings['yandex_metrika']) ?>' placeholder='12345678'>
                </div>
            </div>
        </div>

        <!-- Дополнительно -->
        <div class='stat-card' style='margin-bottom: 30px;'>
            <h3 style='margin: 0 0 20px 0;'>Дополнительные настройки</h3>

            <div class='form-group'>
                <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
                    <input type='checkbox' name='maintenance_mode' <?= $settings['maintenance_mode'] ? 'checked' : '' ?>>
                    <span>Режим обслуживания (сайт будет недоступен для посетителей)</span>
                </label>
            </div>
        </div>

        <div style='text-align: center;'>
            <button type='submit' class='btn btn-success btn-lg'>
                <i class='fas fa-save'></i>
                Сохранить настройки
            </button>
        </div>
    </form>
    <?php
}

// === ПАНЕЛЬ УПРАВЛЕНИЯ (DASHBOARD) ===
function renderDashboardSection($data) {
    $products = $data['products'];
    $orders = $data['orders'];
    $reviews = $data['reviews'];
    ?>
    <div style='margin-bottom: 24px;'>
        <h2 style='margin: 0; color: var(--text-primary);'>Панель управления</h2>
        <p style='margin: 5px 0 0; color: var(--text-secondary);'>Обзор состояния интернет-магазина</p>
    </div>

    <!-- Основная статистика -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px;'>
        <?php
        $totalOrders = count($orders);
        $totalRevenue = array_sum(array_column($orders, 'total_amount'));
        $totalProducts = count($products);
        $totalReviews = count($reviews);
        $todayOrders = count(array_filter($orders, fn($o) => date('Y-m-d', strtotime($o['created_at'])) === date('Y-m-d')));
        ?>
        <div class='stat-card'>
            <div class='stat-icon' style='color: var(--primary-color);'><i class='fas fa-shopping-cart'></i></div>
            <div class='stat-content'>
                <div class='stat-value'><?= $totalOrders ?></div>
                <div class='stat-label'>Всего заказов</div>
                <div class='stat-change'>+<?= $todayOrders ?> сегодня</div>
            </div>
        </div>

        <div class='stat-card'>
            <div class='stat-icon' style='color: var(--success-color);'><i class='fas fa-ruble-sign'></i></div>
            <div class='stat-content'>
                <div class='stat-value'><?= number_format($totalRevenue, 0, '', ' ') ?> ₽</div>
                <div class='stat-label'>Общий доход</div>
                <div class='stat-change'>Средний чек: <?= $totalOrders ? number_format($totalRevenue / $totalOrders, 0, '', ' ') : 0 ?> ₽</div>
            </div>
        </div>

        <div class='stat-card'>
            <div class='stat-icon' style='color: var(--info-color);'><i class='fas fa-box'></i></div>
            <div class='stat-content'>
                <div class='stat-value'><?= $totalProducts ?></div>
                <div class='stat-label'>Товаров</div>
                <div class='stat-change'><?= count(array_filter($products, fn($p) => $p['is_active'])) ?> активных</div>
            </div>
        </div>

        <div class='stat-card'>
            <div class='stat-icon' style='color: var(--warning-color);'><i class='fas fa-star'></i></div>
            <div class='stat-content'>
                <div class='stat-value'><?= $totalReviews ?></div>
                <div class='stat-label'>Отзывов</div>
                <div class='stat-change'><?= count(array_filter($reviews, fn($r) => !$r['is_approved'])) ?> на модерации</div>
            </div>
        </div>
    </div>

    <!-- Графики и диаграммы (заглушки) -->
    <div style='display: grid; grid-template-columns: 2fr 1fr; gap: 30px; margin-bottom: 30px;'>
        <div class='stat-card'>
            <h3 style='margin: 0 0 20px 0;'>Продажи за последние 30 дней</h3>
            <div style='height: 300px; background: var(--bg-secondary); border-radius: var(--border-radius); display: flex; align-items: center; justify-content: center; color: var(--text-muted);'>
                <div style='text-align: center;'>
                    <i class='fas fa-chart-line' style='font-size: 48px; margin-bottom: 16px;'></i>
                    <p>График продаж</p>
                </div>
            </div>
        </div>

        <div class='stat-card'>
            <h3 style='margin: 0 0 20px 0;'>Топ категории</h3>
            <div style='height: 300px; background: var(--bg-secondary); border-radius: var(--border-radius); display: flex; align-items: center; justify-content: center; color: var(--text-muted);'>
                <div style='text-align: center;'>
                    <i class='fas fa-chart-pie' style='font-size: 48px; margin-bottom: 16px;'></i>
                    <p>Диаграмма категорий</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Последние заказы -->
    <div class='stat-card' style='margin-bottom: 30px;'>
        <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;'>
            <h3 style='margin: 0;'>Последние заказы</h3>
            <a href='?section=orders' class='btn btn-outline btn-sm'>Все заказы</a>
        </div>

        <div class='table-container'>
            <table class='table'>
                <thead>
                    <tr>
                        <th>Заказ</th>
                        <th>Клиент</th>
                        <th>Дата</th>
                        <th>Сумма</th>
                        <th>Статус</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach (array_slice($orders, -10) as $order): ?>
                    <tr>
                        <td><?= $order['order_number'] ?></td>
                        <td><?= htmlspecialchars($order['customer_name']) ?></td>
                        <td><?= date('d.m.Y H:i', strtotime($order['created_at'])) ?></td>
                        <td><?= number_format($order['total_amount'], 0, '', ' ') ?> ₽</td>
                        <td>
                            <span class='status-badge status-<?= $order['status'] === 'delivered' ? 'completed' : ($order['status'] === 'cancelled' ? 'cancelled' : 'processing') ?>'>
                                <?= $order['status_label'] ?>
                            </span>
                        </td>
                    </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Товары с низким остатком -->
    <div class='stat-card'>
        <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;'>
            <h3 style='margin: 0;'>Товары с низким остатком</h3>
            <a href='?section=products' class='btn btn-outline btn-sm'>Все товары</a>
        </div>

        <div style='display: grid; gap: 12px;'>
            <?php 
            $lowStockProducts = array_filter($products, fn($p) => $p['stock'] <= 5);
            foreach (array_slice($lowStockProducts, 0, 5) as $product): 
            ?>
            <div style='display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius);'>
                <div>
                    <div style='font-weight: 600;'><?= htmlspecialchars(mb_substr($product['name'], 0, 40)) ?><?= mb_strlen($product['name']) > 40 ? '...' : '' ?></div>
                    <div style='font-size: 12px; color: var(--text-muted);'>Артикул: <?= $product['sku'] ?></div>
                </div>
                <span class='status-badge status-<?= $product['stock'] === 0 ? 'cancelled' : 'processing' ?>'>
                    <?= $product['stock'] ?> шт
                </span>
            </div>
            <?php endforeach; ?>
        </div>
    </div>
    <?php
}
// === ОБРАБОТЧИКИ AJAX ЗАПРОСОВ ===

// Обработка AJAX запросов
if (isset($_POST['ajax']) || isset($_GET['ajax'])) {
    header('Content-Type: application/json');

    $action = $_POST['action'] ?? $_GET['action'] ?? '';

    try {
        switch ($action) {
            // === ТОВАРЫ ===
            case 'add_product':
                $result = createProduct($_POST, $_FILES);
                echo json_encode($result);
                break;

            case 'edit_product':
                $result = updateProduct($_POST['product_id'], $_POST, $_FILES);
                echo json_encode($result);
                break;

            case 'get_product':
                $product = getProductById($_GET['id']);
                if ($product) {
                    $categories = getCategories();
                    ob_start();
                    renderEditProductForm($product, $categories);
                    $html = ob_get_clean();
                    echo json_encode(['success' => true, 'html' => $html]);
                } else {
                    echo json_encode(['success' => false, 'message' => 'Товар не найден']);
                }
                break;

            case 'delete_product':
                $result = deleteProduct($_POST['product_id']);
                echo json_encode($result);
                break;

            case 'duplicate_product':
                $result = duplicateProduct($_POST['product_id']);
                echo json_encode($result);
                break;

            case 'toggle_product_status':
                $result = toggleProductStatus($_POST['product_id'], $_POST['is_active']);
                echo json_encode($result);
                break;

            case 'bulk_products':
                $result = bulkProductAction($_POST['bulk_action'], json_decode($_POST['ids'], true), $_POST);
                echo json_encode($result);
                break;

            // === КАТЕГОРИИ ===
            case 'add_category':
                $result = createCategory($_POST);
                echo json_encode($result);
                break;

            case 'edit_category':
                $result = updateCategory($_POST['category_id'], $_POST);
                echo json_encode($result);
                break;

            case 'get_category':
                $category = getCategoryById($_GET['id']);
                if ($category) {
                    ob_start();
                    renderEditCategoryForm($category);
                    $html = ob_get_clean();
                    echo json_encode(['success' => true, 'html' => $html]);
                } else {
                    echo json_encode(['success' => false, 'message' => 'Категория не найдена']);
                }
                break;

            case 'delete_category':
                $result = deleteCategory($_POST['category_id']);
                echo json_encode($result);
                break;

            case 'toggle_category_status':
                $result = toggleCategoryStatus($_POST['category_id']);
                echo json_encode($result);
                break;

            // === ЗАКАЗЫ ===
            case 'update_order_status':
                $result = updateOrderStatus($_POST['order_id'], $_POST['status']);
                echo json_encode($result);
                break;

            case 'get_order':
                $order = getOrderById($_GET['id']);
                if ($order) {
                    ob_start();
                    renderOrderDetails($order);
                    $html = ob_get_clean();
                    echo json_encode(['success' => true, 'html' => $html]);
                } else {
                    echo json_encode(['success' => false, 'message' => 'Заказ не найден']);
                }
                break;

            // === ОТЗЫВЫ ===
            case 'approve_review':
                $result = approveReview($_POST['review_id']);
                echo json_encode($result);
                break;

            case 'delete_review':
                $result = deleteReview($_POST['review_id']);
                echo json_encode($result);
                break;

            // === НОВОСТИ ===
            case 'add_news':
                $result = createNews($_POST);
                echo json_encode($result);
                break;

            // === НАСТРОЙКИ ===
            case 'update_settings':
                $result = updateSiteSettings($_POST);
                echo json_encode($result);
                break;

            default:
                echo json_encode(['success' => false, 'message' => 'Неизвестное действие']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()]);
    }
    exit;
}

// === СЛУЖЕБНЫЕ ФУНКЦИИ ===

function renderEditProductForm($product, $categories) {
    ?>
    <!-- Основная информация -->
    <div class='form-row'>
        <div class='form-group'>
            <label class='form-label'>Название товара *</label>
            <input type='text' name='name' class='form-input' required
                   value='<?= htmlspecialchars($product['name']) ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>Артикул</label>
            <input type='text' name='sku' class='form-input'
                   value='<?= htmlspecialchars($product['sku']) ?>'>
        </div>
    </div>

    <div class='form-row'>
        <div class='form-group'>
            <label class='form-label'>Категория *</label>
            <select name='category_id' class='form-select' required>
                <?php foreach ($categories as $category): ?>
                    <option value='<?= $category['id'] ?>' <?= $category['id'] == $product['category_id'] ? 'selected' : '' ?>>
                        <?= htmlspecialchars($category['name']) ?>
                    </option>
                <?php endforeach; ?>
            </select>
        </div>
        <div class='form-group'>
            <label class='form-label'>Количество *</label>
            <input type='number' name='stock' class='form-input' min='0' required 
                   value='<?= $product['stock'] ?>'>
        </div>
    </div>

    <!-- Цены -->
    <div class='form-row'>
        <div class='form-group'>
            <label class='form-label'>Цена (₽) *</label>
            <input type='number' name='price' class='form-input' min='0' step='0.01' required
                   value='<?= $product['price'] ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>Старая цена (₽)</label>
            <input type='number' name='old_price' class='form-input' min='0' step='0.01'
                   value='<?= $product['old_price'] ?>'>
        </div>
    </div>

    <!-- Описания -->
    <div class='form-group'>
        <label class='form-label'>Краткое описание</label>
        <textarea name='short_description' class='form-textarea' rows='2'><?= htmlspecialchars($product['short_description']) ?></textarea>
    </div>

    <div class='form-group'>
        <label class='form-label'>Полное описание</label>
        <textarea name='description' class='form-textarea' rows='4'><?= htmlspecialchars($product['description']) ?></textarea>
    </div>

    <!-- Текущие изображения -->
    <?php if (!empty($product['images'])): ?>
    <div class='form-group'>
        <label class='form-label'>Текущие изображения</label>
        <div style='display: flex; gap: 12px; flex-wrap: wrap; margin-bottom: 16px;'>
            <?php foreach ($product['images'] as $index => $image): ?>
            <div style='position: relative; width: 100px; height: 100px; border-radius: var(--border-radius); overflow: hidden; border: 2px solid var(--border-color);'>
                <img src='<?= htmlspecialchars($image) ?>' style='width: 100%; height: 100%; object-fit: cover;'>
                <button type='button' onclick='removeProductImage(<?= $product['id'] ?>, <?= $index ?>)' 
                        style='position: absolute; top: 4px; right: 4px; width: 24px; height: 24px; background: var(--danger-color); color: white; border: none; border-radius: 50%; cursor: pointer; font-size: 12px; display: flex; align-items: center; justify-content: center;'>
                    ×
                </button>
            </div>
            <?php endforeach; ?>
        </div>
    </div>
    <?php endif; ?>

    <!-- Добавить новые изображения -->
    <div class='form-group'>
        <label class='form-label'>Добавить изображения</label>
        <div class='file-upload-area' id='editProductImageUpload'>
            <i class='fas fa-cloud-upload-alt' style='font-size: 48px; color: var(--text-muted); margin-bottom: 16px;'></i>
            <p style='margin: 0 0 16px; color: var(--text-muted);'>Добавить новые изображения</p>
            <button type='button' class='btn btn-outline'>Выбрать файлы</button>
            <input type='file' name='images[]' accept='image/*' multiple style='display: none;' id='editProductImageInput'>
        </div>
    </div>

    <!-- Размеры и вес -->
    <div class='form-row-3'>
        <div class='form-group'>
            <label class='form-label'>Длина (см)</label>
            <input type='number' name='length' class='form-input' min='0' 
                   value='<?= $product['dimensions']['length'] ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>Ширина (см)</label>
            <input type='number' name='width' class='form-input' min='0' 
                   value='<?= $product['dimensions']['width'] ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>Высота (см)</label>
            <input type='number' name='height' class='form-input' min='0' 
                   value='<?= $product['dimensions']['height'] ?>'>
        </div>
    </div>

    <div class='form-group'>
        <label class='form-label'>Вес (г)</label>
        <input type='number' name='weight' class='form-input' min='0' 
               value='<?= $product['weight'] ?>'>
    </div>

    <!-- SEO -->
    <details style='margin: 20px 0;'>
        <summary style='cursor: pointer; font-weight: 600; margin-bottom: 16px;'>SEO настройки</summary>
        <div class='form-group'>
            <label class='form-label'>SEO заголовок</label>
            <input type='text' name='meta_title' class='form-input'
                   value='<?= htmlspecialchars($product['meta_title']) ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>SEO описание</label>
            <textarea name='meta_description' class='form-textarea' rows='2'><?= htmlspecialchars($product['meta_description']) ?></textarea>
        </div>
        <div class='form-group'>
            <label class='form-label'>Ключевые слова</label>
            <input type='text' name='meta_keywords' class='form-input'
                   value='<?= htmlspecialchars($product['meta_keywords']) ?>'>
        </div>
    </details>

    <!-- Статусы -->
    <div style='display: flex; gap: 20px; align-items: center; margin-top: 20px;'>
        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
            <input type='checkbox' name='is_featured' <?= $product['is_featured'] ? 'checked' : '' ?>>
            <span>🔥 Популярный товар</span>
        </label>
        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
            <input type='checkbox' name='is_new' <?= $product['is_new'] ? 'checked' : '' ?>>
            <span>✨ Новинка</span>
        </label>
        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
            <input type='checkbox' name='is_active' <?= $product['is_active'] ? 'checked' : '' ?>>
            <span>👁️ Активен</span>
        </label>
    </div>
    <?php
}

function renderEditCategoryForm($category) {
    ?>
    <div class='form-group'>
        <label class='form-label'>Название категории *</label>
        <input type='text' name='name' class='form-input' required
               value='<?= htmlspecialchars($category['name']) ?>'>
    </div>

    <div class='form-row'>
        <div class='form-group'>
            <label class='form-label'>Иконка (emoji)</label>
            <input type='text' name='icon' class='form-input' maxlength='4'
                   style='text-align: center; font-size: 24px;'
                   value='<?= htmlspecialchars($category['icon']) ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>Порядок сортировки</label>
            <input type='number' name='sort_order' class='form-input' min='1' 
                   value='<?= $category['sort_order'] ?>'>
        </div>
    </div>

    <div class='form-group'>
        <label class='form-label'>Описание</label>
        <textarea name='description' class='form-textarea' rows='3'><?= htmlspecialchars($category['description']) ?></textarea>
    </div>

    <!-- SEO -->
    <details style='margin: 20px 0;'>
        <summary style='cursor: pointer; font-weight: 600; margin-bottom: 16px;'>SEO настройки</summary>
        <div class='form-group'>
            <label class='form-label'>SEO заголовок</label>
            <input type='text' name='seo_title' class='form-input'
                   value='<?= htmlspecialchars($category['seo_title']) ?>'>
        </div>
        <div class='form-group'>
            <label class='form-label'>SEO описание</label>
            <textarea name='seo_description' class='form-textarea' rows='2'><?= htmlspecialchars($category['seo_description']) ?></textarea>
        </div>
    </details>

    <div class='form-group'>
        <label style='display: flex; align-items: center; gap: 8px; cursor: pointer;'>
            <input type='checkbox' name='active' <?= $category['active'] ? 'checked' : '' ?>>
            <span>Активная категория</span>
        </label>
    </div>
    <?php
}

function renderOrderDetails($order) {
    ?>
    <div style='display: grid; grid-template-columns: 1fr 1fr; gap: 30px; margin-bottom: 30px;'>
        <div>
            <h4>Информация о заказе</h4>
            <div style='background: var(--bg-secondary); padding: 16px; border-radius: var(--border-radius);'>
                <div style='margin-bottom: 8px;'><strong>Номер:</strong> <?= $order['order_number'] ?></div>
                <div style='margin-bottom: 8px;'><strong>Дата:</strong> <?= date('d.m.Y H:i', strtotime($order['created_at'])) ?></div>
                <div style='margin-bottom: 8px;'><strong>Статус:</strong> <?= $order['status_label'] ?></div>
                <div style='margin-bottom: 8px;'><strong>Сумма:</strong> <?= number_format($order['total_amount'], 0, '', ' ') ?> ₽</div>
                <div><strong>Товаров:</strong> <?= $order['items_count'] ?></div>
            </div>
        </div>

        <div>
            <h4>Информация о клиенте</h4>
            <div style='background: var(--bg-secondary); padding: 16px; border-radius: var(--border-radius);'>
                <div style='margin-bottom: 8px;'><strong>Имя:</strong> <?= htmlspecialchars($order['customer_name']) ?></div>
                <div style='margin-bottom: 8px;'><strong>Email:</strong> <?= htmlspecialchars($order['customer_email']) ?></div>
                <div style='margin-bottom: 8px;'><strong>Телефон:</strong> <?= htmlspecialchars($order['customer_phone']) ?></div>
                <div style='margin-bottom: 8px;'><strong>Оплата:</strong> <?= $order['payment_method'] === 'card' ? 'Картой' : 'Наличными' ?></div>
                <div><strong>Доставка:</strong> <?= $order['delivery_method'] === 'delivery' ? 'Доставка' : 'Самовывоз' ?></div>
            </div>
        </div>
    </div>

    <div>
        <h4>Адрес доставки</h4>
        <div style='background: var(--bg-secondary); padding: 16px; border-radius: var(--border-radius); margin-bottom: 20px;'>
            <?= htmlspecialchars($order['delivery_address']) ?>
        </div>
    </div>

    <?php if ($order['notes']): ?>
    <div>
        <h4>Комментарий к заказу</h4>
        <div style='background: var(--bg-secondary); padding: 16px; border-radius: var(--border-radius);'>
            <?= nl2br(htmlspecialchars($order['notes'])) ?>
        </div>
    </div>
    <?php endif; ?>
    <?php
}

// === ДОПОЛНИТЕЛЬНЫЕ ФУНКЦИИ ===

function duplicateProduct($productId) {
    try {
        $product = getProductById($productId);
        if (!$product) {
            return ['success' => false, 'message' => 'Товар не найден'];
        }

        // Создаем копию товара
        $newProductData = $product;
        unset($newProductData['id']);
        $newProductData['name'] = $product['name'] . ' (Копия)';
        $newProductData['sku'] = $product['sku'] . '-copy';
        $newProductData['is_active'] = false; // Копии деактивированы по умолчанию

        $result = createProduct($newProductData);
        if ($result['success']) {
            return ['success' => true, 'message' => 'Товар успешно скопирован'];
        } else {
            return $result;
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function toggleProductStatus($productId, $isActive) {
    try {
        $dynamicData = initializeDynamicData();
        $products = &$dynamicData['products'];

        $productIndex = array_search($productId, array_column($products, 'id'));
        if ($productIndex === false) {
            return ['success' => false, 'message' => 'Товар не найден'];
        }

        $products[$productIndex]['is_active'] = (bool)$isActive;
        $products[$productIndex]['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => 'Статус товара изменен'];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function bulkProductAction($action, $ids, $data = []) {
    try {
        if (empty($ids)) {
            return ['success' => false, 'message' => 'Не выбраны товары'];
        }

        $dynamicData = initializeDynamicData();
        $products = &$dynamicData['products'];
        $affectedCount = 0;

        foreach ($ids as $id) {
            $productIndex = array_search($id, array_column($products, 'id'));
            if ($productIndex === false) continue;

            switch ($action) {
                case 'activate':
                    $products[$productIndex]['is_active'] = true;
                    $affectedCount++;
                    break;

                case 'deactivate':
                    $products[$productIndex]['is_active'] = false;
                    $affectedCount++;
                    break;

                case 'update_category':
                    if (isset($data['category_id'])) {
                        $category = getCategoryById($data['category_id']);
                        if ($category) {
                            $products[$productIndex]['category_id'] = (int)$data['category_id'];
                            $products[$productIndex]['category'] = $category['name'];
                            $affectedCount++;
                        }
                    }
                    break;

                case 'delete':
                    // Удаляем изображения товара
                    if (!empty($products[$productIndex]['images'])) {
                        foreach ($products[$productIndex]['images'] as $image) {
                            deleteProductImage($image);
                        }
                    }
                    array_splice($products, $productIndex, 1);
                    $affectedCount++;
                    // Пересчитываем индексы после удаления
                    $products = array_values($products);
                    break;
            }

            if ($action !== 'delete') {
                $products[$productIndex]['updated_at'] = date('Y-m-d H:i:s');
            }
        }

        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            $actionNames = [
                'activate' => 'активировано',
                'deactivate' => 'деактивировано',
                'update_category' => 'изменена категория у',
                'delete' => 'удалено'
            ];
            $actionName = $actionNames[$action] ?? 'обработано';
            return ['success' => true, 'message' => "Успешно {$actionName} {$affectedCount} товаров"];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения данных'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function deleteCategory($categoryId) {
    try {
        // Проверяем, есть ли товары в категории
        $products = getProducts();
        $categoryProducts = array_filter($products, fn($p) => $p['category_id'] == $categoryId);

        if (!empty($categoryProducts)) {
            return ['success' => false, 'message' => 'Нельзя удалить категорию с товарами'];
        }

        $dynamicData = initializeDynamicData();
        $categories = &$dynamicData['categories'];

        $categoryIndex = array_search($categoryId, array_column($categories, 'id'));
        if ($categoryIndex === false) {
            return ['success' => false, 'message' => 'Категория не найдена'];
        }

        array_splice($categories, $categoryIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => 'Категория успешно удалена'];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function toggleCategoryStatus($categoryId) {
    try {
        $dynamicData = initializeDynamicData();
        $categories = &$dynamicData['categories'];

        $categoryIndex = array_search($categoryId, array_column($categories, 'id'));
        if ($categoryIndex === false) {
            return ['success' => false, 'message' => 'Категория не найдена'];
        }

        $categories[$categoryIndex]['active'] = !$categories[$categoryIndex]['active'];
        $categories[$categoryIndex]['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            $status = $categories[$categoryIndex]['active'] ? 'активирована' : 'деактивирована';
            return ['success' => true, 'message' => "Категория {$status}"];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function getOrderById($orderId) {
    $orders = getOrders();
    foreach ($orders as $order) {
        if ($order['id'] == $orderId) {
            return $order;
        }
    }
    return null;
}

function approveReview($reviewId) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => 'Отзыв не найден'];
        }

        $reviews[$reviewIndex]['is_approved'] = true;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => 'Отзыв одобрен'];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function deleteReview($reviewId) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => 'Отзыв не найден'];
        }

        array_splice($reviews, $reviewIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => 'Отзыв удален'];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

function updateSiteSettings($data) {
    try {
        $dynamicData = initializeDynamicData();

        $settings = [
            'site_name' => $data['site_name'] ?? '',
            'site_description' => $data['site_description'] ?? '',
            'site_keywords' => $data['site_keywords'] ?? '',
            'admin_email' => $data['admin_email'] ?? '',
            'phone' => $data['phone'] ?? '',
            'address' => $data['address'] ?? '',
            'working_hours' => $data['working_hours'] ?? '',
            'currency' => $data['currency'] ?? '₽',
            'products_per_page' => (int)($data['products_per_page'] ?? 12),
            'min_order_amount' => (int)($data['min_order_amount'] ?? 500),
            'free_shipping_from' => (int)($data['free_shipping_from'] ?? 2000),
            'social_vk' => $data['social_vk'] ?? '',
            'social_telegram' => $data['social_telegram'] ?? '',
            'social_instagram' => $data['social_instagram'] ?? '',
            'social_youtube' => $data['social_youtube'] ?? '',
            'google_analytics' => $data['google_analytics'] ?? '',
            'yandex_metrika' => $data['yandex_metrika'] ?? '',
            'maintenance_mode' => isset($data['maintenance_mode'])
        ];

        $dynamicData['settings'] = $settings;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => 'Настройки сохранены'];
        } else {
            return ['success' => false, 'message' => 'Ошибка сохранения'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Ошибка: ' . $e->getMessage()];
    }
}

// === УНИВЕРСАЛЬНЫЕ ФУНКЦИИ ===

function initSearch($inputId, $callback) {
    ?>
    <script>
        document.getElementById('<?= $inputId ?>').addEventListener('input', function(e) {
            const query = e.target.value.trim();
            (<?= $callback ?>)(query);
        });
    </script>
    <?php
}

function filterTable($tableId, $query, $searchColumns = []) {
    ?>
    <script>
        function filterTable(tableId, query, columns) {
            const table = document.getElementById(tableId);
            const rows = table.querySelectorAll('tbody tr');

            rows.forEach(row => {
                let found = false;
                if (!query) {
                    found = true;
                } else {
                    columns.forEach(colIndex => {
                        const cell = row.cells[colIndex];
                        if (cell && cell.textContent.toLowerCase().includes(query.toLowerCase())) {
                            found = true;
                        }
                    });
                }
                row.style.display = found ? '' : 'none';
            });
        }

        filterTable('<?= $tableId ?>', '<?= addslashes($query) ?>', <?= json_encode($searchColumns) ?>);
    </script>
    <?php
}

// === ЭКСПОРТ ДАННЫХ ===

if (isset($_GET['action']) && !isset($_GET['ajax'])) {
    switch ($_GET['action']) {
        case 'export_products':
            exportProductsCSV();
            break;
        case 'export_orders':
            exportOrdersCSV();
            break;
        case 'print_order':
            printOrder($_GET['id']);
            break;
    }
}

function exportProductsCSV() {
    $products = getProducts();

    header('Content-Type: text/csv; charset=utf-8');
    header('Content-Disposition: attachment; filename="products_' . date('Y-m-d') . '.csv"');

    $output = fopen('php://output', 'w');

    // BOM для корректного отображения UTF-8 в Excel
    fprintf($output, chr(0xEF).chr(0xBB).chr(0xBF));

    // Заголовки
    fputcsv($output, [
        'ID', 'Название', 'Артикул', 'Категория', 'Цена', 'Старая цена', 
        'Остаток', 'Активен', 'Популярный', 'Новинка', 'Дата создания'
    ], ';');

    foreach ($products as $product) {
        fputcsv($output, [
            $product['id'],
            $product['name'],
            $product['sku'],
            $product['category'],
            $product['price'],
            $product['old_price'] ?: '',
            $product['stock'],
            $product['is_active'] ? 'Да' : 'Нет',
            $product['is_featured'] ? 'Да' : 'Нет',
            $product['is_new'] ? 'Да' : 'Нет',
            $product['created_at']
        ], ';');
    }

    fclose($output);
    exit;
}

function exportOrdersCSV() {
    $orders = getOrders();

    header('Content-Type: text/csv; charset=utf-8');
    header('Content-Disposition: attachment; filename="orders_' . date('Y-m-d') . '.csv"');

    $output = fopen('php://output', 'w');
    fprintf($output, chr(0xEF).chr(0xBB).chr(0xBF));

    fputcsv($output, [
        'ID', 'Номер заказа', 'Клиент', 'Email', 'Телефон', 'Сумма', 
        'Статус', 'Оплата', 'Доставка', 'Дата'
    ], ';');

    foreach ($orders as $order) {
        fputcsv($output, [
            $order['id'],
            $order['order_number'],
            $order['customer_name'],
            $order['customer_email'],
            $order['customer_phone'],
            $order['total_amount'],
            $order['status_label'],
            $order['payment_method'] === 'card' ? 'Картой' : 'Наличными',
            $order['delivery_method'] === 'delivery' ? 'Доставка' : 'Самовывоз',
            $order['created_at']
        ], ';');
    }

    fclose($output);
    exit;
}

function printOrder($orderId) {
    $order = getOrderById($orderId);
    if (!$order) {
        die('Заказ не найден');
    }
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset='UTF-8'>
        <title>Заказ <?= $order['order_number'] ?></title>
        <style>
            body { font-family: Arial, sans-serif; font-size: 12px; }
            .header { text-align: center; margin-bottom: 20px; }
            .order-info { margin-bottom: 20px; }
            .customer-info { margin-bottom: 20px; }
            table { width: 100%; border-collapse: collapse; }
            th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            th { background-color: #f2f2f2; }
            @media print { 
                body { margin: 0; } 
                button { display: none; }
            }
        </style>
    </head>
    <body>
        <div class='header'>
            <h1>ЗАКАЗ <?= $order['order_number'] ?></h1>
            <p>от <?= date('d.m.Y H:i', strtotime($order['created_at'])) ?></p>
        </div>

        <div class='order-info'>
            <h3>Информация о заказе</h3>
            <p><strong>Статус:</strong> <?= $order['status_label'] ?></p>
            <p><strong>Сумма:</strong> <?= number_format($order['total_amount'], 0, '', ' ') ?> ₽</p>
            <p><strong>Способ оплаты:</strong> <?= $order['payment_method'] === 'card' ? 'Картой' : 'Наличными' ?></p>
            <p><strong>Способ доставки:</strong> <?= $order['delivery_method'] === 'delivery' ? 'Доставка' : 'Самовывоз' ?></p>
        </div>

        <div class='customer-info'>
            <h3>Покупатель</h3>
            <p><strong>Имя:</strong> <?= htmlspecialchars($order['customer_name']) ?></p>
            <p><strong>Email:</strong> <?= htmlspecialchars($order['customer_email']) ?></p>
            <p><strong>Телефон:</strong> <?= htmlspecialchars($order['customer_phone']) ?></p>
            <p><strong>Адрес доставки:</strong> <?= htmlspecialchars($order['delivery_address']) ?></p>
        </div>

        <?php if ($order['notes']): ?>
        <div>
            <h3>Комментарий</h3>
            <p><?= nl2br(htmlspecialchars($order['notes'])) ?></p>
        </div>
        <?php endif; ?>

        <button onclick='window.print()'>Печать</button>
        <button onclick='window.close()'>Закрыть</button>

        <script>
            window.onload = function() {
                window.print();
            };
        </script>
    </body>
    </html>
    <?php
    exit;
}

// === СТИЛИ И СКРИПТЫ (в конце файла) ===
?>

<style>
/* Дополнительные стили для админки */

.file-upload-area {
    border: 2px dashed var(--border-color);
    border-radius: var(--border-radius);
    padding: 40px;
    text-align: center;
    cursor: pointer;
    transition: var(--transition);
    background: var(--bg-secondary);
    margin-bottom: 16px;
}

.file-upload-area:hover {
    border-color: var(--primary-color);
    background: rgba(46, 204, 113, 0.05);
}

.file-upload-area.dragover {
    border-color: var(--primary-color);
    background: rgba(46, 204, 113, 0.1);
}

.uploaded-images {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
    margin-top: 16px;
}

.uploaded-image {
    position: relative;
    width: 100px;
    height: 100px;
    border-radius: var(--border-radius);
    overflow: hidden;
    border: 2px solid var(--border-color);
}

.uploaded-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.uploaded-image .remove-btn {
    position: absolute;
    top: 4px;
    right: 4px;
    width: 24px;
    height: 24px;
    background: var(--danger-color);
    color: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    font-size: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.form-row-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 16px;
}

.status-select {
    font-size: 12px;
    padding: 4px 8px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background: var(--bg-primary);
}

.bulk-actions {
    background: var(--bg-secondary);
    padding: 16px;
    border-radius: var(--border-radius);
    margin-bottom: 20px;
    display: none;
}

.bulk-actions.show {
    display: block;
}

.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
}

.spinner-large {
    width: 50px;
    height: 50px;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top: 4px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>

<script>
// === УНИВЕРСАЛЬНЫЕ ФУНКЦИИ ===

// Инициализация загрузки файлов
function initFileUpload(areaId, inputId) {
    const area = document.getElementById(areaId);
    const input = document.getElementById(inputId);

    if (!area || !input) return;

    area.addEventListener('click', () => input.click());

    area.addEventListener('dragover', (e) => {
        e.preventDefault();
        area.classList.add('dragover');
    });

    area.addEventListener('dragleave', () => {
        area.classList.remove('dragover');
    });

    area.addEventListener('drop', (e) => {
        e.preventDefault();
        area.classList.remove('dragover');
        input.files = e.dataTransfer.files;
        previewImages(input);
    });

    input.addEventListener('change', () => {
        previewImages(input);
    });
}

function previewImages(input) {
    const previewContainer = input.parentElement.nextElementSibling;
    if (!previewContainer.classList.contains('uploaded-images')) return;

    previewContainer.innerHTML = '';

    Array.from(input.files).forEach((file, index) => {
        if (file.type.startsWith('image/')) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const div = document.createElement('div');
                div.className = 'uploaded-image';
                div.innerHTML = `
                    <img src="${e.target.result}" alt="Preview">
                    <button type="button" class="remove-btn" onclick="removePreviewImage(this, ${index})">&times;</button>
                `;
                previewContainer.appendChild(div);
            };
            reader.readAsDataURL(file);
        }
    });
}

function removePreviewImage(btn, index) {
    btn.parentElement.remove();
    // Здесь можно добавить логику удаления файла из input
}

// Массовые операции с чекбоксами
function toggleAllCheckboxes(masterCheckbox) {
    const checkboxes = document.querySelectorAll('.bulk-checkbox[data-id]');
    checkboxes.forEach(checkbox => {
        checkbox.checked = masterCheckbox.checked;
    });
    updateBulkActions();
}

function updateBulkActions() {
    const selectedIds = getSelectedIds();
    const bulkActions = document.getElementById('bulkActions');
    const selectedCount = document.getElementById('selectedCount');

    if (selectedIds.length > 0) {
        bulkActions.classList.add('show');
        selectedCount.textContent = selectedIds.length;
    } else {
        bulkActions.classList.remove('show');
    }
}

function getSelectedIds() {
    const checkboxes = document.querySelectorAll('.bulk-checkbox[data-id]:checked');
    return Array.from(checkboxes).map(cb => parseInt(cb.dataset.id));
}

// Модальные окна
function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    }
}

function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = '';
    }
}

// Загрузка и уведомления
function showLoading() {
    const overlay = document.createElement('div');
    overlay.className = 'loading-overlay';
    overlay.id = 'loadingOverlay';
    overlay.innerHTML = '<div class="spinner-large"></div>';
    document.body.appendChild(overlay);
}

function hideLoading() {
    const overlay = document.getElementById('loadingOverlay');
    if (overlay) {
        overlay.remove();
    }
}

function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 16px 20px;
        background: var(--${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'}-color);
        color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-lg);
        z-index: 10000;
        animation: slideInRight 0.3s ease;
        max-width: 400px;
        word-wrap: break-word;
    `;
    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 12px;">
            <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'}"></i>
            <span>${message}</span>
            <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: white; font-size: 16px; cursor: pointer; margin-left: auto;">&times;</button>
        </div>
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
        if (notification.parentElement) {
            notification.style.animation = 'slideOutRight 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }
    }, 5000);
}

// AJAX формы
document.addEventListener('DOMContentLoaded', function() {
    // Обработка AJAX форм
    document.querySelectorAll('.ajax-form').forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();

            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            submitBtn.disabled = true;
            submitBtn.innerHTML = '<div class="spinner"></div> Сохранение...';

            const formData = new FormData(form);
            formData.append('ajax', '1');

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(data.message || 'Успешно сохранено', 'success');

                    // Закрываем модальные окна
                    const modal = form.closest('.modal');
                    if (modal) {
                        setTimeout(() => {
                            modal.style.display = 'none';
                            document.body.style.overflow = '';
                        }, 1000);
                    }

                    // Перезагружаем страницу через 1.5 сек
                    setTimeout(() => {
                        location.reload();
                    }, 1500);
                } else {
                    showNotification(data.message || 'Произошла ошибка', 'error');
                }
            } catch (error) {
                console.error('Form submission error:', error);
                showNotification('Ошибка отправки формы', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            }
        });
    });

    // Закрытие модальных окон по клику вне их
    document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                modal.style.display = 'none';
                document.body.style.overflow = '';
            }
        });
    });

    // Анимации для уведомлений
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOutRight {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
    `;
    document.head.appendChild(style);
});

// Удаление изображения товара
async function removeProductImage(productId, imageIndex) {
    if (!confirm('Удалить изображение?')) return;

    showLoading();

    const formData = new FormData();
    formData.append('action', 'remove_product_image');
    formData.append('product_id', productId);
    formData.append('image_index', imageIndex);
    formData.append('ajax', '1');

    try {
        const response = await fetch('admin.php', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (data.success) {
            showNotification('Изображение удалено', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification(data.message || 'Ошибка удаления', 'error');
        }
    } catch (error) {
        showNotification('Ошибка сети', 'error');
    } finally {
        hideLoading();
    }
}
</script>

<?php
// Инициализация поиска для всех разделов
function initSearch($inputId, $callbackFunction) {
    ?>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('<?= $inputId ?>');
            if (searchInput) {
                searchInput.addEventListener('input', function(e) {
                    const query = e.target.value.trim();
                    <?= $callbackFunction ?>(query);
                });
            }
        });
    </script>
    <?php
}
?>

<!-- Закрывающий тег из основного файла админки -->
</body>
</html>
