<?php
/**
 * –ê–∫–≤–∞–°–±–æ—Ä - –ü–û–õ–ù–ê–Ø –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å v5.0 - –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø —Å data.php –∏ index.php
 * –í—Å–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç + –ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è + AJAX + —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
 */
session_start();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
require_once 'data.php';
if (file_exists('date_functions.php')) {
    require_once 'date_functions.php';
}
if (file_exists('cart_system.php')) {
    require_once 'cart_system.php';
}

// –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
if (!isset($_SESSION['admin_logged_in'])) {
    if (($_POST['admin_password'] ?? '') === ADMIN_PASSWORD) {
        $_SESSION['admin_logged_in'] = true;
        $_SESSION['admin_name'] = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
        $_SESSION['admin_role'] = '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω';
        header('Location: admin.php');
        exit;
    } elseif (!empty($_POST['admin_password'])) {
        $login_error = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å';
    }
}

// –í—ã—Ö–æ–¥
if (($_GET['action'] ?? '') === 'logout') {
    session_destroy();
    header('Location: admin.php');
    exit;
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (!isset($_SESSION['admin_logged_in'])) {
    $error = $login_error ?? '';
    ?>
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>üê† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –ê–∫–≤–∞–°–±–æ—Ä</title>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
                font-family: 'Inter', sans-serif; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh; 
                display: flex; 
                align-items: center; 
                justify-content: center;
                padding: 20px;
            }
            .login-container { 
                background: white; 
                padding: 40px; 
                border-radius: 20px; 
                box-shadow: 0 20px 60px rgba(0,0,0,0.2);
                max-width: 400px; 
                width: 100%;
                text-align: center;
            }
            .logo { font-size: 60px; margin-bottom: 20px; animation: float 3s ease-in-out infinite; }
            @keyframes float { 0%, 100% { transform: translateY(0px); } 50% { transform: translateY(-10px); } }
            h2 { color: #2c3e50; margin-bottom: 30px; font-size: 28px; }
            input, button { 
                width: 100%; 
                padding: 15px; 
                margin: 10px 0; 
                border: 2px solid #e0e6ed; 
                border-radius: 10px; 
                font-size: 16px;
                transition: all 0.3s ease;
            }
            input:focus { 
                border-color: #667eea; 
                outline: none; 
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }
            button { 
                background: linear-gradient(135deg, #667eea, #764ba2); 
                color: white; 
                border: none; 
                cursor: pointer; 
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            button:hover { 
                transform: translateY(-2px); 
                box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            }
            .error { 
                background: #fee; 
                color: #c33; 
                padding: 15px; 
                border-radius: 10px; 
                margin-bottom: 20px; 
                border: 1px solid #fcc;
            }
            .hint { 
                margin-top: 20px; 
                padding: 15px; 
                background: #f8f9ff; 
                border-radius: 10px; 
                color: #666; 
                font-size: 14px;
            }
        </style>
    </head>
    <body>
        <div class="login-container">
            <div class="logo">üê†</div>
            <h2>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
            <form method="post">
                <?php if ($error): ?>
                    <div class="error">‚ùå <?= htmlspecialchars($error) ?></div>
                <?php endif; ?>
                <input type="password" name="admin_password" placeholder="üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required autofocus>
                <button type="submit">–í–æ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å</button>
                <div class="hint">
                    üí° <strong>–ü–∞—Ä–æ–ª—å:</strong> admin123<br>
                    üîí –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
                </div>
            </form>
        </div>
    </body>
    </html>
    <?php
    exit;
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
$section = $_GET['section'] ?? 'dashboard';
$action = $_POST['action'] ?? $_GET['action'] ?? '';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
if (isset($_POST['ajax']) || isset($_GET['ajax'])) {
    header('Content-Type: application/json');

    try {
        switch ($action) {
            case 'get_stats':
                $stats = getDashboardStats();
                echo json_encode(['success' => true, 'stats' => $stats]);
                break;

            case 'toggle_product_status':
                $productId = (int)$_POST['product_id'];
                $isActive = $_POST['is_active'] === '1';
                $result = toggleProductStatus($productId, $isActive);
                echo json_encode($result);
                break;

            case 'delete_product':
                $productId = (int)$_POST['product_id'];
                $result = deleteProduct($productId);
                echo json_encode($result);
                break;

            case 'approve_review':
                $reviewId = (int)$_POST['review_id'];
                $result = approveReview($reviewId);
                echo json_encode($result);
                break;

            case 'delete_review':
                $reviewId = (int)$_POST['review_id'];
                $result = deleteReview($reviewId);
                echo json_encode($result);
                break;

            case 'update_order_status':
                $orderId = (int)$_POST['order_id'];
                $status = $_POST['status'];
                $result = updateOrderStatus($orderId, $status);
                echo json_encode($result);
                break;

            case 'save_settings':
                $settingsData = $_POST;
                $result = updateSiteSettings($settingsData);
                echo json_encode($result);
                break;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()]);
    }
    exit;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö POST –∑–∞–ø—Ä–æ—Å–æ–≤
if ($action && !isset($_POST['ajax'])) {
    switch ($action) {
        case 'save_settings':
            $result = updateSiteSettings($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=settings');
            exit;

        case 'create_product':
            $result = createProduct($_POST, $_FILES ?? []);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=products');
            exit;

        case 'create_category':
            $result = createCategory($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=categories');
            exit;
    }
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
$adminData = getAdminData($section);

?><!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?> - –ê–∫–≤–∞–°–±–æ—Ä CRM v5.0</title>

    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üê†</text></svg>">

    <style>
        :root {
            --primary-color: #667eea;
            --primary-dark: #5a6fd8;
            --secondary-color: #764ba2;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #3498db;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --text-primary: #2c3e50;
            --text-secondary: #6c757d;
            --text-muted: #95a5a6;
            --border-color: #dee2e6;
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --border-radius-xl: 20px;
            --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 12px rgba(0,0,0,0.1);
            --shadow-lg: 0 8px 25px rgba(0,0,0,0.15);
            --shadow-xl: 0 12px 40px rgba(0,0,0,0.2);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.15s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--bg-secondary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .admin-layout {
            display: flex;
            min-height: 100vh;
            position: relative;
        }

        /* ===== –ë–û–ö–û–í–ê–Ø –ü–ê–ù–ï–õ–¨ ===== */
        .sidebar {
            width: 280px;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            overflow-x: hidden;
            z-index: 1000;
            transition: var(--transition);
            box-shadow: var(--shadow-xl);
        }

        .sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .sidebar::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.05);
        }

        .sidebar::-webkit-scrollbar-thumb {
            background: rgba(255,255,255,0.2);
            border-radius: 3px;
        }

        .sidebar::-webkit-scrollbar-thumb:hover {
            background: rgba(255,255,255,0.3);
        }

        .sidebar-header {
            padding: 24px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            background: rgba(255,255,255,0.05);
        }

        .admin-logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            font-size: 36px;
            animation: logoFloat 3s ease-in-out infinite;
            filter: drop-shadow(0 2px 8px rgba(0,0,0,0.2));
        }

        @keyframes logoFloat {
            0%, 100% { transform: translateY(0px) scale(1); }
            50% { transform: translateY(-3px) scale(1.05); }
        }

        .logo-text {
            display: flex;
            flex-direction: column;
        }

        .logo-title {
            font-size: 22px;
            font-weight: 700;
            line-height: 1.2;
        }

        .logo-subtitle {
            font-size: 12px;
            opacity: 0.8;
            font-weight: 400;
        }

        .sidebar-nav {
            padding: 24px 0 120px 0;
        }

        .nav-section {
            margin-bottom: 32px;
        }

        .nav-title {
            padding: 0 20px 12px;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 1.5px;
            opacity: 0.7;
            font-weight: 600;
            color: rgba(255,255,255,0.8);
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 14px 20px;
            color: rgba(255,255,255,0.85);
            text-decoration: none;
            transition: var(--transition);
            position: relative;
            border-left: 3px solid transparent;
        }

        .sidebar-link:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            padding-left: 28px;
            border-left-color: rgba(255,255,255,0.3);
        }

        .sidebar-link.active {
            background: rgba(255,255,255,0.15);
            color: white;
            border-left-color: white;
            font-weight: 600;
        }

        .sidebar-link.active::before {
            content: '';
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            width: 6px;
            height: 6px;
            background: white;
            border-radius: 50%;
        }

        .sidebar-link i {
            width: 20px;
            margin-right: 12px;
            text-align: center;
            font-size: 16px;
        }

        .sidebar-link-text {
            font-size: 14px;
            font-weight: 500;
        }

        .sidebar-badge {
            margin-left: auto;
            padding: 3px 8px;
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            min-width: 20px;
            text-align: center;
        }

        .sidebar-badge.badge-warning {
            background: var(--warning-color);
        }

        .sidebar-badge.badge-success {
            background: var(--success-color);
        }

        .sidebar-badge.badge-danger {
            background: var(--danger-color);
        }

        .sidebar-footer {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 20px;
            border-top: 1px solid rgba(255,255,255,0.1);
            background: rgba(0,0,0,0.1);
        }

        .admin-profile {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .admin-avatar {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            border: 2px solid rgba(255,255,255,0.3);
        }

        .admin-info {
            flex: 1;
            min-width: 0;
        }

        .admin-name {
            font-weight: 600;
            font-size: 14px;
            line-height: 1.2;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .admin-role {
            font-size: 11px;
            opacity: 0.7;
            line-height: 1.2;
        }

        .logout-btn {
            color: rgba(255,255,255,0.7);
            text-decoration: none;
            padding: 10px;
            border-radius: var(--border-radius);
            transition: var(--transition);
            font-size: 16px;
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            transform: scale(1.1);
        }

        /* ===== –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ ===== */
        .main-content {
            flex: 1;
            margin-left: 280px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .top-bar {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            padding: 20px 32px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: sticky;
            top: 0;
            z-index: 500;
            box-shadow: var(--shadow-sm);
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95);
        }

        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-title i {
            color: var(--primary-color);
        }

        .top-bar-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: var(--transition);
            white-space: nowrap;
            line-height: 1.4;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-1px);
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
        }

        .btn-lg {
            padding: 14px 28px;
            font-size: 16px;
        }

        /* ===== –ö–û–ù–¢–ï–ù–¢ –°–¢–†–ê–ù–ò–¶ ===== */
        .page-content {
            flex: 1;
            padding: 32px;
            max-width: 100%;
        }

        /* ===== –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ò–ï –ö–ê–†–¢–û–ß–ö–ò ===== */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: var(--bg-primary);
            padding: 28px;
            border-radius: var(--border-radius-xl);
            box-shadow: var(--shadow-md);
            border: 1px solid var(--border-color);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card.stat-primary::before {
            background: linear-gradient(90deg, var(--primary-color), var(--info-color));
        }

        .stat-card.stat-success::before {
            background: linear-gradient(90deg, var(--success-color), #27ae60);
        }

        .stat-card.stat-warning::before {
            background: linear-gradient(90deg, var(--warning-color), #e67e22);
        }

        .stat-card.stat-danger::before {
            background: linear-gradient(90deg, var(--danger-color), #c0392b);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: var(--border-radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            color: white;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            box-shadow: var(--shadow-sm);
        }

        .stat-icon.stat-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
        }

        .stat-icon.stat-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
        }

        .stat-icon.stat-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
        }

        .stat-value {
            font-size: 36px;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 8px;
            line-height: 1;
        }

        .stat-label {
            font-size: 16px;
            color: var(--text-secondary);
            margin-bottom: 12px;
            font-weight: 500;
        }

        .stat-change {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 13px;
            font-weight: 500;
            padding: 4px 8px;
            border-radius: var(--border-radius);
        }

        .stat-change.positive {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }

        .stat-change.negative {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }

        .stat-change.neutral {
            background: var(--bg-tertiary);
            color: var(--text-muted);
        }

        .stat-trend {
            font-size: 12px;
            margin-left: auto;
        }

        /* ===== –ö–ê–†–¢–û–ß–ö–ò –ö–û–ù–¢–ï–ù–¢–ê ===== */
        .content-card {
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            margin-bottom: 32px;
            transition: var(--transition);
        }

        .content-card:hover {
            box-shadow: var(--shadow-lg);
        }

        .content-card-header {
            padding: 24px 28px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(135deg, #f8f9ff, #fff);
        }

        .content-card-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .content-card-body {
            padding: 28px;
        }

        /* ===== –¢–ê–ë–õ–ò–¶–´ ===== */
        .table-container {
            overflow-x: auto;
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-sm);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .table th {
            background: linear-gradient(135deg, #f8f9ff, var(--bg-secondary));
            padding: 16px;
            text-align: left;
            font-weight: 600;
            color: var(--text-primary);
            border-bottom: 2px solid var(--border-color);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table td {
            padding: 16px;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .table tr {
            transition: var(--transition-fast);
        }

        .table tr:hover {
            background: rgba(102, 126, 234, 0.05);
        }

        .table tr.selected {
            background: rgba(102, 126, 234, 0.1);
        }

        /* ===== –°–¢–ê–¢–£–° –ë–ï–ô–î–ñ–ò ===== */
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            line-height: 1;
        }

        .status-new {
            background: rgba(52, 152, 219, 0.1);
            color: var(--info-color);
            border: 1px solid rgba(52, 152, 219, 0.2);
        }

        .status-processing {
            background: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
            border: 1px solid rgba(243, 156, 18, 0.2);
        }

        .status-completed {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-cancelled {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
            border: 1px solid rgba(231, 76, 60, 0.2);
        }

        .status-active {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-inactive {
            background: rgba(149, 165, 166, 0.1);
            color: var(--text-muted);
            border: 1px solid rgba(149, 165, 166, 0.2);
        }

        /* ===== –§–û–†–ú–´ ===== */
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 24px;
        }

        .form-row-3 {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
            margin-bottom: 24px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-primary);
            font-size: 14px;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 14px;
            transition: var(--transition);
            font-family: inherit;
            background: var(--bg-primary);
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 120px;
            line-height: 1.6;
        }

        /* ===== –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===== */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.6);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(5px);
        }

        .modal.show {
            display: flex;
            animation: modalFadeIn 0.3s ease;
        }

        @keyframes modalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-dialog {
            background: var(--bg-primary);
            border-radius: var(--border-radius-xl);
            max-width: 600px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: var(--shadow-xl);
            animation: modalSlideUp 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        @keyframes modalSlideUp {
            from { transform: translateY(50px) scale(0.95); opacity: 0; }
            to { transform: translateY(0) scale(1); opacity: 1; }
        }

        .modal-header {
            padding: 24px 28px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(135deg, #f8f9ff, #fff);
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-muted);
            padding: 8px;
            border-radius: var(--border-radius);
            transition: var(--transition);
            line-height: 1;
        }

        .modal-close:hover {
            background: var(--bg-tertiary);
            color: var(--text-primary);
        }

        .modal-body {
            padding: 28px;
        }

        .modal-footer {
            padding: 20px 28px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            gap: 12px;
            background: var(--bg-secondary);
        }

        /* ===== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===== */
        .notification {
            position: fixed;
            top: 24px;
            right: 24px;
            padding: 16px 20px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-xl);
            z-index: 9999;
            animation: notificationSlideIn 0.3s ease;
            max-width: 400px;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 500;
        }

        .notification-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
        }

        .notification-error {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
        }

        .notification-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
        }

        .notification-info {
            background: linear-gradient(135deg, var(--info-color), #2980b9);
            color: white;
        }

        @keyframes notificationSlideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* ===== –ü–£–°–¢–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø ===== */
        .empty-state {
            text-align: center;
            padding: 80px 20px;
            color: var(--text-muted);
        }

        .empty-state-icon {
            font-size: 64px;
            margin-bottom: 24px;
            opacity: 0.6;
        }

        .empty-state h3 {
            margin-bottom: 12px;
            color: var(--text-secondary);
            font-size: 20px;
        }

        .empty-state p {
            margin-bottom: 24px;
            font-size: 16px;
            line-height: 1.6;
        }

        /* ===== –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨ ===== */
        @media (max-width: 1200px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .form-row, .form-row-3 {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .page-content {
                padding: 20px 16px;
            }

            .top-bar {
                padding: 16px 20px;
            }

            .page-title {
                font-size: 24px;
            }

            .modal-dialog {
                width: 95%;
                margin: 20px 10px;
                max-height: 85vh;
            }

            .table-container {
                font-size: 13px;
            }

            .table th,
            .table td {
                padding: 12px 8px;
            }
        }

        /* ===== –õ–û–ê–î–ï–† ===== */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 3000;
            backdrop-filter: blur(5px);
        }

        .loading-overlay.show {
            display: flex;
        }

        .spinner {
            border: 4px solid var(--bg-tertiary);
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–´ ===== */
        .text-center { text-align: center; }
        .text-right { text-align: right; }
        .text-muted { color: var(--text-muted); }
        .text-primary { color: var(--primary-color); }
        .text-success { color: var(--success-color); }
        .text-warning { color: var(--warning-color); }
        .text-danger { color: var(--danger-color); }

        .mb-0 { margin-bottom: 0; }
        .mb-1 { margin-bottom: 8px; }
        .mb-2 { margin-bottom: 16px; }
        .mb-3 { margin-bottom: 24px; }
        .mb-4 { margin-bottom: 32px; }

        .mt-0 { margin-top: 0; }
        .mt-1 { margin-top: 8px; }
        .mt-2 { margin-top: 16px; }
        .mt-3 { margin-top: 24px; }
        .mt-4 { margin-top: 32px; }

        .d-flex { display: flex; }
        .align-items-center { align-items: center; }
        .justify-content-between { justify-content: space-between; }
        .justify-content-center { justify-content: center; }
        .flex-wrap { flex-wrap: wrap; }
        .gap-1 { gap: 8px; }
        .gap-2 { gap: 16px; }
        .gap-3 { gap: 24px; }

        .w-100 { width: 100%; }
        .h-100 { height: 100%; }

        .cursor-pointer { cursor: pointer; }

        /* ===== –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê (–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø) ===== */
        @media (prefers-color-scheme: dark) {
            :root {
                --bg-primary: #1a1a1a;
                --bg-secondary: #2d2d2d;
                --bg-tertiary: #404040;
                --text-primary: #ffffff;
                --text-secondary: #cccccc;
                --text-muted: #999999;
                --border-color: #404040;
            }
        }

        /* ===== –ê–ù–ò–ú–ê–¶–ò–ò –ü–û–Ø–í–õ–ï–ù–ò–Ø ===== */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .slide-up {
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(40px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="admin-layout">
        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <aside class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="admin-logo">
                    <div class="logo-icon">üê†</div>
                    <div class="logo-text">
                        <div class="logo-title">–ê–∫–≤–∞–°–±–æ—Ä</div>
                        <div class="logo-subtitle">MEGA CRM v5.0</div>
                    </div>
                </div>
            </div>

            <nav class="sidebar-nav">
                <div class="nav-section">
                    <div class="nav-title">üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ & KPI</div>
                    <a href="admin.php?section=dashboard" class="sidebar-link <?= $section === 'dashboard' ? 'active' : '' ?>">
                        <i class="fas fa-chart-pie"></i>
                        <span class="sidebar-link-text">KPI –î–∞—à–±–æ—Ä–¥</span>
                    </a>
                    <a href="admin.php?section=analytics" class="sidebar-link <?= $section === 'analytics' ? 'active' : '' ?>">
                        <i class="fas fa-chart-line"></i>
                        <span class="sidebar-link-text">–ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂</span>
                        <span class="sidebar-badge badge-success">LIVE</span>
                    </a>
                </div>

                <div class="nav-section">
                    <div class="nav-title">üõí –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</div>
                    <a href="admin.php?section=products" class="sidebar-link <?= $section === 'products' ? 'active' : '' ?>">
                        <i class="fas fa-fish"></i>
                        <span class="sidebar-link-text">–¢–æ–≤–∞—Ä—ã</span>
                        <span class="sidebar-badge"><?= count(getProducts()) ?></span>
                    </a>
                    <a href="admin.php?section=categories" class="sidebar-link <?= $section === 'categories' ? 'active' : '' ?>">
                        <i class="fas fa-tags"></i>
                        <span class="sidebar-link-text">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
                        <span class="sidebar-badge"><?= count(getCategories()) ?></span>
                    </a>
                    <a href="admin.php?section=orders" class="sidebar-link <?= $section === 'orders' ? 'active' : '' ?>">
                        <i class="fas fa-shopping-bag"></i>
                        <span class="sidebar-link-text">–ó–∞–∫–∞–∑—ã</span>
                        <span class="sidebar-badge badge-warning"><?= count(array_filter(getOrders(), fn($o) => $o['status'] === 'new')) ?></span>
                    </a>
                    <a href="admin.php?section=reviews" class="sidebar-link <?= $section === 'reviews' ? 'active' : '' ?>">
                        <i class="fas fa-star"></i>
                        <span class="sidebar-link-text">–û—Ç–∑—ã–≤—ã</span>
                        <span class="sidebar-badge badge-danger"><?= count(array_filter(getReviews(), fn($r) => !$r['is_approved'])) ?></span>
                    </a>
                </div>

                <div class="nav-section">
                    <div class="nav-title">üìù –ö–æ–Ω—Ç–µ–Ω—Ç & SEO</div>
                    <a href="admin.php?section=news" class="sidebar-link <?= $section === 'news' ? 'active' : '' ?>">
                        <i class="fas fa-newspaper"></i>
                        <span class="sidebar-link-text">–ù–æ–≤–æ—Å—Ç–∏</span>
                        <span class="sidebar-badge"><?= count(getNews()) ?></span>
                    </a>
                    <a href="admin.php?section=pages" class="sidebar-link <?= $section === 'pages' ? 'active' : '' ?>">
                        <i class="fas fa-file-alt"></i>
                        <span class="sidebar-link-text">–°—Ç—Ä–∞–Ω–∏—Ü—ã</span>
                    </a>
                </div>

                <div class="nav-section">
                    <div class="nav-title">‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞ & –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</div>
                    <a href="admin.php?section=settings" class="sidebar-link <?= $section === 'settings' ? 'active' : '' ?>">
                        <i class="fas fa-cog"></i>
                        <span class="sidebar-link-text">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                        <span class="sidebar-badge badge-success">PRO</span>
                    </a>
                    <a href="admin.php?section=logs" class="sidebar-link <?= $section === 'logs' ? 'active' : '' ?>">
                        <i class="fas fa-list-alt"></i>
                        <span class="sidebar-link-text">–õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã</span>
                    </a>
                </div>
            </nav>

            <div class="sidebar-footer">
                <div class="admin-profile">
                    <div class="admin-avatar">üë§</div>
                    <div class="admin-info">
                        <div class="admin-name"><?= $_SESSION['admin_name'] ?></div>
                        <div class="admin-role"><?= $_SESSION['admin_role'] ?></div>
                    </div>
                    <a href="admin.php?action=logout" class="logout-btn" title="–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã">
                        <i class="fas fa-sign-out-alt"></i>
                    </a>
                </div>
            </div>
        </aside>

        <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
        <main class="main-content">
            <!-- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å -->
            <header class="top-bar">
                <div class="top-bar-left">
                    <h1 class="page-title">
                        <i class="<?= getPageIcon($section) ?>"></i>
                        <?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?>
                    </h1>
                </div>

                <div class="top-bar-right">
                    <button class="btn btn-outline" onclick="toggleSidebar()" title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–µ–Ω—é">
                        <i class="fas fa-bars"></i>
                    </button>
                    <a href="index.php" class="btn btn-primary" target="_blank">
                        <i class="fas fa-external-link-alt"></i>
                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                    </a>
                </div>
            </header>

            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
            <div class="page-content">
                <?php if (isset($_SESSION['admin_message'])): ?>
                    <div class="notification notification-<?= $_SESSION['admin_message']['type'] ?>" id="adminNotification">
                        <i class="fas fa-<?= $_SESSION['admin_message']['type'] === 'success' ? 'check-circle' : 'exclamation-circle' ?>"></i>
                        <?= htmlspecialchars($_SESSION['admin_message']['text']) ?>
                    </div>
                    <?php unset($_SESSION['admin_message']); ?>
                <?php endif; ?>

                <?php renderAdminSection($section, $adminData); ?>
            </div>
        </main>
    </div>

    <!-- –õ–æ–∞–¥–µ—Ä -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="spinner"></div>
    </div>

    <!-- –°–∫—Ä–∏–ø—Ç—ã -->
    <script>
        // === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===

        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }

        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('open');
        }

        function showNotification(message, type = 'info', duration = 5000) {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            document.querySelectorAll('.notification').forEach(n => n.remove());

            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}"></i>
                ${message}
            `;

            document.body.appendChild(notification);

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
            setTimeout(() => {
                notification.style.animation = 'notificationSlideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, duration);
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        document.addEventListener('DOMContentLoaded', function() {
            const notification = document.getElementById('adminNotification');
            if (notification) {
                setTimeout(() => {
                    notification.style.animation = 'notificationSlideOut 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }, 5000);
            }
        });

        // === AJAX –§–£–ù–ö–¶–ò–ò ===

        async function makeAjaxRequest(action, data = {}) {
            showLoading();

            const formData = new FormData();
            formData.append('action', action);
            formData.append('ajax', '1');

            for (let key in data) {
                formData.append(key, data[key]);
            }

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                return result;
            } catch (error) {
                console.error('AJAX Error:', error);
                return { success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' };
            } finally {
                hideLoading();
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–û–í–ê–†–û–í ===

        async function toggleProductStatus(productId, isActive) {
            const result = await makeAjaxRequest('toggle_product_status', {
                product_id: productId,
                is_active: isActive ? '1' : '0'
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteProduct(productId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_product', {
                product_id: productId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–ó–´–í–û–í ===

        async function approveReview(reviewId) {
            const result = await makeAjaxRequest('approve_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteReview(reviewId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤?')) return;

            const result = await makeAjaxRequest('delete_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ö–ê–ó–û–í ===

        async function updateOrderStatus(orderId, status) {
            const result = await makeAjaxRequest('update_order_status', {
                order_id: orderId,
                status: status
            });

            if (result.success) {
                showNotification(result.message, 'success');
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===

        function openModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.remove('show');
                document.body.style.overflow = '';
            }
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('show');
                document.body.style.overflow = '';
            }
        });

        // === –ê–ù–ò–ú–ê–¶–ò–ò ===

        // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const style = document.createElement('style');
        style.textContent = `
            @keyframes notificationSlideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);

        // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('fade-in');
                }
            });
        }, observerOptions);

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.stat-card, .content-card').forEach(card => {
                observer.observe(card);
            });
        });

        // === –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò ===

        let statsUpdateInterval;

        function startStatsAutoUpdate() {
            statsUpdateInterval = setInterval(async () => {
                if (window.location.search.includes('section=dashboard') || !window.location.search.includes('section=')) {
                    const result = await makeAjaxRequest('get_stats');
                    if (result.success) {
                        updateStatsDisplay(result.stats);
                    }
                }
            }, 30000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        }

        function updateStatsDisplay(stats) {
            for (let key in stats) {
                const valueElement = document.querySelector(`[data-stat="${key}"] .stat-value`);
                const changeElement = document.querySelector(`[data-stat="${key}"] .stat-change`);

                if (valueElement) {
                    valueElement.textContent = stats[key].value;
                }
                if (changeElement) {
                    changeElement.textContent = stats[key].change;
                    changeElement.className = `stat-change ${stats[key].trend}`;
                }
            }
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        document.addEventListener('DOMContentLoaded', function() {
            startStatsAutoUpdate();
        });

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', function() {
            if (statsUpdateInterval) {
                clearInterval(statsUpdateInterval);
            }
        });
    </script>
</body>
</html>

<?php

// === –§–£–ù–ö–¶–ò–ò –î–ê–ù–ù–´–• –ê–î–ú–ò–ù–ö–ò ===

function getAdminData($section) {
    switch ($section) {
        case 'dashboard':
            return [
                'title' => 'KPI –î–∞—à–±–æ—Ä–¥',
                'stats' => getDashboardStats(),
                'recent_activity' => getRecentActivity()
            ];
        case 'products':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏',
                'products' => getProducts(),
                'categories' => getCategories(),
                'stats' => getProductsStats()
            ];
        case 'categories':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
                'categories' => getCategories(),
                'stats' => getCategoriesStats()
            ];
        case 'orders':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏',
                'orders' => getOrders(),
                'stats' => getOrdersStats()
            ];
        case 'reviews':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏',
                'reviews' => getReviews(),
                'stats' => getReviewsStats()
            ];
        case 'news':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏',
                'news' => getNews(),
                'stats' => getNewsStats()
            ];
        case 'analytics':
            return [
                'title' => '–ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂',
                'charts_data' => getAnalyticsData()
            ];
        case 'settings':
            return [
                'title' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
                'settings' => getSiteSettings()
            ];
        case 'logs':
            return [
                'title' => '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏',
                'logs' => getSystemLogs()
            ];
        default:
            return [
                'title' => ucfirst($section),
                'description' => "–†–∞–∑–¥–µ–ª '$section' –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
            ];
    }
}

function getPageIcon($section) {
    $icons = [
        'dashboard' => 'fas fa-chart-pie',
        'products' => 'fas fa-fish',
        'categories' => 'fas fa-tags',
        'orders' => 'fas fa-shopping-bag',
        'reviews' => 'fas fa-star',
        'news' => 'fas fa-newspaper',
        'analytics' => 'fas fa-chart-line',
        'settings' => 'fas fa-cog',
        'logs' => 'fas fa-list-alt',
        'pages' => 'fas fa-file-alt'
    ];

    return $icons[$section] ?? 'fas fa-cog';
}

function getDashboardStats() {
    $products = getProducts();
    $orders = getOrders();
    $reviews = getReviews();
    $categories = getCategories();

    $totalRevenue = array_sum(array_column($orders, 'total_amount'));
    $newOrders = count(array_filter($orders, fn($o) => $o['status'] === 'new'));
    $activeProducts = count(array_filter($products, fn($p) => $p['is_active']));
    $avgRating = count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0;
    $pendingReviews = count(array_filter($reviews, fn($r) => !$r['is_approved']));

    // –î–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–æ—Å—Ç–∞
    $monthAgo = date('Y-m-d', strtotime('-30 days'));
    $monthlyOrders = array_filter($orders, fn($o) => $o['created_at'] >= $monthAgo);
    $monthlyRevenue = array_sum(array_column($monthlyOrders, 'total_amount'));

    return [
        'revenue' => [
            'value' => number_format($totalRevenue, 0, '', ' ') . ' ‚ÇΩ',
            'label' => '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞',
            'change' => '+' . number_format($monthlyRevenue, 0, '', ' ') . ' ‚ÇΩ –∑–∞ –º–µ—Å—è—Ü',
            'trend' => 'positive',
            'icon' => 'fas fa-ruble-sign'
        ],
        'orders' => [
            'value' => count($orders),
            'label' => '–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤',
            'change' => '+' . $newOrders . ' –Ω–æ–≤—ã—Ö',
            'trend' => $newOrders > 0 ? 'positive' : 'neutral',
            'icon' => 'fas fa-shopping-bag'
        ],
        'products' => [
            'value' => $activeProducts,
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
            'change' => '–∏–∑ ' . count($products) . ' –≤—Å–µ–≥–æ',
            'trend' => 'neutral',
            'icon' => 'fas fa-fish'
        ],
        'rating' => [
            'value' => number_format($avgRating, 1),
            'label' => '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥',
            'change' => count($reviews) . ' –æ—Ç–∑—ã–≤–æ–≤',
            'trend' => $avgRating >= 4 ? 'positive' : ($avgRating >= 3 ? 'neutral' : 'negative'),
            'icon' => 'fas fa-star'
        ],
        'categories' => [
            'value' => count(array_filter($categories, fn($c) => $c['active'])),
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            'change' => '–∏–∑ ' . count($categories) . ' –≤—Å–µ–≥–æ',
            'trend' => 'neutral',
            'icon' => 'fas fa-tags'
        ],
        'pending' => [
            'value' => $pendingReviews,
            'label' => '–û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
            'change' => '–æ—Ç–∑—ã–≤—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
            'trend' => $pendingReviews > 5 ? 'negative' : 'positive',
            'icon' => 'fas fa-clock'
        ]
    ];
}

function getRecentActivity() {
    return [
        [
            'time' => '2 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
            'details' => '–ó–∞–∫–∞–∑ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' –Ω–∞ —Å—É–º–º—É ' . number_format(rand(1000, 5000), 0, '', ' ') . ' ‚ÇΩ',
            'icon' => 'fas fa-shopping-bag',
            'type' => 'success'
        ],
        [
            'time' => '8 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤',
            'details' => '–û—Ç–∑—ã–≤ –Ω–∞ —Ç–æ–≤–∞—Ä "–ê–Ω—É–±–∏–∞—Å –ë–∞—Ä—Ç–µ—Ä–∞ –Ω–∞–Ω–∞"',
            'icon' => 'fas fa-star',
            'type' => 'info'
        ],
        [
            'time' => '15 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω',
            'details' => '–û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä "–°–∫–∞–ª—è—Ä–∏—è —Å–µ—Ä–µ–±—Ä–∏—Å—Ç–∞—è"',
            'icon' => 'fas fa-edit',
            'type' => 'primary'
        ],
        [
            'time' => '1 —á–∞—Å –Ω–∞–∑–∞–¥',
            'action' => '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'details' => '–ó–∞–∫–∞–∑ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'icon' => 'fas fa-truck',
            'type' => 'success'
        ],
        [
            'time' => '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
            'details' => '–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ú–æ—Ä—Å–∫–∏–µ —Ä—ã–±–∫–∏"',
            'icon' => 'fas fa-plus',
            'type' => 'success'
        ]
    ];
}

function getProductsStats() {
    $products = getProducts();

    return [
        'total' => count($products),
        'active' => count(array_filter($products, fn($p) => $p['is_active'])),
        'featured' => count(array_filter($products, fn($p) => $p['is_featured'])),
        'low_stock' => count(array_filter($products, fn($p) => $p['stock'] <= 5))
    ];
}

function getCategoriesStats() {
    $categories = getCategories();

    return [
        'total' => count($categories),
        'active' => count(array_filter($categories, fn($c) => $c['active']))
    ];
}

function getOrdersStats() {
    $orders = getOrders();

    $stats = [
        'total' => count($orders),
        'new' => count(array_filter($orders, fn($o) => $o['status'] === 'new')),
        'processing' => count(array_filter($orders, fn($o) => $o['status'] === 'processing')),
        'completed' => count(array_filter($orders, fn($o) => $o['status'] === 'delivered')),
        'total_amount' => array_sum(array_column($orders, 'total_amount'))
    ];

    return $stats;
}

function getReviewsStats() {
    $reviews = getReviews();

    return [
        'total' => count($reviews),
        'approved' => count(array_filter($reviews, fn($r) => $r['is_approved'])),
        'pending' => count(array_filter($reviews, fn($r) => !$r['is_approved'])),
        'average_rating' => count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0
    ];
}

function getNewsStats() {
    $news = getNews();

    return [
        'total' => count($news),
        'published' => count(array_filter($news, fn($n) => $n['is_published'])),
        'drafts' => count(array_filter($news, fn($n) => !$n['is_published'])),
        'total_views' => array_sum(array_column($news, 'views'))
    ];
}

function getAnalyticsData() {
    return [
        'sales_chart' => generateSalesChartData(),
        'categories_chart' => generateCategoriesChartData()
    ];
}

function generateSalesChartData() {
    $data = [];
    for ($i = 29; $i >= 0; $i--) {
        $date = date('Y-m-d', strtotime("-$i days"));
        $data[] = [
            'date' => $date,
            'sales' => rand(5000, 50000),
            'orders' => rand(10, 100)
        ];
    }
    return $data;
}

function generateCategoriesChartData() {
    $categories = getCategories();
    $products = getProducts();

    $data = [];
    foreach ($categories as $category) {
        $count = count(array_filter($products, fn($p) => $p['category_id'] == $category['id']));
        if ($count > 0) {
            $data[] = [
                'name' => $category['name'],
                'value' => $count,
                'icon' => $category['icon']
            ];
        }
    }

    return $data;
}

function getSystemLogs() {
    return [
        [
            'timestamp' => date('Y-m-d H:i:s'),
            'level' => 'INFO',
            'message' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
            'context' => 'AUTH'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-5 minutes')),
            'level' => 'SUCCESS',
            'message' => '–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä ID: ' . rand(100, 999),
            'context' => 'PRODUCTS'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-15 minutes')),
            'level' => 'WARNING',
            'message' => '–¢–æ–≤–∞—Ä –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ ID: ' . rand(100, 999),
            'context' => 'INVENTORY'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-30 minutes')),
            'level' => 'INFO',
            'message' => '–û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞',
            'context' => 'SETTINGS'
        ]
    ];
}

// === –§–£–ù–ö–¶–ò–ò –û–ë–†–ê–ë–û–¢–ö–ò –î–ê–ù–ù–´–• ===

function toggleProductStatus($productId, $isActive) {
    try {
        $dynamicData = loadDynamicData();
        if (!$dynamicData) {
            $dynamicData = initializeDynamicData();
        }

        $products = &$dynamicData['products'];

        $productIndex = array_search($productId, array_column($products, 'id'));
        if ($productIndex === false) {
            return ['success' => false, 'message' => '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $products[$productIndex]['is_active'] = (bool)$isActive;
        $products[$productIndex]['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            $status = $isActive ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω';
            return ['success' => true, 'message' => "–¢–æ–≤–∞—Ä $status"];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function approveReview($reviewId) {
    try {
        $dynamicData = loadDynamicData();
        if (!$dynamicData) {
            $dynamicData = initializeDynamicData();
        }

        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $reviews[$reviewIndex]['is_approved'] = true;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ –æ–¥–æ–±—Ä–µ–Ω'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function deleteReview($reviewId) {
    try {
        $dynamicData = loadDynamicData();
        if (!$dynamicData) {
            $dynamicData = initializeDynamicData();
        }

        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        array_splice($reviews, $reviewIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ —É–¥–∞–ª–µ–Ω'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ò–ù–ì–ê –†–ê–ó–î–ï–õ–û–í ===

function renderAdminSection($section, $data) {
    switch ($section) {
        case 'dashboard':
            renderDashboard($data);
            break;
        case 'products':
            renderProductsSection($data);
            break;
        case 'categories':
            renderCategoriesSection($data);
            break;
        case 'orders':
            renderOrdersSection($data);
            break;
        case 'reviews':
            renderReviewsSection($data);
            break;
        case 'news':
            renderNewsSection($data);
            break;
        case 'analytics':
            renderAnalyticsSection($data);
            break;
        case 'settings':
            renderSettingsSection($data);
            break;
        case 'logs':
            renderLogsSection($data);
            break;
        default:
            renderDefaultSection($section, $data);
    }
}

// === –î–ê–®–ë–û–†–î ===
function renderDashboard($data) {
    $stats = $data['stats'];
    $activity = $data['recent_activity'] ?? [];
    ?>
    <!-- KPI –ö–∞—Ä—Ç–æ—á–∫–∏ -->
    <div class="stats-grid">
        <?php foreach ($stats as $key => $stat): ?>
            <div class="stat-card stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>" data-stat="<?= $key ?>">
                <div class="stat-header">
                    <div class="stat-icon stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>">
                        <i class="<?= $stat['icon'] ?>"></i>
                    </div>
                    <div class="stat-trend">
                        <i class="fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>"></i>
                    </div>
                </div>

                <div class="stat-value"><?= $stat['value'] ?></div>
                <div class="stat-label"><?= $stat['label'] ?></div>
                <div class="stat-change <?= $stat['trend'] ?>">
                    <i class="fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>"></i>
                    <?= $stat['change'] ?>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- –ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂ (–∑–∞–≥–ª—É—à–∫–∞) -->
    <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 32px; margin-bottom: 40px;">
        <div class="content-card">
            <div class="content-card-header">
                <h3 class="content-card-title">
                    <i class="fas fa-chart-line"></i>
                    –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
                </h3>
                <button class="btn btn-outline btn-sm">
                    <i class="fas fa-sync-alt"></i>
                    –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
            <div class="content-card-body">
                <div style="height: 300px; background: linear-gradient(135deg, #f8f9ff, #e9ecef); border-radius: var(--border-radius-lg); display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
                    <div style="text-align: center;">
                        <i class="fas fa-chart-line" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
                        <h4>–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂</h4>
                        <p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ Chart.js –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="content-card">
            <div class="content-card-header">
                <h3 class="content-card-title">
                    <i class="fas fa-chart-pie"></i>
                    –¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                </h3>
            </div>
            <div class="content-card-body">
                <div style="height: 300px; background: linear-gradient(135deg, #f8f9ff, #e9ecef); border-radius: var(--border-radius-lg); display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
                    <div style="text-align: center;">
                        <i class="fas fa-chart-pie" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
                        <h4>–î–∏–∞–≥—Ä–∞–º–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h4>
                        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å -->
    <div class="content-card">
        <div class="content-card-header">
            <h3 class="content-card-title">
                <i class="fas fa-clock"></i>
                –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </h3>
            <button class="btn btn-outline btn-sm" onclick="location.reload()">
                <i class="fas fa-sync-alt"></i>
                –û–±–Ω–æ–≤–∏—Ç—å
            </button>
        </div>
        <div class="content-card-body">
            <div style="display: grid; gap: 16px;">
                <?php foreach ($activity as $item): ?>
                    <div style="display: flex; align-items: center; gap: 16px; padding: 16px; background: var(--bg-secondary); border-radius: var(--border-radius-lg); border-left: 4px solid var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color);">
                        <div style="width: 40px; height: 40px; border-radius: 50%; background: var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color); display: flex; align-items: center; justify-content: center; color: white;">
                            <i class="<?= $item['icon'] ?>"></i>
                        </div>
                        <div style="flex: 1;">
                            <div style="font-weight: 600; margin-bottom: 4px;"><?= $item['action'] ?></div>
                            <div style="color: var(--text-secondary); font-size: 14px;"><?= $item['details'] ?></div>
                        </div>
                        <div style="color: var(--text-muted); font-size: 13px; white-space: nowrap;">
                            <?= $item['time'] ?>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
    </div>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò ===
function renderProductsSection($data) {
    $products = $data['products'];
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class="stats-grid" style="grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;">
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['total'] ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= $stats['active'] ?></div>
            <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        <div class="stat-card stat-warning">
            <div class="stat-value"><?= $stats['featured'] ?></div>
            <div class="stat-label">–ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö</div>
        </div>
        <div class="stat-card stat-danger">
            <div class="stat-value"><?= $stats['low_stock'] ?></div>
            <div class="stat-label">–ú–∞–ª–æ —Ç–æ–≤–∞—Ä–∞</div>
        </div>
    </div>

    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <button class="btn btn-success btn-lg" onclick="openModal('addProductModal')">
                <i class="fas fa-plus"></i>
                –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
            </button>
            <button class="btn btn-outline" onclick="exportProducts()">
                <i class="fas fa-download"></i>
                –≠–∫—Å–ø–æ—Ä—Ç
            </button>
        </div>

        <!-- –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã -->
        <div class="d-flex gap-2">
            <input type="text" placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." class="form-input" style="width: 250px;" onkeyup="searchProducts(this.value)">
            <select class="form-select" onchange="filterByCategory(this.value)">
                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                <?php foreach ($categories as $category): ?>
                    <option value="<?= $category['id'] ?>"><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                <?php endforeach; ?>
            </select>
        </div>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class="content-card">
        <div class="table-container">
            <table class="table" id="productsTable">
                <thead>
                    <tr>
                        <th style="width: 60px;">–§–æ—Ç–æ</th>
                        <th>–¢–æ–≤–∞—Ä</th>
                        <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                        <th>–¶–µ–Ω–∞</th>
                        <th>–û—Å—Ç–∞—Ç–æ–∫</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th style="width: 120px;">–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($products as $product): ?>
                        <tr data-category="<?= $product['category_id'] ?>" data-name="<?= strtolower($product['name']) ?>">
                            <td>
                                <div style="width: 50px; height: 50px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-tertiary); display: flex; align-items: center; justify-content: center;">
                                    <?php if (!empty($product['images'])): ?>
                                        <img src="<?= htmlspecialchars($product['images'][0]) ?>" alt="<?= htmlspecialchars($product['name']) ?>" style="width: 100%; height: 100%; object-fit: cover;">
                                    <?php else: ?>
                                        <i class="fas fa-image" style="color: var(--text-muted);"></i>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div style="font-weight: 600; margin-bottom: 4px;"><?= htmlspecialchars(mb_substr($product['name'], 0, 50)) ?><?= mb_strlen($product['name']) > 50 ? '...' : '' ?></div>
                                <div style="font-size: 12px; color: var(--text-muted);">
                                    –ê—Ä—Ç–∏–∫—É–ª: <?= $product['sku'] ?> | ID: <?= $product['id'] ?>
                                </div>
                                <div style="margin-top: 4px;">
                                    <?php if ($product['is_featured']): ?>
                                        <span class="status-badge" style="background: gold; color: white;">üî• –•–ò–¢</span>
                                    <?php endif; ?>
                                    <?php if ($product['is_new']): ?>
                                        <span class="status-badge status-new">‚ú® –ù–û–í–ò–ù–ö–ê</span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <span class="status-badge status-new">
                                    <?= htmlspecialchars($product['category']) ?>
                                </span>
                            </td>
                            <td>
                                <div style="font-weight: 600; color: var(--success-color);"><?= number_format($product['price'], 0, '', ' ') ?> ‚ÇΩ</div>
                                <?php if ($product['old_price']): ?>
                                    <div style="font-size: 11px; color: var(--text-muted); text-decoration: line-through;">
                                        <?= number_format($product['old_price'], 0, '', ' ') ?> ‚ÇΩ
                                    </div>
                                <?php endif; ?>
                            </td>
                            <td>
                                <span class="status-badge <?= $product['stock'] <= 0 ? 'status-cancelled' : ($product['stock'] <= 5 ? 'status-processing' : 'status-completed') ?>">
                                    <?= $product['stock'] ?> —à—Ç
                                </span>
                            </td>
                            <td>
                                <label style="display: flex; align-items: center; cursor: pointer;">
                                    <input type="checkbox" <?= $product['is_active'] ? 'checked' : '' ?>
                                           onchange="toggleProductStatus(<?= $product['id'] ?>, this.checked)"
                                           style="margin-right: 8px;">
                                    <span class="status-badge <?= $product['is_active'] ? 'status-active' : 'status-inactive' ?>">
                                        <?= $product['is_active'] ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–°–∫—Ä—ã—Ç' ?>
                                    </span>
                                </label>
                            </td>
                            <td>
                                <div class="d-flex gap-1">
                                    <button class="btn btn-primary btn-sm" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteProduct(<?= $product['id'] ?>)" title="–£–¥–∞–ª–∏—Ç—å">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
    <div class="modal" id="addProductModal">
        <div class="modal-dialog" style="max-width: 800px;">
            <form method="post" enctype="multipart/form-data">
                <input type="hidden" name="action" value="create_product">
                <div class="modal-header">
                    <h3 class="modal-title">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</h3>
                    <button type="button" class="modal-close" onclick="closeModal('addProductModal')">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
                            <input type="text" name="name" class="form-input" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                            <select name="category_id" class="form-select" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                <?php foreach ($categories as $category): ?>
                                    <option value="<?= $category['id'] ?>"><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">–¶–µ–Ω–∞ (‚ÇΩ) *</label>
                            <input type="number" name="price" class="form-input" min="0" step="0.01" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ *</label>
                            <input type="number" name="stock" class="form-input" min="0" value="1" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name="short_description" class="form-textarea" rows="2"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name="description" class="form-textarea" rows="4"></textarea>
                    </div>

                    <div style="display: flex; gap: 20px; align-items: center;">
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="is_featured">
                            <span>üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä</span>
                        </label>
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="is_new">
                            <span>‚ú® –ù–æ–≤–∏–Ω–∫–∞</span>
                        </label>
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="is_active" checked>
                            <span>üëÅÔ∏è –ê–∫—Ç–∏–≤–µ–Ω</span>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="closeModal('addProductModal')">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save"></i>
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function searchProducts(query) {
            const rows = document.querySelectorAll('#productsTable tbody tr');
            const searchTerm = query.toLowerCase();

            rows.forEach(row => {
                const name = row.dataset.name;
                const visible = name.includes(searchTerm);
                row.style.display = visible ? '' : 'none';
            });
        }

        function filterByCategory(categoryId) {
            const rows = document.querySelectorAll('#productsTable tbody tr');

            rows.forEach(row => {
                const rowCategory = row.dataset.category;
                const visible = !categoryId || rowCategory === categoryId;
                row.style.display = visible ? '' : 'none';
            });
        }

        function exportProducts() {
            showNotification('–≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞—á–∞—Ç', 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–Ø–ú–ò ===
function renderCategoriesSection($data) {
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div class="stats-grid" style="grid-template-columns: repeat(2, 1fr); margin-bottom: 32px;">
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['total'] ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= $stats['active'] ?></div>
            <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
    </div>

    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <button class="btn btn-success btn-lg" onclick="openModal('addCategoryModal')">
            <i class="fas fa-plus"></i>
            –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        </button>
    </div>

    <!-- –°–µ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 24px;">
        <?php foreach ($categories as $category): ?>
            <div class="content-card" style="cursor: pointer; transition: var(--transition);" onclick="editCategory(<?= $category['id'] ?>)">
                <div class="content-card-body">
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <div class="d-flex align-items-center gap-3">
                            <div style="font-size: 48px;"><?= $category['icon'] ?></div>
                            <div>
                                <h3 style="margin: 0; font-size: 20px;"><?= htmlspecialchars($category['name']) ?></h3>
                                <p style="margin: 4px 0 0; color: var(--text-muted); font-size: 12px;">
                                    ID: <?= $category['id'] ?> | –ü–æ—Ä—è–¥–æ–∫: <?= $category['sort_order'] ?>
                                </p>
                            </div>
                        </div>
                        <span class="status-badge <?= $category['active'] ? 'status-active' : 'status-inactive' ?>">
                            <?= $category['active'] ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–°–∫—Ä—ã—Ç–∞' ?>
                        </span>
                    </div>

                    <p style="color: var(--text-secondary); margin-bottom: 20px; font-size: 14px; line-height: 1.5;">
                        <?= htmlspecialchars($category['description']) ?>
                    </p>

                    <div class="d-flex justify-content-between align-items-center" onclick="event.stopPropagation()">
                        <div style="color: var(--text-muted); font-size: 14px;">
                            <?= count(getProductsByCategory($category['id'])) ?> —Ç–æ–≤–∞—Ä–æ–≤
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary btn-sm" onclick="editCategory(<?= $category['id'] ?>)">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-outline btn-sm" onclick="viewCategoryProducts(<?= $category['id'] ?>)">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
    <div class="modal" id="addCategoryModal">
        <div class="modal-dialog">
            <form method="post">
                <input type="hidden" name="action" value="create_category">
                <div class="modal-header">
                    <h3 class="modal-title">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h3>
                    <button type="button" class="modal-close" onclick="closeModal('addCategoryModal')">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *</label>
                        <input type="text" name="name" class="form-input" required>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">–ò–∫–æ–Ω–∫–∞ (emoji)</label>
                            <input type="text" name="icon" class="form-input" placeholder="üê†" maxlength="4" style="text-align: center; font-size: 24px;">
                        </div>
                        <div class="form-group">
                            <label class="form-label">–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</label>
                            <input type="number" name="sort_order" class="form-input" min="1" value="<?= count($categories) + 1 ?>">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name="description" class="form-textarea" rows="3"></textarea>
                    </div>

                    <div class="form-group">
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="active" checked>
                            <span>–ê–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="closeModal('addCategoryModal')">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save"></i>
                        –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function editCategory(id) {
            showNotification('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        }

        function viewCategoryProducts(id) {
            window.location.href = `admin.php?section=products&category=${id}`;
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò ===
function renderOrdersSection($data) {
    $orders = $data['orders'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class="stats-grid" style="margin-bottom: 32px;">
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['total'] ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
        </div>
        <div class="stat-card stat-warning">
            <div class="stat-value"><?= $stats['new'] ?></div>
            <div class="stat-label">–ù–æ–≤—ã–µ</div>
        </div>
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['processing'] ?></div>
            <div class="stat-label">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= $stats['completed'] ?></div>
            <div class="stat-label">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
        </div>
        <div class="stat-card stat-success" style="grid-column: span 2;">
            <div class="stat-value"><?= number_format($stats['total_amount'], 0, '', ' ') ?> ‚ÇΩ</div>
            <div class="stat-label">–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤</div>
        </div>
    </div>

    <!-- –§–∏–ª—å—Ç—Ä—ã -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <button class="btn btn-outline" onclick="exportOrders()">
                <i class="fas fa-download"></i>
                –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤
            </button>
        </div>

        <div class="d-flex gap-2">
            <select class="form-select" onchange="filterOrdersByStatus(this.value)">
                <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="new">–ù–æ–≤—ã–µ</option>
                <option value="processing">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
                <option value="shipped">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                <option value="delivered">–î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                <option value="cancelled">–û—Ç–º–µ–Ω–µ–Ω</option>
            </select>
            <input type="date" class="form-input" onchange="filterOrdersByDate(this.value)">
        </div>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class="content-card">
        <div class="table-container">
            <table class="table" id="ordersTable">
                <thead>
                    <tr>
                        <th>‚Ññ –ó–∞–∫–∞–∑–∞</th>
                        <th>–ö–ª–∏–µ–Ω—Ç</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–û–ø–ª–∞—Ç–∞</th>
                        <th>–î–æ—Å—Ç–∞–≤–∫–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($orders as $order): ?>
                        <tr data-status="<?= $order['status'] ?>" data-date="<?= date('Y-m-d', strtotime($order['created_at'])) ?>">
                            <td>
                                <div style="font-weight: 600; color: var(--primary-color);"><?= $order['order_number'] ?></div>
                                <div style="font-size: 12px; color: var(--text-muted);">ID: <?= $order['id'] ?></div>
                            </td>
                            <td>
                                <div style="font-weight: 600;"><?= htmlspecialchars($order['customer_name']) ?></div>
                                <div style="font-size: 12px; color: var(--text-muted);"><?= htmlspecialchars($order['customer_email']) ?></div>
                                <div style="font-size: 12px; color: var(--text-muted);"><?= htmlspecialchars($order['customer_phone']) ?></div>
                            </td>
                            <td>
                                <div><?= date('d.m.Y', strtotime($order['created_at'])) ?></div>
                                <div style="font-size: 12px; color: var(--text-muted);"><?= date('H:i', strtotime($order['created_at'])) ?></div>
                            </td>
                            <td>
                                <div style="font-weight: 600; color: var(--success-color);"><?= number_format($order['total_amount'], 0, '', ' ') ?> ‚ÇΩ</div>
                                <div style="font-size: 12px; color: var(--text-muted);"><?= $order['items_count'] ?? 1 ?> —Ç–æ–≤–∞—Ä–æ–≤</div>
                            </td>
                            <td>
                                <select class="form-select" style="padding: 4px 8px; font-size: 12px; border-color: var(--border-color);" onchange="updateOrderStatus(<?= $order['id'] ?>, this.value)">
                                    <option value="new" <?= $order['status'] === 'new' ? 'selected' : '' ?>>–ù–æ–≤—ã–π</option>
                                    <option value="processing" <?= $order['status'] === 'processing' ? 'selected' : '' ?>>–û–±—Ä–∞–±–æ—Ç–∫–∞</option>
                                    <option value="shipped" <?= $order['status'] === 'shipped' ? 'selected' : '' ?>>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                                    <option value="delivered" <?= $order['status'] === 'delivered' ? 'selected' : '' ?>>–î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                                    <option value="cancelled" <?= $order['status'] === 'cancelled' ? 'selected' : '' ?>>–û—Ç–º–µ–Ω–µ–Ω</option>
                                </select>
                            </td>
                            <td>
                                <span class="status-badge <?= $order['payment_method'] === 'card' ? 'status-completed' : 'status-processing' ?>">
                                    <?= $order['payment_method'] === 'card' ? '–ö–∞—Ä—Ç–∞' : '–ù–∞–ª–∏—á–Ω—ã–µ' ?>
                                </span>
                            </td>
                            <td>
                                <span class="status-badge status-new">
                                    <?= $order['delivery_method'] === 'delivery' ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤—ã–≤–æ–∑' ?>
                                </span>
                            </td>
                            <td>
                                <div class="d-flex gap-1">
                                    <button class="btn btn-primary btn-sm" onclick="viewOrder(<?= $order['id'] ?>)" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-outline btn-sm" onclick="printOrder(<?= $order['id'] ?>)" title="–ü–µ—á–∞—Ç—å">
                                        <i class="fas fa-print"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function filterOrdersByStatus(status) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            rows.forEach(row => {
                const visible = !status || row.dataset.status === status;
                row.style.display = visible ? '' : 'none';
            });
        }

        function filterOrdersByDate(date) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            rows.forEach(row => {
                const visible = !date || row.dataset.date === date;
                row.style.display = visible ? '' : 'none';
            });
        }

        function viewOrder(orderId) {
            showNotification('–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞ #' + orderId, 'info');
        }

        function printOrder(orderId) {
            showNotification('–ü–µ—á–∞—Ç—å –∑–∞–∫–∞–∑–∞ #' + orderId, 'info');
        }

        function exportOrders() {
            showNotification('–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤ –Ω–∞—á–∞—Ç', 'info');
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–ó–´–í–ê–ú–ò ===
function renderReviewsSection($data) {
    $reviews = $data['reviews'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ -->
    <div class="stats-grid" style="grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;">
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['total'] ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= $stats['approved'] ?></div>
            <div class="stat-label">–û–¥–æ–±—Ä–µ–Ω–æ</div>
        </div>
        <div class="stat-card stat-warning">
            <div class="stat-value"><?= $stats['pending'] ?></div>
            <div class="stat-label">–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= number_format($stats['average_rating'], 1) ?></div>
            <div class="stat-label">–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</div>
        </div>
    </div>

    <!-- –§–∏–ª—å—Ç—Ä—ã -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div></div>
        <div class="d-flex gap-2">
            <select class="form-select" onchange="filterReviewsByStatus(this.value)">
                <option value="">–í—Å–µ –æ—Ç–∑—ã–≤—ã</option>
                <option value="approved">–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ</option>
                <option value="pending">–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</option>
            </select>
            <select class="form-select" onchange="filterReviewsByRating(this.value)">
                <option value="">–í—Å–µ —Ä–µ–π—Ç–∏–Ω–≥–∏</option>
                <option value="5">5 –∑–≤–µ–∑–¥</option>
                <option value="4">4 –∑–≤–µ–∑–¥—ã</option>
                <option value="3">3 –∑–≤–µ–∑–¥—ã</option>
                <option value="2">2 –∑–≤–µ–∑–¥—ã</option>
                <option value="1">1 –∑–≤–µ–∑–¥–∞</option>
            </select>
        </div>
    </div>

    <!-- –°–µ—Ç–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ -->
    <div style="display: grid; gap: 24px;" id="reviewsGrid">
        <?php foreach ($reviews as $review): ?>
        <div class="content-card review-item" data-approved="<?= $review['is_approved'] ? 'approved' : 'pending' ?>" data-rating="<?= $review['rating'] ?>">
            <div class="content-card-body">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <div style="flex: 1;">
                        <div class="d-flex align-items-center gap-3 mb-2">
                            <div style="font-weight: 600; font-size: 16px;"><?= htmlspecialchars($review['customer_name']) ?></div>
                            <div style="color: gold; font-size: 18px;">
                                <?= str_repeat('‚òÖ', $review['rating']) . str_repeat('‚òÜ', 5 - $review['rating']) ?>
                            </div>
                        </div>
                        <div style="font-size: 13px; color: var(--text-muted); margin-bottom: 8px;">
                            –¢–æ–≤–∞—Ä: <?= htmlspecialchars($review['product_name']) ?>
                        </div>
                        <div style="font-size: 12px; color: var(--text-muted);">
                            <?= date('d.m.Y H:i', strtotime($review['created_at'])) ?>
                        </div>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                        <span class="status-badge <?= $review['is_approved'] ? 'status-completed' : 'status-processing' ?>">
                            <?= $review['is_approved'] ? '–û–¥–æ–±—Ä–µ–Ω' : '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏' ?>
                        </span>
                        <div class="d-flex gap-1">
                            <?php if (!$review['is_approved']): ?>
                            <button class="btn btn-success btn-sm" onclick="approveReview(<?= $review['id'] ?>)" title="–û–¥–æ–±—Ä–∏—Ç—å">
                                <i class="fas fa-check"></i>
                            </button>
                            <?php endif; ?>
                            <button class="btn btn-danger btn-sm" onclick="deleteReview(<?= $review['id'] ?>)" title="–£–¥–∞–ª–∏—Ç—å">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <?php if ($review['title']): ?>
                <h4 style="margin: 0 0 12px 0; font-size: 16px; font-weight: 600;"><?= htmlspecialchars($review['title']) ?></h4>
                <?php endif; ?>

                <p style="margin: 0; line-height: 1.6; color: var(--text-secondary);">
                    <?= nl2br(htmlspecialchars($review['text'])) ?>
                </p>
            </div>
        </div>
        <?php endforeach; ?>
    </div>

    <script>
        function filterReviewsByStatus(status) {
            const items = document.querySelectorAll('.review-item');
            items.forEach(item => {
                const visible = !status || item.dataset.approved === status;
                item.style.display = visible ? '' : 'none';
            });
        }

        function filterReviewsByRating(rating) {
            const items = document.querySelectorAll('.review-item');
            items.forEach(item => {
                const visible = !rating || item.dataset.rating === rating;
                item.style.display = visible ? '' : 'none';
            });
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–°–¢–Ø–ú–ò ===
function renderNewsSection($data) {
    $news = $data['news'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π -->
    <div class="stats-grid" style="grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;">
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= $stats['total'] ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π</div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-value"><?= $stats['published'] ?></div>
            <div class="stat-label">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</div>
        </div>
        <div class="stat-card stat-warning">
            <div class="stat-value"><?= $stats['drafts'] ?></div>
            <div class="stat-label">–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</div>
        </div>
        <div class="stat-card stat-primary">
            <div class="stat-value"><?= number_format($stats['total_views']) ?></div>
            <div class="stat-label">–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
        </div>
    </div>

    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <button class="btn btn-success btn-lg" onclick="openModal('addNewsModal')">
            <i class="fas fa-plus"></i>
            –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
        </button>

        <select class="form-select" onchange="filterNewsByStatus(this.value)">
            <option value="">–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏</option>
            <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</option>
            <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</option>
        </select>
    </div>

    <!-- –°–µ—Ç–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π -->
    <div style="display: grid; gap: 24px;" id="newsGrid">
        <?php foreach ($news as $item): ?>
        <div class="content-card news-item" data-status="<?= $item['is_published'] ? 'published' : 'draft' ?>">
            <div class="content-card-body">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <div style="flex: 1;">
                        <div class="d-flex align-items-center gap-3 mb-2">
                            <h3 style="margin: 0; font-size: 20px; cursor: pointer;" onclick="editNews(<?= $item['id'] ?>)">
                                <?= htmlspecialchars($item['title']) ?>
                            </h3>
                            <span class="status-badge <?= $item['is_published'] ? 'status-completed' : 'status-processing' ?>">
                                <?= $item['is_published'] ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫' ?>
                            </span>
                            <?php if ($item['is_featured']): ?>
                            <span class="status-badge" style="background: gold; color: white;">–í–∞–∂–Ω–∞—è</span>
                            <?php endif; ?>
                        </div>
                        <div style="font-size: 12px; color: var(--text-muted);">
                            <?= date('d.m.Y H:i', strtotime($item['created_at'])) ?> | –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: <?= $item['views'] ?>
                        </div>
                    </div>
                    <div class="d-flex gap-1">
                        <button class="btn btn-primary btn-sm" onclick="editNews(<?= $item['id'] ?>)" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-outline btn-sm" onclick="viewNews(<?= $item['id'] ?>)" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="deleteNews(<?= $item['id'] ?>)" title="–£–¥–∞–ª–∏—Ç—å">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>

                <p style="margin: 0; color: var(--text-secondary); line-height: 1.6;">
                    <?= htmlspecialchars($item['excerpt']) ?>
                </p>
            </div>
        </div>
        <?php endforeach; ?>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ -->
    <div class="modal" id="addNewsModal">
        <div class="modal-dialog" style="max-width: 800px;">
            <form method="post">
                <input type="hidden" name="action" value="create_news">
                <div class="modal-header">
                    <h3 class="modal-title">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å</h3>
                    <button type="button" class="modal-close" onclick="closeModal('addNewsModal')">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="form-label">–ó–∞–≥–æ–ª–æ–≤–æ–∫ *</label>
                        <input type="text" name="title" class="form-input" required>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *</label>
                        <textarea name="excerpt" class="form-textarea" rows="2" required></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç *</label>
                        <textarea name="content" class="form-textarea" rows="8" required></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL)</label>
                        <input type="url" name="image" class="form-input" placeholder="https://example.com/image.jpg">
                    </div>

                    <div style="display: flex; gap: 20px; align-items: center;">
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="is_published" checked>
                            <span>–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å</span>
                        </label>
                        <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                            <input type="checkbox" name="is_featured">
                            <span>–í–∞–∂–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</span>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="closeModal('addNewsModal')">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save"></i>
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function filterNewsByStatus(status) {
            const items = document.querySelectorAll('.news-item');
            items.forEach(item => {
                const visible = !status || item.dataset.status === status;
                item.style.display = visible ? '' : 'none';
            });
        }

        function editNews(id) {
            showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ #' + id, 'info');
        }

        function viewNews(id) {
            window.open('index.php?page=news&id=' + id, '_blank');
        }

        function deleteNews(id) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å?')) return;
            showNotification('–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ #' + id, 'info');
        }
    </script>
    <?php
}

// === –ì–†–ê–§–ò–ö–ò –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê ===
function renderAnalyticsSection($data) {
    ?>
    <div class="content-card mb-4">
        <div class="content-card-header">
            <h3 class="content-card-title">
                <i class="fas fa-chart-line"></i>
                –ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
            </h3>
            <div class="d-flex gap-2">
                <select class="form-select">
                    <option>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
                    <option>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
                    <option>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π</option>
                </select>
                <button class="btn btn-primary">–û–±–Ω–æ–≤–∏—Ç—å</button>
            </div>
        </div>
        <div class="content-card-body">
            <div style="height: 400px; background: linear-gradient(135deg, #f8f9ff, #e9ecef); border-radius: var(--border-radius-lg); display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
                <div style="text-align: center;">
                    <i class="fas fa-chart-area" style="font-size: 64px; margin-bottom: 24px; opacity: 0.5;"></i>
                    <h3>–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂</h3>
                    <p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É Chart.js –∏–ª–∏ –¥—Ä—É–≥—É—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤</p>
                    <button class="btn btn-primary mt-3" onclick="initializeCharts()">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏</button>
                </div>
            </div>
        </div>
    </div>

    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 32px;">
        <div class="content-card">
            <div class="content-card-header">
                <h3 class="content-card-title">
                    <i class="fas fa-chart-pie"></i>
                    –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                </h3>
            </div>
            <div class="content-card-body">
                <div style="height: 300px; background: linear-gradient(135deg, #f8f9ff, #e9ecef); border-radius: var(--border-radius-lg); display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
                    <div style="text-align: center;">
                        <i class="fas fa-chart-pie" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
                        <h4>–î–∏–∞–≥—Ä–∞–º–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h4>
                    </div>
                </div>
            </div>
        </div>

        <div class="content-card">
            <div class="content-card-header">
                <h3 class="content-card-title">
                    <i class="fas fa-chart-bar"></i>
                    –¢–æ–ø —Ç–æ–≤–∞—Ä—ã
                </h3>
            </div>
            <div class="content-card-body">
                <div style="height: 300px; background: linear-gradient(135deg, #f8f9ff, #e9ecef); border-radius: var(--border-radius-lg); display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
                    <div style="text-align: center;">
                        <i class="fas fa-chart-bar" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
                        <h4>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function initializeCharts() {
            showNotification('–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Chart.js', 'info');
        }
    </script>
    <?php
}

// === –ù–ê–°–¢–†–û–ô–ö–ò ===
function renderSettingsSection($data) {
    $settings = $data['settings'];
    ?>
    <div class="content-card" style="max-width: 800px;">
        <div class="content-card-header">
            <h3 class="content-card-title">
                <i class="fas fa-cog"></i>
                –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
            </h3>
        </div>
        <div class="content-card-body">
            <form method="post">
                <input type="hidden" name="action" value="save_settings">

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
                        <input type="text" name="site_name" value="<?= htmlspecialchars($settings['site_name']) ?>" class="form-input">
                    </div>
                    <div class="form-group">
                        <label class="form-label">–í–∞–ª—é—Ç–∞</label>
                        <input type="text" name="currency" value="<?= htmlspecialchars($settings['currency']) ?>" class="form-input">
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
                    <textarea name="site_description" class="form-textarea" rows="2"><?= htmlspecialchars($settings['site_description']) ?></textarea>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</label>
                        <input type="email" name="admin_email" value="<?= htmlspecialchars($settings['admin_email']) ?>" class="form-input">
                    </div>
                    <div class="form-group">
                        <label class="form-label">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                        <input type="text" name="phone" value="<?= htmlspecialchars($settings['phone']) ?>" class="form-input">
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">–ê–¥—Ä–µ—Å</label>
                    <input type="text" name="address" value="<?= htmlspecialchars($settings['address']) ?>" class="form-input">
                </div>

                <div class="form-row-3">
                    <div class="form-group">
                        <label class="form-label">–¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É</label>
                        <input type="number" name="products_per_page" value="<?= $settings['products_per_page'] ?>" class="form-input" min="1">
                    </div>
                    <div class="form-group">
                        <label class="form-label">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ (‚ÇΩ)</label>
                        <input type="number" name="min_order_amount" value="<?= $settings['min_order_amount'] ?>" class="form-input" min="0">
                    </div>
                    <div class="form-group">
                        <label class="form-label">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç (‚ÇΩ)</label>
                        <input type="number" name="free_shipping_from" value="<?= $settings['free_shipping_from'] ?>" class="form-input" min="0">
                    </div>
                </div>

                <div class="d-flex justify-content-center mt-4">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fas fa-save"></i>
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                </div>
            </form>
        </div>
    </div>
    <?php
}

// === –°–ò–°–¢–ï–ú–ù–´–ï –õ–û–ì–ò ===
function renderLogsSection($data) {
    $logs = getSystemLogs();
    ?>
    <div class="content-card">
        <div class="content-card-header">
            <h3 class="content-card-title">
                <i class="fas fa-list-alt"></i>
                –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
            </h3>
            <button class="btn btn-outline" onclick="refreshLogs()">
                <i class="fas fa-sync-alt"></i>
                –û–±–Ω–æ–≤–∏—Ç—å
            </button>
        </div>
        <div class="content-card-body">
            <div style="display: grid; gap: 12px;">
                <?php foreach ($logs as $log): ?>
                    <div style="display: flex; align-items: center; gap: 16px; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius); border-left: 4px solid var(--<?= strtolower($log['level']) === 'success' ? 'success' : (strtolower($log['level']) === 'warning' ? 'warning' : 'info') ?>-color);">
                        <div style="font-size: 11px; color: var(--text-muted); min-width: 140px;"><?= $log['timestamp'] ?></div>
                        <div style="padding: 2px 8px; background: var(--<?= strtolower($log['level']) === 'success' ? 'success' : (strtolower($log['level']) === 'warning' ? 'warning' : 'info') ?>-color); color: white; border-radius: 4px; font-size: 10px; font-weight: 600; min-width: 60px; text-align: center;">
                            <?= $log['level'] ?>
                        </div>
                        <div style="flex: 1;"><?= $log['message'] ?></div>
                        <div style="font-size: 11px; color: var(--text-muted); min-width: 80px;"><?= $log['context'] ?></div>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
    </div>

    <script>
        function refreshLogs() {
            showNotification('–õ–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', 'info');
            setTimeout(() => location.reload(), 500);
        }
    </script>
    <?php
}

// === –°–¢–†–ê–ù–ò–¶–ê –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ ===
function renderDefaultSection($section, $data) {
    ?>
    <div class="content-card" style="text-align: center; max-width: 600px; margin: 0 auto;">
        <div class="content-card-body">
            <div style="font-size: 64px; margin-bottom: 24px; opacity: 0.6;">‚öôÔ∏è</div>
            <h3>–†–∞–∑–¥–µ–ª "<?= ucfirst($section) ?>" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
            <p style="margin: 20px 0; color: var(--text-secondary); line-height: 1.6;">
                –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.<br>
                –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è.
            </p>
            <a href="admin.php" class="btn btn-primary">
                <i class="fas fa-arrow-left"></i>
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </a>
        </div>
    </div>
    <?php
}

?>
