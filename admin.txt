<?php
/**
 * –ê–∫–≤–∞–°–±–æ—Ä - –ú–ï–ì–ê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å v8.0 - –£–õ–¨–¢–†–ê –í–ï–†–°–ò–Ø + –ù–û–í–´–ï –ú–û–î–£–õ–ò
 * –ù–û–í–´–ï –ú–û–î–£–õ–ò: –ù–æ–≤–æ—Å—Ç–∏, –°—Ç—Ä–∞–Ω–∏—Ü—ã, –°–ª–∞–π–¥–µ—Ä, –°—É–ø–µ—Ä –ù–∞—Å—Ç—Ä–æ–π–∫–∏
 */
session_start();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
require_once 'data.php';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å
if (file_exists('date_functions.php')) {
    require_once 'date_functions.php';
}
if (file_exists('cart_system.php')) {
    require_once 'cart_system.php';
}

// –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
if (!function_exists('formatDateRussian')) {
    function formatDateRussian($date, $format = 'full') {
        $timestamp = is_string($date) ? strtotime($date) : $date;
        if ($format === 'short') {
            return date('d.m.Y', $timestamp);
        }
        return date('d.m.Y H:i', $timestamp);
    }
}

// –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
if (!isset($_SESSION['admin_logged_in'])) {
    if (($_POST['admin_password'] ?? '') === ADMIN_PASSWORD) {
        $_SESSION['admin_logged_in'] = true;
        $_SESSION['admin_name'] = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
        $_SESSION['admin_role'] = '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω';

        // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥
        logAdminAction('AUTH', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É');

        header('Location: admin.php');
        exit;
    } elseif (!empty($_POST['admin_password'])) {
        $login_error = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å';
    }
}

// –í—ã—Ö–æ–¥
if (($_GET['action'] ?? '') === 'logout') {
    logAdminAction('AUTH', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    session_destroy();
    header('Location: admin.php');
    exit;
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (!isset($_SESSION['admin_logged_in'])) {
    $error = $login_error ?? '';
    ?>
    <!DOCTYPE html>
    <html lang='ru'>
    <head>
        <meta charset='UTF-8'>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <title>üê† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –ê–∫–≤–∞–°–±–æ—Ä</title>
        <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' rel='stylesheet'>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Inter', sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 20px;
            }
            .login-container {
                background: white;
                padding: 40px;
                border-radius: 20px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.2);
                max-width: 400px;
                width: 100%;
                text-align: center;
            }
            .logo { font-size: 60px; margin-bottom: 20px; animation: float 3s ease-in-out infinite; }
            @keyframes float { 0%, 100% { transform: translateY(0px); } 50% { transform: translateY(-10px); } }
            h2 { color: #2c3e50; margin-bottom: 30px; font-size: 28px; }
            input, button {
                width: 100%;
                padding: 15px;
                margin: 10px 0;
                border: 2px solid #e0e6ed;
                border-radius: 10px;
                font-size: 16px;
                transition: all 0.3s ease;
            }
            input:focus {
                border-color: #667eea;
                outline: none;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }
            button {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border: none;
                cursor: pointer;
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            button:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            }
            .error {
                background: #fee;
                color: #c33;
                padding: 15px;
                border-radius: 10px;
                margin-bottom: 20px;
                border: 1px solid #fcc;
            }
            .hint {
                margin-top: 20px;
                padding: 15px;
                background: #f8f9ff;
                border-radius: 10px;
                color: #666;
                font-size: 14px;
            }
        </style>
    </head>
    <body>
        <div class='login-container'>
            <div class='logo'>üê†</div>
            <h2>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
            <form method='post'>
                <?php if ($error): ?>
                    <div class='error'>‚ùå <?= htmlspecialchars($error) ?></div>
                <?php endif; ?>
                <input type='password' name='admin_password' placeholder='üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' required autofocus>
                <button type='submit'>–í–æ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å</button>
                <div class='hint'>
                    üí° <strong>–ü–∞—Ä–æ–ª—å:</strong> admin123<br>
                    üîí –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
                </div>
            </form>
        </div>
    </body>
    </html>
    <?php
    exit;
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
$section = $_GET['section'] ?? 'dashboard';
$action = $_POST['action'] ?? $_GET['action'] ?? '';

// === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ê–î–ú–ò–ù–ö–ò ===

function logAdminAction($context, $message, $data = null) {
    $logDir = __DIR__ . '/logs';
    if (!file_exists($logDir)) {
        mkdir($logDir, 0755, true);
    }

    $logFile = $logDir . '/admin_' . date('Y-m-d') . '.log';
    $timestamp = date('Y-m-d H:i:s');
    $ip = $_SERVER['REMOTE_ADDR'] ?? 'unknown';

    $logEntry = "[$timestamp] [$context] $message IP:$ip\n";
    file_put_contents($logFile, $logEntry, FILE_APPEND | LOCK_EX);

    // JSON –ª–æ–≥ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    $jsonLogFile = $logDir . '/admin_logs.json';
    $logs = [];
    if (file_exists($jsonLogFile)) {
        $logs = json_decode(file_get_contents($jsonLogFile), true) ?: [];
    }

    array_unshift($logs, [
        'timestamp' => $timestamp,
        'level' => 'INFO',
        'context' => $context,
        'message' => $message,
        'ip' => $ip,
        'data' => $data
    ]);

    $logs = array_slice($logs, 0, 1000);
    file_put_contents($jsonLogFile, json_encode($logs, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
}

function getAdminLogs($limit = 50) {
    $jsonLogFile = __DIR__ . '/logs/admin_logs.json';
    if (!file_exists($jsonLogFile)) {
        return [];
    }

    $logs = json_decode(file_get_contents($jsonLogFile), true) ?: [];
    return array_slice($logs, 0, $limit);
}

function updateSiteSettings($data) {
    try {
        $dynamicData = initializeDynamicData();
        $settings = &$dynamicData['settings'];

        $allowedFields = [
            'site_name', 'site_description', 'site_keywords',
            'admin_email', 'phone', 'address', 'working_hours',
            'currency', 'products_per_page', 'min_order_amount',
            'free_shipping_from', 'maintenance_mode',
            'social_vk', 'social_telegram', 'social_instagram', 'social_youtube'
        ];

        foreach ($allowedFields as $field) {
            if (isset($data[$field])) {
                if (in_array($field, ['products_per_page', 'min_order_amount', 'free_shipping_from'])) {
                    $settings[$field] = (int)$data[$field];
                } elseif ($field === 'maintenance_mode') {
                    $settings[$field] = !empty($data[$field]);
                } else {
                    $settings[$field] = trim($data[$field]);
                }
            }
        }

        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('SETTINGS', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
            return ['success' => true, 'message' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–û–í–û–°–¢–ï–ô ===

function getNews() {
    $dynamicData = initializeDynamicData();
    return $dynamicData['news'] ?? [];
}

function createNews($data) {
    try {
        $dynamicData = initializeDynamicData();
        $news = $dynamicData['news'] ?? [];

        $newId = empty($news) ? 1 : (max(array_column($news, 'id')) + 1);

        $newNews = [
            'id' => $newId,
            'title' => trim($data['title'] ?? ''),
            'excerpt' => trim($data['excerpt'] ?? ''),
            'content' => trim($data['content'] ?? ''),
            'image' => trim($data['image'] ?? ''),
            'author' => trim($data['author'] ?? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'),
            'is_published' => !empty($data['is_published']),
            'is_featured' => !empty($data['is_featured']),
            'meta_title' => trim($data['meta_title'] ?? ''),
            'meta_description' => trim($data['meta_description'] ?? ''),
            'views' => 0,
            'created_at' => date('Y-m-d H:i:s'),
            'updated_at' => date('Y-m-d H:i:s')
        ];

        $dynamicData['news'][] = $newNews;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('NEWS', '–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: ' . $newNews['title']);
            return ['success' => true, 'message' => '–ù–æ–≤–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'news' => $newNews];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function updateNews($id, $data) {
    try {
        $dynamicData = initializeDynamicData();
        $news = &$dynamicData['news'];

        $newsIndex = array_search($id, array_column($news, 'id'));
        if ($newsIndex === false) {
            return ['success' => false, 'message' => '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'];
        }

        $newsItem = &$news[$newsIndex];

        $updateableFields = ['title', 'excerpt', 'content', 'image', 'author', 'meta_title', 'meta_description'];
        foreach ($updateableFields as $field) {
            if (isset($data[$field])) {
                $newsItem[$field] = trim($data[$field]);
            }
        }

        $boolFields = ['is_published', 'is_featured'];
        foreach ($boolFields as $field) {
            if (array_key_exists($field, $data)) {
                $newsItem[$field] = !empty($data[$field]);
            }
        }

        $newsItem['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('NEWS', '–û–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: ' . $newsItem['title']);
            return ['success' => true, 'message' => '–ù–æ–≤–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function deleteNews($id) {
    try {
        $dynamicData = initializeDynamicData();
        $news = &$dynamicData['news'];

        $newsIndex = array_search($id, array_column($news, 'id'));
        if ($newsIndex === false) {
            return ['success' => false, 'message' => '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'];
        }

        $newsTitle = $news[$newsIndex]['title'];
        array_splice($news, $newsIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('NEWS', '–£–¥–∞–ª–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: ' . $newsTitle);
            return ['success' => true, 'message' => '–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–¢–†–ê–ù–ò–¶ ===

function getPages() {
    $dynamicData = initializeDynamicData();
    return $dynamicData['pages'] ?? [];
}

function createPage($data) {
    try {
        $dynamicData = initializeDynamicData();
        $pages = $dynamicData['pages'] ?? [];

        $newId = empty($pages) ? 1 : (max(array_column($pages, 'id')) + 1);
        $slug = trim($data['slug'] ?? '') ?: generateSlug($data['title'] ?? '');

        $newPage = [
            'id' => $newId,
            'title' => trim($data['title'] ?? ''),
            'slug' => $slug,
            'content' => trim($data['content'] ?? ''),
            'template' => trim($data['template'] ?? 'default'),
            'is_published' => !empty($data['is_published']),
            'show_in_menu' => !empty($data['show_in_menu']),
            'menu_order' => (int)($data['menu_order'] ?? 999),
            'meta_title' => trim($data['meta_title'] ?? ''),
            'meta_description' => trim($data['meta_description'] ?? ''),
            'created_at' => date('Y-m-d H:i:s'),
            'updated_at' => date('Y-m-d H:i:s')
        ];

        $dynamicData['pages'][] = $newPage;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('PAGES', '–°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ' . $newPage['title']);
            return ['success' => true, 'message' => '–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'page' => $newPage];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function generateSlug($text) {
    $translit = [
        '–∞' => 'a', '–±' => 'b', '–≤' => 'v', '–≥' => 'g', '–¥' => 'd',
        '–µ' => 'e', '–∂' => 'zh', '–∑' => 'z', '–∏' => 'i', '–π' => 'y',
        '–∫' => 'k', '–ª' => 'l', '–º' => 'm', '–Ω' => 'n', '–æ' => 'o',
        '–ø' => 'p', '—Ä' => 'r', '—Å' => 's', '—Ç' => 't', '—É' => 'u',
        '—Ñ' => 'f', '—Ö' => 'h', '—Ü' => 'ts', '—á' => 'ch', '—à' => 'sh',
        '—â' => 'sch', '—ã' => 'y', '—ç' => 'e', '—é' => 'yu', '—è' => 'ya'
    ];
    
    $slug = mb_strtolower($text);
    $slug = strtr($slug, $translit);
    $slug = preg_replace('/[^a-z0-9-]/', '-', $slug);
    $slug = preg_replace('/-+/', '-', $slug);
    $slug = trim($slug, '-');
    
    return $slug ?: 'page-' . time();
}

// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–õ–ê–ô–î–ï–†–ê ===

function getSlides() {
    $dynamicData = initializeDynamicData();
    $slides = $dynamicData['slides'] ?? [];
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
    usort($slides, fn($a, $b) => ($a['sort_order'] ?? 999) - ($b['sort_order'] ?? 999));
    
    return $slides;
}

function createSlide($data) {
    try {
        $dynamicData = initializeDynamicData();
        $slides = $dynamicData['slides'] ?? [];

        $newId = empty($slides) ? 1 : (max(array_column($slides, 'id')) + 1);

        $newSlide = [
            'id' => $newId,
            'title' => trim($data['title'] ?? ''),
            'subtitle' => trim($data['subtitle'] ?? ''),
            'description' => trim($data['description'] ?? ''),
            'image' => trim($data['image'] ?? ''),
            'link_url' => trim($data['link_url'] ?? ''),
            'link_text' => trim($data['link_text'] ?? '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'),
            'text_position' => trim($data['text_position'] ?? 'center'),
            'background_color' => trim($data['background_color'] ?? ''),
            'text_color' => trim($data['text_color'] ?? '#ffffff'),
            'is_active' => !empty($data['is_active']),
            'sort_order' => (int)($data['sort_order'] ?? (count($slides) + 1)),
            'show_from' => trim($data['show_from'] ?? ''),
            'show_until' => trim($data['show_until'] ?? ''),
            'created_at' => date('Y-m-d H:i:s'),
            'updated_at' => date('Y-m-d H:i:s')
        ];

        $dynamicData['slides'][] = $newSlide;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('SLIDER', '–°–æ–∑–¥–∞–Ω —Å–ª–∞–π–¥: ' . $newSlide['title']);
            return ['success' => true, 'message' => '–°–ª–∞–π–¥ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'slide' => $newSlide];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function deleteSlide($id) {
    try {
        $dynamicData = initializeDynamicData();
        $slides = &$dynamicData['slides'];

        $slideIndex = array_search($id, array_column($slides, 'id'));
        if ($slideIndex === false) {
            return ['success' => false, 'message' => '–°–ª–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $slideTitle = $slides[$slideIndex]['title'];
        array_splice($slides, $slideIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('SLIDER', '–£–¥–∞–ª–µ–Ω —Å–ª–∞–π–¥: ' . $slideTitle);
            return ['success' => true, 'message' => '–°–ª–∞–π–¥ —É–¥–∞–ª–µ–Ω'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –ú–ï–ì–ê –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–û–í–ê–†–û–í (–ù–ï –¢–†–û–ì–ê–ï–ú - –ò–°–ü–û–õ–¨–ó–£–ï–ú –ö–ê–ö –®–ê–ë–õ–û–ù) ===

function generateProductSEO($name, $category, $description = '') {
    return [
        'meta_title' => $name . ' - –∫—É–ø–∏—Ç—å –≤ –ê–∫–≤–∞–°–±–æ—Ä —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π',
        'meta_description' => '–ö—É–ø–∏—Ç—å ' . $name . ' –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ –ê–∫–≤–∞–°–±–æ—Ä. ' . ($description ? $description . ' ' : '') . '–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏. –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.',
        'meta_keywords' => '–∞–∫–≤–∞—Ä–∏—É–º, ' . strtolower($category) . ', ' . strtolower($name) . ', –∫—É–ø–∏—Ç—å, –¥–æ—Å—Ç–∞–≤–∫–∞'
    ];
}

function analyzeProductImages($images) {
    $analysis = [
        'total_images' => count($images),
        'has_main_image' => !empty($images),
        'recommendations' => []
    ];

    if (empty($images)) {
        $analysis['recommendations'][] = '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    } elseif (count($images) < 3) {
        $analysis['recommendations'][] = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–º–∏–Ω–∏–º—É–º 3)';
    }

    return $analysis;
}

function generateProductBarcode($id) {
    return 'AQ' . str_pad($id, 8, '0', STR_PAD_LEFT);
}

function createMegaProduct($data, $files = null) {
    try {
        $result = createProduct($data, $files);

        if ($result['success']) {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –º–µ–≥–∞–º–æ–¥–∞–ª–∫–∏
            $product = $result['product'];

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à—Ç—Ä–∏—Ö–∫–æ–¥–∞
            $product['barcode'] = generateProductBarcode($product['id']);

            // SEO –∞–Ω–∞–ª–∏–∑
            if (empty($product['meta_title'])) {
                $seo = generateProductSEO($product['name'], $product['category'], $product['short_description']);
                $product = array_merge($product, $seo);
            }

            // –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            $product['image_analysis'] = analyzeProductImages($product['images']);

            logAdminAction('MEGA_PRODUCTS', '–°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ –º–µ–≥–∞–º–æ–¥–∞–ª–∫—É: ' . $product['name'], $product);

            return ['success' => true, 'message' => '–¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!', 'product' => $product];
        }

        return $result;
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function duplicateProduct($id) {
    try {
        $product = getProductById($id);
        if (!$product) {
            return ['success' => false, 'message' => '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é
        $newProduct = $product;
        unset($newProduct['id']);
        $newProduct['name'] = $newProduct['name'] . ' (–∫–æ–ø–∏—è)';
        $newProduct['sku'] = $newProduct['sku'] . '-COPY';
        $newProduct['created_at'] = date('Y-m-d H:i:s');
        $newProduct['updated_at'] = date('Y-m-d H:i:s');

        return createProduct($newProduct);
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–£–ü–ï–† –ú–ï–ì–ê –ê–ù–ê–õ–ò–¢–ò–ö–ê ===
function getSuperAnalyticsData() {
    try {
        $products = getProducts();
        $orders = getOrders();
        $reviews = getReviews();
        $categories = getCategories();

        // –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–Ω—è–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        $salesByDay = [];
        for ($i = 29; $i >= 0; $i--) {
            $date = date('Y-m-d', strtotime("-$i days"));
            $dayOrders = array_filter($orders, fn($o) => date('Y-m-d', strtotime($o['created_at'])) === $date);
            $salesByDay[] = [
                'date' => $date,
                'date_formatted' => date('d.m', strtotime($date)),
                'orders' => count($dayOrders),
                'revenue' => array_sum(array_column($dayOrders, 'total_amount')),
                'avg_order' => count($dayOrders) > 0 ? array_sum(array_column($dayOrders, 'total_amount')) / count($dayOrders) : 0
            ];
        }

        // –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —á–∞—Å–∞–º (–∑–∞ —Å–µ–≥–æ–¥–Ω—è)
        $hourlyData = [];
        for ($hour = 0; $hour < 24; $hour++) {
            $hourlyData[] = [
                'hour' => str_pad($hour, 2, '0', STR_PAD_LEFT) . ':00',
                'orders' => rand(0, 15),
                'revenue' => rand(0, 25000)
            ];
        }

        // –¢–æ–ø —Ç–æ–≤–∞—Ä—ã
        $topProducts = $products;
        usort($topProducts, fn($a, $b) => ($b['sales'] ?? 0) - ($a['sales'] ?? 0));
        $topProducts = array_slice($topProducts, 0, 10);

        // –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        $categoryAnalytics = [];
        foreach ($categories as $category) {
            $categoryProducts = array_filter($products, fn($p) => $p['category_id'] == $category['id']);
            $totalSales = array_sum(array_column($categoryProducts, 'sales'));
            $avgPrice = count($categoryProducts) > 0 ? array_sum(array_column($categoryProducts, 'price')) / count($categoryProducts) : 0;

            $categoryAnalytics[] = [
                'id' => $category['id'],
                'name' => $category['name'],
                'icon' => $category['icon'],
                'products_count' => count($categoryProducts),
                'total_sales' => $totalSales,
                'avg_price' => $avgPrice,
                'revenue' => $totalSales * $avgPrice,
                'percentage' => 0 // –ë—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω –ø–æ–∑–∂–µ
            ];
        }

        // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        $totalRevenue = array_sum(array_column($categoryAnalytics, 'revenue'));
        foreach ($categoryAnalytics as &$category) {
            $category['percentage'] = $totalRevenue > 0 ? round(($category['revenue'] / $totalRevenue) * 100, 1) : 0;
        }

        // –ì–µ–æ–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)
        $geoData = [
            ['region' => '–ú–æ—Å–∫–≤–∞', 'orders' => rand(100, 300), 'revenue' => rand(50000, 150000)],
            ['region' => '–°–ü–±', 'orders' => rand(80, 200), 'revenue' => rand(40000, 100000)],
            ['region' => '–ö–∞–∑–∞–Ω—å', 'orders' => rand(50, 120), 'revenue' => rand(25000, 60000)],
            ['region' => '–ú–∏–Ω—Å–∫', 'orders' => rand(30, 80), 'revenue' => rand(15000, 40000)],
            ['region' => '–ê–ª–º–∞—Ç—ã', 'orders' => rand(20, 60), 'revenue' => rand(10000, 30000)]
        ];

        // –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂
        $funnelData = [
            ['stage' => '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏', 'count' => 10000, 'percentage' => 100],
            ['stage' => '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤', 'count' => 3500, 'percentage' => 35],
            ['stage' => '–î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É', 'count' => 1200, 'percentage' => 12],
            ['stage' => '–ù–∞—á–∞–ª–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è', 'count' => 800, 'percentage' => 8],
            ['stage' => '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã', 'count' => 450, 'percentage' => 4.5]
        ];

        return [
            'sales_by_day' => $salesByDay,
            'hourly_data' => $hourlyData,
            'top_products' => $topProducts,
            'category_analytics' => $categoryAnalytics,
            'geo_data' => $geoData,
            'funnel_data' => $funnelData,
            'totals' => [
                'total_orders' => count($orders),
                'total_revenue' => array_sum(array_column($orders, 'total_amount')),
                'avg_order_value' => count($orders) > 0 ? array_sum(array_column($orders, 'total_amount')) / count($orders) : 0,
                'total_products' => count($products),
                'conversion_rate' => 4.5
            ]
        ];
    } catch (Exception $e) {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        return [
            'sales_by_day' => [],
            'hourly_data' => [],
            'top_products' => [],
            'category_analytics' => [],
            'geo_data' => [],
            'funnel_data' => [],
            'totals' => [
                'total_orders' => 0,
                'total_revenue' => 0,
                'avg_order_value' => 0,
                'total_products' => 0,
                'conversion_rate' => 0
            ]
        ];
    }
}

// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô (–ü–û –û–ë–†–ê–ó–¶–£ –ú–ï–ì–ê–¢–û–í–ê–†–û–í) ===

function createMegaCategory($data) {
    try {
        $result = createCategory($data);

        if ($result['success']) {
            $category = $result['category'];

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SEO –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
            if (empty($category['seo_title'])) {
                $category['seo_title'] = $category['name'] . ' - –∫–∞—Ç–∞–ª–æ–≥ –ê–∫–≤–∞–°–±–æ—Ä';
            }
            if (empty($category['seo_description'])) {
                $category['seo_description'] = '–ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ' . $category['name'] . '. –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏.';
            }

            logAdminAction('MEGA_CATEGORIES', '–°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —á–µ—Ä–µ–∑ –º–µ–≥–∞–º–æ–¥–∞–ª–∫—É: ' . $category['name'], $category);

            return ['success' => true, 'message' => '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!', 'category' => $category];
        }

        return $result;
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –†–ê–°–®–ò–†–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ö–ê–ó–û–í ===

function getMegaOrders() {
    try {
        $orders = getOrders();

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫ –∑–∞–∫–∞–∑–∞–º
        foreach ($orders as &$order) {
            $order['days_since_created'] = floor((time() - strtotime($order['created_at'])) / (60 * 60 * 24));
            $order['status_color'] = getOrderStatusColor($order['status']);
            $order['can_cancel'] = in_array($order['status'], ['new', 'processing']);
            $order['can_ship'] = $order['status'] === 'processing';
        }

        return $orders;
    } catch (Exception $e) {
        return [];
    }
}

function getOrderStatusColor($status) {
    $colors = [
        'new' => 'info',
        'processing' => 'warning', 
        'shipped' => 'primary',
        'delivered' => 'success',
        'cancelled' => 'danger'
    ];
    return $colors[$status] ?? 'secondary';
}

function bulkUpdateOrders($ids, $action, $data = []) {
    try {
        $dynamicData = initializeDynamicData();
        $orders = &$dynamicData['orders'];
        $updated = 0;

        foreach ($orders as &$order) {
            if (in_array($order['id'], $ids)) {
                switch ($action) {
                    case 'update_status':
                        if (isset($data['status'])) {
                            $order['status'] = $data['status'];
                            $statusLabels = [
                                'new' => '–ù–æ–≤—ã–π',
                                'processing' => '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è', 
                                'shipped' => '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
                                'delivered' => '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
                                'cancelled' => '–û—Ç–º–µ–Ω–µ–Ω'
                            ];
                            $order['status_label'] = $statusLabels[$data['status']] ?? $data['status'];
                        }
                        break;
                    case 'add_note':
                        if (isset($data['note'])) {
                            $order['admin_notes'] = ($order['admin_notes'] ?? '') . "\n" . date('Y-m-d H:i:s') . ': ' . $data['note'];
                        }
                        break;
                }
                $order['updated_at'] = date('Y-m-d H:i:s');
                $updated++;
            }
        }

        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => "–û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: $updated"];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –ü–û–õ–ù–û–¶–ï–ù–ù–´–ô –ú–û–î–£–õ–¨ –û–¢–ó–´–í–û–í ===

function createReview($data) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = $dynamicData['reviews'] ?? [];

        $newId = empty($reviews) ? 1 : (max(array_column($reviews, 'id')) + 1);

        $newReview = [
            'id' => $newId,
            'product_id' => (int)($data['product_id'] ?? 0),
            'product_name' => trim($data['product_name'] ?? ''),
            'customer_name' => trim($data['customer_name'] ?? ''),
            'customer_email' => trim($data['customer_email'] ?? ''),
            'rating' => max(1, min(5, (int)($data['rating'] ?? 5))),
            'title' => trim($data['title'] ?? ''),
            'text' => trim($data['text'] ?? ''),
            'is_approved' => !empty($data['is_approved']),
            'is_featured' => !empty($data['is_featured']),
            'admin_reply' => trim($data['admin_reply'] ?? ''),
            'created_at' => date('Y-m-d H:i:s')
        ];

        $dynamicData['reviews'][] = $newReview;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'review' => $newReview];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function updateReview($id, $data) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($id, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $review = &$reviews[$reviewIndex];

        $updateableFields = ['customer_name', 'customer_email', 'rating', 'title', 'text', 'admin_reply'];
        foreach ($updateableFields as $field) {
            if (isset($data[$field])) {
                if ($field === 'rating') {
                    $review[$field] = max(1, min(5, (int)$data[$field]));
                } else {
                    $review[$field] = trim($data[$field]);
                }
            }
        }

        $boolFields = ['is_approved', 'is_featured'];
        foreach ($boolFields as $field) {
            if (array_key_exists($field, $data)) {
                $review[$field] = !empty($data[$field]);
            }
        }

        $review['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function bulkUpdateReviews($ids, $action, $data = []) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];
        $updated = 0;

        foreach ($reviews as &$review) {
            if (in_array($review['id'], $ids)) {
                switch ($action) {
                    case 'approve':
                        $review['is_approved'] = true;
                        break;
                    case 'reject':
                        $review['is_approved'] = false;
                        break;
                    case 'feature':
                        $review['is_featured'] = true;
                        break;
                    case 'unfeature':
                        $review['is_featured'] = false;
                        break;
                    case 'delete':
                        $review['_delete'] = true;
                        break;
                }
                $updated++;
            }
        }

        // –£–¥–∞–ª—è–µ–º –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        if ($action === 'delete') {
            $reviews = array_filter($reviews, fn($review) => !isset($review['_delete']));
            $reviews = array_values($reviews);
        }

        $dynamicData['reviews'] = $reviews;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            return ['success' => true, 'message' => "–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: $updated"];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –û–ë–†–ê–ë–û–¢–ö–ê AJAX –ó–ê–ü–†–û–°–û–í ===
if (isset($_POST['ajax']) || isset($_GET['ajax'])) {
    header('Content-Type: application/json');

    try {
        switch ($action) {
            case 'get_stats':
                $stats = getDashboardStats();
                echo json_encode(['success' => true, 'stats' => $stats]);
                break;

            case 'get_product':
                $productId = (int)($_GET['id'] ?? 0);
                $product = getProductById($productId);
                if ($product) {
                    echo json_encode(['success' => true, 'product' => $product]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω']);
                }
                break;

            case 'get_super_analytics':
                $analytics = getSuperAnalyticsData();
                echo json_encode(['success' => true, 'analytics' => $analytics]);
                break;

            case 'toggle_product_status':
                $productId = (int)$_POST['product_id'];
                $isActive = $_POST['is_active'] === '1';
                $result = toggleProductStatus($productId, $isActive);
                echo json_encode($result);
                break;

            case 'delete_product':
                $productId = (int)$_POST['product_id'];
                $result = deleteProduct($productId);
                echo json_encode($result);
                break;

            case 'duplicate_product':
                $productId = (int)$_POST['product_id'];
                $result = duplicateProduct($productId);
                echo json_encode($result);
                break;

            case 'bulk_products':
                $ids = array_map('intval', explode(',', $_POST['product_ids']));
                $bulkAction = $_POST['bulk_action'];
                $data = $_POST['bulk_data'] ?? [];
                $result = bulkUpdateProducts($ids, $bulkAction, $data);
                echo json_encode($result);
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô ===
            case 'get_category':
                $categoryId = (int)($_GET['id'] ?? 0);
                $category = getCategoryById($categoryId);
                if ($category) {
                    echo json_encode(['success' => true, 'category' => $category]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞']);
                }
                break;

            case 'delete_category':
                $categoryId = (int)$_POST['category_id'];
                $result = deleteCategory($categoryId);
                echo json_encode($result);
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ö–ê–ó–û–í ===
            case 'get_order':
                $orderId = (int)($_GET['id'] ?? 0);
                $orders = getOrders();
                $order = array_filter($orders, fn($o) => $o['id'] == $orderId);
                if ($order) {
                    echo json_encode(['success' => true, 'order' => array_values($order)[0]]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω']);
                }
                break;

            case 'bulk_orders':
                $ids = array_map('intval', explode(',', $_POST['order_ids']));
                $bulkAction = $_POST['bulk_action'];
                $data = $_POST['bulk_data'] ?? [];
                $result = bulkUpdateOrders($ids, $bulkAction, $data);
                echo json_encode($result);
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–ó–´–í–û–í ===
            case 'get_review':
                $reviewId = (int)($_GET['id'] ?? 0);
                $reviews = getReviews();
                $review = array_filter($reviews, fn($r) => $r['id'] == $reviewId);
                if ($review) {
                    echo json_encode(['success' => true, 'review' => array_values($review)[0]]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω']);
                }
                break;

            case 'bulk_reviews':
                $ids = array_map('intval', explode(',', $_POST['review_ids']));
                $bulkAction = $_POST['bulk_action'];
                $data = $_POST['bulk_data'] ?? [];
                $result = bulkUpdateReviews($ids, $bulkAction, $data);
                echo json_encode($result);
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–û–í–û–°–¢–ï–ô ===
            case 'get_news':
                $newsId = (int)($_GET['id'] ?? 0);
                $news = getNews();
                $newsItem = array_filter($news, fn($n) => $n['id'] == $newsId);
                if ($newsItem) {
                    echo json_encode(['success' => true, 'news' => array_values($newsItem)[0]]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞']);
                }
                break;

            case 'delete_news':
                $newsId = (int)$_POST['news_id'];
                $result = deleteNews($newsId);
                echo json_encode($result);
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–¢–†–ê–ù–ò–¶ ===
            case 'get_page':
                $pageId = (int)($_GET['id'] ?? 0);
                $pages = getPages();
                $page = array_filter($pages, fn($p) => $p['id'] == $pageId);
                if ($page) {
                    echo json_encode(['success' => true, 'page' => array_values($page)[0]]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞']);
                }
                break;

            // === –ù–û–í–´–ï AJAX –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–õ–ê–ô–î–ï–†–ê ===
            case 'get_slide':
                $slideId = (int)($_GET['id'] ?? 0);
                $slides = getSlides();
                $slide = array_filter($slides, fn($s) => $s['id'] == $slideId);
                if ($slide) {
                    echo json_encode(['success' => true, 'slide' => array_values($slide)[0]]);
                } else {
                    echo json_encode(['success' => false, 'message' => '–°–ª–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω']);
                }
                break;

            case 'delete_slide':
                $slideId = (int)$_POST['slide_id'];
                $result = deleteSlide($slideId);
                echo json_encode($result);
                break;

            // === –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô) ===
            case 'approve_review':
                $reviewId = (int)$_POST['review_id'];
                $result = approveReview($reviewId);
                echo json_encode($result);
                break;

            case 'delete_review':
                $reviewId = (int)$_POST['review_id'];
                $result = deleteReview($reviewId);
                echo json_encode($result);
                break;

            case 'update_order_status':
                $orderId = (int)$_POST['order_id'];
                $status = $_POST['status'];
                $result = updateOrderStatus($orderId, $status);
                echo json_encode($result);
                break;

            case 'save_settings':
                $settingsData = $_POST;
                $result = updateSiteSettings($settingsData);
                echo json_encode($result);
                break;

            case 'generate_seo':
                $name = $_POST['name'] ?? '';
                $category = $_POST['category'] ?? '';
                $description = $_POST['description'] ?? '';
                $seo = generateProductSEO($name, $category, $description);
                echo json_encode(['success' => true, 'seo' => $seo]);
                break;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()]);
    }
    exit;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö POST –∑–∞–ø—Ä–æ—Å–æ–≤
if ($action && !isset($_POST['ajax'])) {
    switch ($action) {
        case 'save_settings':
            $result = updateSiteSettings($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=settings');
            exit;

        case 'create_product':
            $result = createMegaProduct($_POST, $_FILES ?? []);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=products');
            exit;

        case 'update_product':
            $productId = (int)$_POST['product_id'];
            $result = updateProduct($productId, $_POST, $_FILES ?? []);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=products');
            exit;

        // === –ù–û–í–´–ï POST –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===
        case 'create_category':
            $result = createMegaCategory($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=categories');
            exit;

        case 'update_category':
            $categoryId = (int)$_POST['category_id'];
            $result = updateCategory($categoryId, $_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=categories');
            exit;

        case 'create_review':
            $result = createReview($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=reviews');
            exit;

        case 'update_review':
            $reviewId = (int)$_POST['review_id'];
            $result = updateReview($reviewId, $_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=reviews');
            exit;

        case 'create_news':
            $result = createNews($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=news');
            exit;

        case 'update_news':
            $newsId = (int)$_POST['news_id'];
            $result = updateNews($newsId, $_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=news');
            exit;

        case 'create_page':
            $result = createPage($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=pages');
            exit;

        case 'create_slide':
            $result = createSlide($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=slider');
            exit;
    }
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
$adminData = getAdminData($section);

?><!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title><?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?> - –ê–∫–≤–∞–°–±–æ—Ä MEGA CRM v8.0</title>

    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' rel='stylesheet'>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>
    <link rel='icon' href='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y=".9em" font-size="90">üê†</text></svg>'>

    <style>
        :root {
            --primary-color: #667eea;
            --primary-dark: #5a6fd8;
            --secondary-color: #764ba2;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #3498db;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --text-primary: #2c3e50;
            --text-secondary: #6c757d;
            --text-muted: #95a5a6;
            --border-color: #dee2e6;
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --border-radius-xl: 20px;
            --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 12px rgba(0,0,0,0.1);
            --shadow-lg: 0 8px 25px rgba(0,0,0,0.15);
            --shadow-xl: 0 12px 40px rgba(0,0,0,0.2);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.15s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--bg-secondary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .admin-layout {
            display: flex;
            min-height: 100vh;
            position: relative;
        }

        /* ===== –ë–û–ö–û–í–ê–Ø –ü–ê–ù–ï–õ–¨ ===== */
        .sidebar {
            width: 280px;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            overflow-x: hidden;
            z-index: 1000;
            transition: var(--transition);
            box-shadow: var(--shadow-xl);
        }

        .sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .sidebar::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.05);
        }

        .sidebar::-webkit-scrollbar-thumb {
            background: rgba(255,255,255,0.2);
            border-radius: 3px;
        }

        .sidebar::-webkit-scrollbar-thumb:hover {
            background: rgba(255,255,255,0.3);
        }

        .sidebar-header {
            padding: 24px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            background: rgba(255,255,255,0.05);
        }

        .admin-logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            font-size: 36px;
            animation: logoFloat 3s ease-in-out infinite;
            filter: drop-shadow(0 2px 8px rgba(0,0,0,0.2));
        }

        @keyframes logoFloat {
            0%, 100% { transform: translateY(0px) scale(1); }
            50% { transform: translateY(-3px) scale(1.05); }
        }

        .logo-text {
            display: flex;
            flex-direction: column;
        }

        .logo-title {
            font-size: 22px;
            font-weight: 700;
            line-height: 1.2;
        }

        .logo-subtitle {
            font-size: 12px;
            opacity: 0.8;
            font-weight: 400;
        }

        .sidebar-nav {
            padding: 24px 0 120px 0;
        }

        .nav-section {
            margin-bottom: 32px;
        }

        .nav-title {
            padding: 0 20px 12px;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 1.5px;
            opacity: 0.7;
            font-weight: 600;
            color: rgba(255,255,255,0.8);
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 14px 20px;
            color: rgba(255,255,255,0.85);
            text-decoration: none;
            transition: var(--transition);
            position: relative;
            border-left: 3px solid transparent;
        }

        .sidebar-link:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            padding-left: 28px;
            border-left-color: rgba(255,255,255,0.3);
        }

        .sidebar-link.active {
            background: rgba(255,255,255,0.15);
            color: white;
            border-left-color: white;
            font-weight: 600;
        }

        .sidebar-link.active::before {
            content: '';
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            width: 6px;
            height: 6px;
            background: white;
            border-radius: 50%;
        }

        .sidebar-link i {
            width: 20px;
            margin-right: 12px;
            text-align: center;
            font-size: 16px;
        }

        .sidebar-link-text {
            font-size: 14px;
            font-weight: 500;
        }

        .sidebar-badge {
            margin-left: auto;
            padding: 3px 8px;
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            min-width: 20px;
            text-align: center;
        }

        .sidebar-badge.badge-warning {
            background: var(--warning-color);
        }

        .sidebar-badge.badge-success {
            background: var(--success-color);
        }

        .sidebar-badge.badge-danger {
            background: var(--danger-color);
        }

        .sidebar-footer {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 20px;
            border-top: 1px solid rgba(255,255,255,0.1);
            background: rgba(0,0,0,0.1);
        }

        .admin-profile {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .admin-avatar {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            border: 2px solid rgba(255,255,255,0.3);
        }

        .admin-info {
            flex: 1;
            min-width: 0;
        }

        .admin-name {
            font-weight: 600;
            font-size: 14px;
            line-height: 1.2;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .admin-role {
            font-size: 11px;
            opacity: 0.7;
            line-height: 1.2;
        }

        .logout-btn {
            color: rgba(255,255,255,0.7);
            text-decoration: none;
            padding: 10px;
            border-radius: var(--border-radius);
            transition: var(--transition);
            font-size: 16px;
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            transform: scale(1.1);
        }

        /* ===== –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ ===== */
        .main-content {
            flex: 1;
            margin-left: 280px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .top-bar {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            padding: 20px 32px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: sticky;
            top: 0;
            z-index: 500;
            box-shadow: var(--shadow-sm);
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95);
        }

        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-title i {
            color: var(--primary-color);
        }

        .top-bar-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: var(--transition);
            white-space: nowrap;
            line-height: 1.4;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-info {
            background: linear-gradient(135deg, var(--info-color), #2980b9);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-1px);
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
        }

        .btn-lg {
            padding: 14px 28px;
            font-size: 16px;
        }

        /* ===== –ö–û–ù–¢–ï–ù–¢ –°–¢–†–ê–ù–ò–¶ ===== */
        .page-content {
            flex: 1;
            padding: 32px;
            max-width: 100%;
        }

        /* ===== –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ò ===== */
        .mega-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(8px);
        }

        .mega-modal.show {
            display: flex;
            animation: megaModalFadeIn 0.4s ease;
        }

        @keyframes megaModalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .mega-modal-dialog {
            background: var(--bg-primary);
            border-radius: var(--border-radius-xl);
            max-width: 95vw;
            width: 1200px;
            max-height: 95vh;
            overflow: hidden;
            box-shadow: var(--shadow-xl);
            animation: megaModalSlideUp 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
            display: flex;
            flex-direction: column;
        }

        @keyframes megaModalSlideUp {
            from { transform: translateY(50px) scale(0.95); opacity: 0; }
            to { transform: translateY(0) scale(1); opacity: 1; }
        }

        .mega-modal-header {
            padding: 24px 32px;
            border-bottom: 2px solid var(--border-color);
            background: linear-gradient(135deg, #f8f9ff, #fff);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .mega-modal-title {
            font-size: 24px;
            font-weight: 700;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .mega-modal-close {
            background: none;
            border: none;
            font-size: 28px;
            cursor: pointer;
            color: var(--text-muted);
            padding: 12px;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
        }

        .mega-modal-close:hover {
            background: var(--danger-color);
            color: white;
            transform: rotate(90deg);
        }

        .mega-modal-body {
            flex: 1;
            display: flex;
            overflow: hidden;
        }

        .mega-modal-tabs {
            width: 250px;
            background: var(--bg-secondary);
            border-right: 2px solid var(--border-color);
            padding: 0;
            display: flex;
            flex-direction: column;
        }

        .mega-tab-button {
            padding: 20px 24px;
            border: none;
            background: transparent;
            text-align: left;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 14px;
            font-weight: 500;
            color: var(--text-secondary);
            border-bottom: 1px solid var(--border-color);
        }

        .mega-tab-button:hover {
            background: rgba(102, 126, 234, 0.1);
            color: var(--primary-color);
            padding-left: 32px;
        }

        .mega-tab-button.active {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            font-weight: 600;
            box-shadow: inset 4px 0 0 rgba(255,255,255,0.3);
        }

        .mega-tab-content {
            flex: 1;
            padding: 32px;
            overflow-y: auto;
        }

        .mega-tab-panel {
            display: none;
        }

        .mega-tab-panel.active {
            display: block;
            animation: fadeInUp 0.3s ease;
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* ===== –§–û–†–ú–´ ===== */
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 24px;
        }

        .form-row-3 {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
            margin-bottom: 24px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--text-primary);
            font-size: 14px;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 14px 16px;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 14px;
            transition: var(--transition);
            font-family: inherit;
            background: var(--bg-primary);
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-1px);
        }

        .form-textarea {
            resize: vertical;
            min-height: 120px;
            line-height: 1.6;
        }

        .form-checkbox {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 16px;
        }

        .form-checkbox input[type='checkbox'] {
            width: 20px;
            height: 20px;
            margin: 0;
        }

        /* ===== AI –ü–û–ú–û–©–ù–ò–ö ===== */
        .ai-assistant {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            border-radius: var(--border-radius-lg);
            margin-bottom: 24px;
        }

        .ai-title {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 12px;
        }

        .ai-suggestions {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .ai-suggestion {
            background: rgba(255,255,255,0.2);
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            cursor: pointer;
            transition: var(--transition);
        }

        .ai-suggestion:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-1px);
        }

        /* ===== –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ò–ï –ö–ê–†–¢–û–ß–ö–ò ===== */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: var(--bg-primary);
            padding: 28px;
            border-radius: var(--border-radius-xl);
            box-shadow: var(--shadow-md);
            border: 1px solid var(--border-color);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card.stat-success::before {
            background: linear-gradient(90deg, var(--success-color), #27ae60);
        }

        .stat-card.stat-warning::before {
            background: linear-gradient(90deg, var(--warning-color), #e67e22);
        }

        .stat-card.stat-danger::before {
            background: linear-gradient(90deg, var(--danger-color), #c0392b);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: var(--border-radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            color: white;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            box-shadow: var(--shadow-sm);
        }

        .stat-icon.stat-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
        }

        .stat-icon.stat-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
        }

        .stat-icon.stat-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
        }

        .stat-value {
            font-size: 36px;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 8px;
            line-height: 1;
        }

        .stat-label {
            font-size: 16px;
            color: var(--text-secondary);
            margin-bottom: 12px;
            font-weight: 500;
        }

        .stat-change {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 13px;
            font-weight: 500;
            padding: 4px 8px;
            border-radius: var(--border-radius);
        }

        .stat-change.positive {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }

        .stat-change.negative {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }

        .stat-change.neutral {
            background: var(--bg-tertiary);
            color: var(--text-muted);
        }

        /* ===== –ö–ê–†–¢–û–ß–ö–ò –ö–û–ù–¢–ï–ù–¢–ê ===== */
        .content-card {
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            margin-bottom: 32px;
            transition: var(--transition);
        }

        .content-card:hover {
            box-shadow: var(--shadow-lg);
        }

        .content-card-header {
            padding: 24px 28px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(135deg, #f8f9ff, #fff);
        }

        .content-card-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .content-card-body {
            padding: 28px;
        }

        /* ===== –¢–ê–ë–õ–ò–¶–´ ===== */
        .table-container {
            overflow-x: auto;
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-sm);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .table th {
            background: linear-gradient(135deg, #f8f9ff, var(--bg-secondary));
            padding: 16px;
            text-align: left;
            font-weight: 600;
            color: var(--text-primary);
            border-bottom: 2px solid var(--border-color);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table td {
            padding: 16px;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .table tr {
            transition: var(--transition-fast);
        }

        .table tr:hover {
            background: rgba(102, 126, 234, 0.05);
        }

        /* ===== –°–¢–ê–¢–£–° –ë–ï–ô–î–ñ–ò ===== */
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            line-height: 1;
        }

        .status-active {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-inactive {
            background: rgba(149, 165, 166, 0.1);
            color: var(--text-muted);
            border: 1px solid rgba(149, 165, 166, 0.2);
        }

        .status-new {
            background: rgba(52, 152, 219, 0.1);
            color: var(--info-color);
            border: 1px solid rgba(52, 152, 219, 0.2);
        }

        .status-processing {
            background: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
            border: 1px solid rgba(243, 156, 18, 0.2);
        }

        .status-completed {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-cancelled {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
            border: 1px solid rgba(231, 76, 60, 0.2);
        }

        /* ===== –°–£–ü–ï–† –ì–†–ê–§–ò–ö–ò ===== */
        .analytics-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 32px;
            margin-bottom: 40px;
        }

        .analytics-card {
            background: var(--bg-primary);
            border-radius: var(--border-radius-xl);
            box-shadow: var(--shadow-lg);
            padding: 0;
            overflow: hidden;
            border: 1px solid var(--border-color);
            transition: var(--transition);
        }

        .analytics-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-xl);
        }

        .analytics-card-header {
            padding: 24px 28px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .analytics-card-title {
            font-size: 18px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .analytics-card-body {
            padding: 28px;
            position: relative;
        }

        .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 20px;
        }

        .chart-big {
            height: 400px;
        }

        .chart-small {
            height: 200px;
        }

        /* ===== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===== */
        .notification {
            position: fixed;
            top: 24px;
            right: 24px;
            padding: 16px 20px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-xl);
            z-index: 9999;
            animation: notificationSlideIn 0.3s ease;
            max-width: 400px;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 500;
        }

        .notification-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
        }

        .notification-error {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
        }

        .notification-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
        }

        .notification-info {
            background: linear-gradient(135deg, var(--info-color), #2980b9);
            color: white;
        }

        @keyframes notificationSlideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* ===== –õ–û–ê–î–ï–† ===== */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 3000;
            backdrop-filter: blur(5px);
        }

        .loading-overlay.show {
            display: flex;
        }

        .spinner {
            border: 4px solid var(--bg-tertiary);
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* ===== –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨ ===== */
        @media (max-width: 1400px) {
            .analytics-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 1200px) {
            .mega-modal-dialog {
                width: 95vw;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .mega-modal-body {
                flex-direction: column;
            }

            .mega-modal-tabs {
                width: 100%;
                display: flex;
                flex-direction: row;
                overflow-x: auto;
                border-right: none;
                border-bottom: 2px solid var(--border-color);
            }

            .mega-tab-button {
                white-space: nowrap;
                border-bottom: none;
                border-right: 1px solid var(--border-color);
            }

            .form-row, .form-row-3 {
                grid-template-columns: 1fr;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }
            .analytics-grid {
                grid-template-columns: 1fr;
            }
        }

        /* ===== –ê–ù–ò–ú–ê–¶–ò–ò ===== */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class='<?= $section ?>-page'>
    <div class='admin-layout'>
        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <aside class='sidebar' id='sidebar'>
            <div class='sidebar-header'>
                <div class='admin-logo'>
                    <div class='logo-icon'>üê†</div>
                    <div class='logo-text'>
                        <div class='logo-title'>–ê–∫–≤–∞–°–±–æ—Ä</div>
                        <div class='logo-subtitle'>MEGA CRM v8.0</div>
                    </div>
                </div>
            </div>

            <nav class='sidebar-nav'>
                <div class='nav-section'>
                    <div class='nav-title'>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ & KPI</div>
                    <a href='admin.php?section=dashboard' class='sidebar-link <?= $section === 'dashboard' ? 'active' : '' ?>'>
                        <i class='fas fa-chart-pie'></i>
                        <span class='sidebar-link-text'>KPI –î–∞—à–±–æ—Ä–¥</span>
                    </a>
                    <a href='admin.php?section=analytics' class='sidebar-link <?= $section === 'analytics' ? 'active' : '' ?>'>
                        <i class='fas fa-chart-line'></i>
                        <span class='sidebar-link-text'>–°–£–ü–ï–† –ì—Ä–∞—Ñ–∏–∫–∏</span>
                        <span class='sidebar-badge badge-success'>FIXED</span>
                    </a>
                </div>

                <div class='nav-section'>
                    <div class='nav-title'>üõí –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</div>
                    <a href='admin.php?section=products' class='sidebar-link <?= $section === 'products' ? 'active' : '' ?>'>
                        <i class='fas fa-fish'></i>
                        <span class='sidebar-link-text'>–¢–æ–≤–∞—Ä—ã MEGA</span>
                        <span class='sidebar-badge'><?= count(getProducts()) ?></span>
                    </a>
                    <a href='admin.php?section=categories' class='sidebar-link <?= $section === 'categories' ? 'active' : '' ?>'>
                        <i class='fas fa-tags'></i>
                        <span class='sidebar-link-text'>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ MEGA</span>
                        <span class='sidebar-badge badge-success'><?= count(getCategories()) ?></span>
                    </a>
                    <a href='admin.php?section=orders' class='sidebar-link <?= $section === 'orders' ? 'active' : '' ?>'>
                        <i class='fas fa-shopping-bag'></i>
                        <span class='sidebar-link-text'>–ó–∞–∫–∞–∑—ã MEGA</span>
                        <span class='sidebar-badge badge-warning'><?= count(array_filter(getOrders(), fn($o) => $o['status'] === 'new')) ?></span>
                    </a>
                    <a href='admin.php?section=reviews' class='sidebar-link <?= $section === 'reviews' ? 'active' : '' ?>'>
                        <i class='fas fa-star'></i>
                        <span class='sidebar-link-text'>–û—Ç–∑—ã–≤—ã MEGA</span>
                        <span class='sidebar-badge badge-danger'><?= count(array_filter(getReviews(), fn($r) => !$r['is_approved'])) ?></span>
                    </a>
                </div>

                <div class='nav-section'>
                    <div class='nav-title'>üìù –ö–æ–Ω—Ç–µ–Ω—Ç & SEO</div>
                    <a href='admin.php?section=news' class='sidebar-link <?= $section === 'news' ? 'active' : '' ?>'>
                        <i class='fas fa-newspaper'></i>
                        <span class='sidebar-link-text'>üì∞ –ù–æ–≤–æ—Å—Ç–∏ MEGA</span>
                        <span class='sidebar-badge'><?= count(getNews()) ?></span>
                    </a>
                    <a href='admin.php?section=pages' class='sidebar-link <?= $section === 'pages' ? 'active' : '' ?>'>
                        <i class='fas fa-file-alt'></i>
                        <span class='sidebar-link-text'>üìÑ –°—Ç—Ä–∞–Ω–∏—Ü—ã MEGA</span>
                        <span class='sidebar-badge badge-success'><?= count(getPages()) ?></span>
                    </a>
                    <a href='admin.php?section=slider' class='sidebar-link <?= $section === 'slider' ? 'active' : '' ?>'>
                        <i class='fas fa-images'></i>
                        <span class='sidebar-link-text'>üéöÔ∏è –°–ª–∞–π–¥–µ—Ä MEGA</span>
                        <span class='sidebar-badge badge-info'><?= count(array_filter(getSlides(), fn($s) => $s['is_active'])) ?></span>
                    </a>
                </div>

                <div class='nav-section'>
                    <div class='nav-title'>‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞ & –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</div>
                    <a href='admin.php?section=settings' class='sidebar-link <?= $section === 'settings' ? 'active' : '' ?>'>
                        <i class='fas fa-cog'></i>
                        <span class='sidebar-link-text'>‚öôÔ∏è –°–£–ü–ï–† –ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                        <span class='sidebar-badge badge-success'>PRO</span>
                    </a>
                    <a href='admin.php?section=logs' class='sidebar-link <?= $section === 'logs' ? 'active' : '' ?>'>
                        <i class='fas fa-list-alt'></i>
                        <span class='sidebar-link-text'>–õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã</span>
                    </a>
                </div>
            </nav>

            <div class='sidebar-footer'>
                <div class='admin-profile'>
                    <div class='admin-avatar'>üë§</div>
                    <div class='admin-info'>
                        <div class='admin-name'><?= $_SESSION['admin_name'] ?></div>
                        <div class='admin-role'><?= $_SESSION['admin_role'] ?></div>
                    </div>
                    <a href='admin.php?action=logout' class='logout-btn' title='–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã'>
                        <i class='fas fa-sign-out-alt'></i>
                    </a>
                </div>
            </div>
        </aside>

        <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
        <main class='main-content'>
            <!-- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å -->
            <header class='top-bar'>
                <div class='top-bar-left'>
                    <h1 class='page-title'>
                        <i class='<?= getPageIcon($section) ?>'></i>
                        <?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?>
                    </h1>
                </div>

                <div class='top-bar-right'>
                    <button class='btn btn-outline' onclick='toggleSidebar()' title='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–µ–Ω—é'>
                        <i class='fas fa-bars'></i>
                    </button>
                    <a href='index.php' class='btn btn-primary' target='_blank'>
                        <i class='fas fa-external-link-alt'></i>
                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                    </a>
                </div>
            </header>

            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
            <div class='page-content'>
                <?php if (isset($_SESSION['admin_message'])): ?>
                    <div class='notification notification-<?= $_SESSION['admin_message']['type'] ?>' id='adminNotification'>
                        <i class='fas fa-<?= $_SESSION['admin_message']['type'] === 'success' ? 'check-circle' : 'exclamation-circle' ?>'></i>
                        <?= htmlspecialchars($_SESSION['admin_message']['text']) ?>
                    </div>
                    <?php unset($_SESSION['admin_message']); ?>
                <?php endif; ?>

                <?php renderAdminSection($section, $adminData); ?>
            </div>
        </main>
    </div>

    <!-- –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ò -->

    <!-- –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ (–ù–ï –¢–†–û–ì–ê–ï–ú - –û–†–ò–ì–ò–ù–ê–õ) -->
    <div class='mega-modal' id='megaProductModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-fish'></i>
                    <span id='modalTitle'>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaProductModal")'>&times;</button>
            </div>

            <form method='post' enctype='multipart/form-data' id='megaProductForm'>
                <input type='hidden' name='action' value='create_product' id='formAction'>
                <input type='hidden' name='product_id' id='productId'>

                <div class='mega-modal-body'>
                    <!-- –í–∫–ª–∞–¥–∫–∏ -->
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='media'>
                            <i class='fas fa-images'></i>
                            –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='seo'>
                            <i class='fas fa-search'></i>
                            SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='inventory'>
                            <i class='fas fa-warehouse'></i>
                            –°–∫–ª–∞–¥ –∏ —Ü–µ–Ω—ã
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='advanced'>
                            <i class='fas fa-cogs'></i>
                            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
                        </button>
                    </div>

                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ -->
                    <div class='mega-tab-content'>
                        <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                        <div class='mega-tab-panel active' data-panel='basic'>
                            <div class='ai-assistant'>
                                <div class='ai-title'>
                                    <i class='fas fa-robot'></i>
                                    AI –ü–æ–º–æ—â–Ω–∏–∫
                                </div>
                                <div class='ai-suggestions'>
                                    <span class='ai-suggestion' onclick='generateProductName()'>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ</span>
                                    <span class='ai-suggestion' onclick='generateDescription()'>–°–æ–∑–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ</span>
                                    <span class='ai-suggestion' onclick='suggestCategory()'>–ü–æ–¥–æ–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</span>
                                </div>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
                                    <input type='text' name='name' class='form-input' required placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                                    <select name='category_id' class='form-select' required>
                                        <option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                        <?php foreach (getCategories() as $category): ?>
                                            <option value='<?= $category['id'] ?>'><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='short_description' class='form-textarea' rows='2' placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞'></textarea>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='description' class='form-textarea' rows='6' placeholder='–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'></textarea>
                            </div>

                            <div class='form-row'>
                                <div class='form-checkbox'>
                                    <input type='checkbox' name='is_featured' id='isFeatured'>
                                    <label for='isFeatured'>üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä</label>
                                </div>
                                <div class='form-checkbox'>
                                    <input type='checkbox' name='is_new' id='isNew'>
                                    <label for='isNew'>‚ú® –ù–æ–≤–∏–Ω–∫–∞</label>
                                </div>
                            </div>
                        </div>

                        <!-- –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ (–ù–ï –¢–†–û–ì–ê–ï–ú) -->
                        <div class='mega-tab-panel' data-panel='media'>
                            <div class='form-group'>
                                <label class='form-label'>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞</label>
                                <input type='file' name='images[]' multiple accept='image/*' class='form-input'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='seo'>
                            <div class='form-group'>
                                <label class='form-label'>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                <input type='text' name='meta_title' class='form-input' placeholder='–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫'>
                            </div>
                            <div class='form-group'>
                                <label class='form-label'>SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='meta_description' class='form-textarea' rows='3' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'></textarea>
                            </div>
                            <div class='form-group'>
                                <label class='form-label'>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</label>
                                <input type='text' name='meta_keywords' class='form-input' placeholder='–∫–ª—é—á–µ–≤—ã–µ, —Å–ª–æ–≤–∞, —á–µ—Ä–µ–∑, –∑–∞–ø—è—Ç—É—é'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='inventory'>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–¶–µ–Ω–∞ (‚ÇΩ) *</label>
                                    <input type='number' name='price' class='form-input' min='0' step='0.01' required placeholder='0.00'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (‚ÇΩ)</label>
                                    <input type='number' name='old_price' class='form-input' min='0' step='0.01' placeholder='0.00'>
                                </div>
                            </div>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ *</label>
                                    <input type='number' name='stock' class='form-input' min='0' value='1' required>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ê—Ä—Ç–∏–∫—É–ª (SKU)</label>
                                    <input type='text' name='sku' class='form-input' placeholder='AQ-0001'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='advanced'>
                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_active' id='isActive' checked>
                                <label for='isActive'>üëÅÔ∏è –¢–æ–≤–∞—Ä –∞–∫—Ç–∏–≤–µ–Ω (–≤–∏–¥–µ–Ω –Ω–∞ —Å–∞–π—Ç–µ)</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaProductModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ù–û–í–ê–Ø –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô -->
    <div class='mega-modal' id='megaCategoryModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-tags'></i>
                    <span id='categoryModalTitle'>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaCategoryModal")'>&times;</button>
            </div>

            <form method='post' id='megaCategoryForm'>
                <input type='hidden' name='action' value='create_category' id='categoryFormAction'>
                <input type='hidden' name='category_id' id='categoryId'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='category-basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='category-seo'>
                            <i class='fas fa-search'></i>
                            SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='category-advanced'>
                            <i class='fas fa-cogs'></i>
                            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='category-basic'>
                            <div class='ai-assistant'>
                                <div class='ai-title'>
                                    <i class='fas fa-robot'></i>
                                    AI –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                                </div>
                                <div class='ai-suggestions'>
                                    <span class='ai-suggestion' onclick='generateCategoryName()'>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ</span>
                                    <span class='ai-suggestion' onclick='generateCategoryDescription()'>–°–æ–∑–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ</span>
                                    <span class='ai-suggestion' onclick='suggestIcon()'>–ü–æ–¥–æ–±—Ä–∞—Ç—å –∏–∫–æ–Ω–∫—É</span>
                                </div>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *</label>
                                    <input type='text' name='name' class='form-input' required placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ò–∫–æ–Ω–∫–∞ *</label>
                                    <input type='text' name='icon' class='form-input' required placeholder='üê†' maxlength='4'>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</label>
                                <textarea name='description' class='form-textarea' rows='4' placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤'></textarea>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</label>
                                <input type='number' name='sort_order' class='form-input' value='999' min='0'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='category-seo'>
                            <div class='form-group'>
                                <label class='form-label'>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                <input type='text' name='seo_title' class='form-input' placeholder='SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='seo_description' class='form-textarea' rows='3' placeholder='SEO –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='category-advanced'>
                            <div class='form-checkbox'>
                                <input type='checkbox' name='active' id='categoryActive' checked>
                                <label for='categoryActive'>‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–∞</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaCategoryModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ù–û–í–ê–Ø –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –î–õ–Ø –û–¢–ó–´–í–û–í -->
    <div class='mega-modal' id='megaReviewModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-star'></i>
                    <span id='reviewModalTitle'>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaReviewModal")'>&times;</button>
            </div>

            <form method='post' id='megaReviewForm'>
                <input type='hidden' name='action' value='create_review' id='reviewFormAction'>
                <input type='hidden' name='review_id' id='reviewId'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='review-basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='review-content'>
                            <i class='fas fa-comment'></i>
                            –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='review-moderation'>
                            <i class='fas fa-shield-alt'></i>
                            –ú–æ–¥–µ—Ä–∞—Ü–∏—è
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='review-basic'>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–¢–æ–≤–∞—Ä *</label>
                                    <select name='product_id' class='form-select' required>
                                        <option value=''>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä</option>
                                        <?php foreach (array_slice(getProducts(), 0, 50) as $product): ?>
                                            <option value='<?= $product['id'] ?>' data-name='<?= htmlspecialchars($product['name']) ?>'><?= htmlspecialchars($product['name']) ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                    <input type='hidden' name='product_name' id='reviewProductName'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–†–µ–π—Ç–∏–Ω–≥ *</label>
                                    <select name='rating' class='form-select' required>
                                        <option value='5'>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (5 –∑–≤–µ–∑–¥)</option>
                                        <option value='4'>‚≠ê‚≠ê‚≠ê‚≠ê (4 –∑–≤–µ–∑–¥—ã)</option>
                                        <option value='3'>‚≠ê‚≠ê‚≠ê (3 –∑–≤–µ–∑–¥—ã)</option>
                                        <option value='2'>‚≠ê‚≠ê (2 –∑–≤–µ–∑–¥—ã)</option>
                                        <option value='1'>‚≠ê (1 –∑–≤–µ–∑–¥–∞)</option>
                                    </select>
                                </div>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ò–º—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è *</label>
                                    <input type='text' name='customer_name' class='form-input' required placeholder='–ò–º—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>Email –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</label>
                                    <input type='email' name='customer_email' class='form-input' placeholder='email@example.com'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='review-content'>
                            <div class='form-group'>
                                <label class='form-label'>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞ *</label>
                                <input type='text' name='title' class='form-input' required placeholder='–ö—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ *</label>
                                <textarea name='text' class='form-textarea' rows='6' required placeholder='–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è'></textarea>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</label>
                                <textarea name='admin_reply' class='form-textarea' rows='3' placeholder='–û—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='review-moderation'>
                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_approved' id='reviewApproved' checked>
                                <label for='reviewApproved'>‚úÖ –û—Ç–∑—ã–≤ –æ–¥–æ–±—Ä–µ–Ω (–≤–∏–¥–µ–Ω –Ω–∞ —Å–∞–π—Ç–µ)</label>
                            </div>

                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_featured' id='reviewFeatured'>
                                <label for='reviewFeatured'>‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –æ—Ç–∑—ã–≤</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaReviewModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ù–û–í–ê–Ø –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –î–õ–Ø –ù–û–í–û–°–¢–ï–ô -->
    <div class='mega-modal' id='megaNewsModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-newspaper'></i>
                    <span id='newsModalTitle'>üì∞ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaNewsModal")'>&times;</button>
            </div>

            <form method='post' id='megaNewsForm'>
                <input type='hidden' name='action' value='create_news' id='newsFormAction'>
                <input type='hidden' name='news_id' id='newsId'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='news-basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='news-content'>
                            <i class='fas fa-file-alt'></i>
                            –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='news-seo'>
                            <i class='fas fa-search'></i>
                            SEO & –ü—É–±–ª–∏–∫–∞—Ü–∏—è
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='news-basic'>
                            <div class='ai-assistant'>
                                <div class='ai-title'>
                                    <i class='fas fa-robot'></i>
                                    AI –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π
                                </div>
                                <div class='ai-suggestions'>
                                    <span class='ai-suggestion' onclick='generateNewsTitle()'>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫</span>
                                    <span class='ai-suggestion' onclick='generateNewsExcerpt()'>–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å</span>
                                    <span class='ai-suggestion' onclick='generateNewsContent()'>–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç</span>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏ *</label>
                                <input type='text' name='title' class='form-input' required placeholder='–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏'>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ê–≤—Ç–æ—Ä</label>
                                    <input type='text' name='author' class='form-input' placeholder='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' value='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL)</label>
                                    <input type='url' name='image' class='form-input' placeholder='https://example.com/image.jpg'>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ö—Ä–∞—Ç–∫–∏–π –∞–Ω–æ–Ω—Å *</label>
                                <textarea name='excerpt' class='form-textarea' rows='3' required placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–≤—å—é'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='news-content'>
                            <div class='form-group'>
                                <label class='form-label'>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ *</label>
                                <textarea name='content' class='form-textarea' rows='12' required placeholder='–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏...'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='news-seo'>
                            <div class='form-group'>
                                <label class='form-label'>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                <input type='text' name='meta_title' class='form-input' placeholder='SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='meta_description' class='form-textarea' rows='3' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'></textarea>
                            </div>

                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_published' id='newsPublished' checked>
                                <label for='newsPublished'>üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å</label>
                            </div>

                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_featured' id='newsFeatured'>
                                <label for='newsFeatured'>‚≠ê –í–∞–∂–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaNewsModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ù–û–í–ê–Ø –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –î–õ–Ø –°–¢–†–ê–ù–ò–¶ -->
    <div class='mega-modal' id='megaPageModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-file-alt'></i>
                    <span id='pageModalTitle'>üìÑ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaPageModal")'>&times;</button>
            </div>

            <form method='post' id='megaPageForm'>
                <input type='hidden' name='action' value='create_page' id='pageFormAction'>
                <input type='hidden' name='page_id' id='pageId'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='page-basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='page-content'>
                            <i class='fas fa-file-alt'></i>
                            –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='page-seo'>
                            <i class='fas fa-search'></i>
                            SEO & –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='page-template'>
                            <i class='fas fa-paint-brush'></i>
                            –®–∞–±–ª–æ–Ω
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='page-basic'>
                            <div class='form-group'>
                                <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã *</label>
                                <input type='text' name='title' class='form-input' required placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ê–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã (slug)</label>
                                <input type='text' name='slug' class='form-input' placeholder='o-kompanii (–±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)'>
                                <small style='color: var(--text-muted); font-size: 12px;'>
                                    URL –±—É–¥–µ—Ç: /page/o-kompanii
                                </small>
                            </div>

                            <div class='form-row'>
                                <div class='form-checkbox'>
                                    <input type='checkbox' name='is_published' id='pagePublished' checked>
                                    <label for='pagePublished'>üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</label>
                                </div>
                                <div class='form-checkbox'>
                                    <input type='checkbox' name='show_in_menu' id='pageInMenu'>
                                    <label for='pageInMenu'>üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤ –º–µ–Ω—é</label>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ü–æ—Ä—è–¥–æ–∫ –≤ –º–µ–Ω—é</label>
                                <input type='number' name='menu_order' class='form-input' value='999' min='0'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='page-content'>
                            <div class='form-group'>
                                <label class='form-label'>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã *</label>
                                <textarea name='content' class='form-textarea' rows='15' required placeholder='HTML –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã...'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='page-seo'>
                            <div class='form-group'>
                                <label class='form-label'>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                <input type='text' name='meta_title' class='form-input' placeholder='SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='meta_description' class='form-textarea' rows='3' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='page-template'>
                            <div class='form-group'>
                                <label class='form-label'>–®–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã</label>
                                <select name='template' class='form-select'>
                                    <option value='default'>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω</option>
                                    <option value='full-width'>–í–æ –≤—Å—é —à–∏—Ä–∏–Ω—É</option>
                                    <option value='landing'>–õ–µ–Ω–¥–∏–Ω–≥</option>
                                    <option value='contact'>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaPageModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ù–û–í–ê–Ø –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –î–õ–Ø –°–õ–ê–ô–î–ï–†–ê -->
    <div class='mega-modal' id='megaSlideModal'>
        <div class='mega-modal-dialog'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-images'></i>
                    <span id='slideModalTitle'>üéöÔ∏è –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–ª–∞–π–¥</span>
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("megaSlideModal")'>&times;</button>
            </div>

            <form method='post' id='megaSlideForm'>
                <input type='hidden' name='action' value='create_slide' id='slideFormAction'>
                <input type='hidden' name='slide_id' id='slideId'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='slide-basic'>
                            <i class='fas fa-info-circle'></i>
                            –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='slide-design'>
                            <i class='fas fa-paint-brush'></i>
                            –î–∏–∑–∞–π–Ω & –°—Ç–∏–ª—å
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='slide-settings'>
                            <i class='fas fa-cogs'></i>
                            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞–∑–∞
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='slide-basic'>
                            <div class='form-group'>
                                <label class='form-label'>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∞–π–¥–∞ *</label>
                                <input type='text' name='title' class='form-input' required placeholder='–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                <input type='text' name='subtitle' class='form-input' placeholder='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                                <textarea name='description' class='form-textarea' rows='3' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º'></textarea>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞ (URL) *</label>
                                <input type='url' name='image' class='form-input' required placeholder='https://example.com/slide.jpg'>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–°—Å—ã–ª–∫–∞ (URL)</label>
                                    <input type='url' name='link_url' class='form-input' placeholder='https://example.com'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏</label>
                                    <input type='text' name='link_text' class='form-input' placeholder='–ü–æ–¥—Ä–æ–±–Ω–µ–µ' value='–ü–æ–¥—Ä–æ–±–Ω–µ–µ'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='slide-design'>
                            <div class='form-group'>
                                <label class='form-label'>–ü–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞</label>
                                <select name='text_position' class='form-select'>
                                    <option value='center'>–ü–æ —Ü–µ–Ω—Ç—Ä—É</option>
                                    <option value='left'>–°–ª–µ–≤–∞</option>
                                    <option value='right'>–°–ø—Ä–∞–≤–∞</option>
                                    <option value='top'>–°–≤–µ—Ä—Ö—É</option>
                                    <option value='bottom'>–°–Ω–∏–∑—É</option>
                                </select>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–¶–≤–µ—Ç —Ñ–æ–Ω–∞ (–µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)</label>
                                    <input type='color' name='background_color' class='form-input' value='#667eea'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</label>
                                    <input type='color' name='text_color' class='form-input' value='#ffffff'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='slide-settings'>
                            <div class='form-group'>
                                <label class='form-label'>–ü–æ—Ä—è–¥–æ–∫ –ø–æ–∫–∞–∑–∞</label>
                                <input type='number' name='sort_order' class='form-input' value='1' min='1'>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                                    <input type='date' name='show_from' class='form-input'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                                    <input type='date' name='show_until' class='form-input'>
                                </div>
                            </div>

                            <div class='form-checkbox'>
                                <input type='checkbox' name='is_active' id='slideActive' checked>
                                <label for='slideActive'>üëÅÔ∏è –°–ª–∞–π–¥ –∞–∫—Ç–∏–≤–µ–Ω</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("megaSlideModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ª–∞–π–¥
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –°–£–ü–ï–† –ú–ï–ì–ê –ú–û–î–ê–õ–ö–ê –ù–ê–°–¢–†–û–ï–ö -->
    <div class='mega-modal' id='ultraSettingsModal'>
        <div class='mega-modal-dialog' style='width: 1400px;'>
            <div class='mega-modal-header'>
                <h3 class='mega-modal-title'>
                    <i class='fas fa-cogs'></i>
                    ‚öôÔ∏è –°–£–ü–ï–† –ú–ï–ì–ê –í–ò–ó–£–ê–õ –ù–ê–°–¢–†–û–ô–ö–ò –°–ê–ô–¢–ê
                </h3>
                <button type='button' class='mega-modal-close' onclick='closeMegaModal("ultraSettingsModal")'>&times;</button>
            </div>

            <form method='post' id='ultraSettingsForm'>
                <input type='hidden' name='action' value='save_settings'>

                <div class='mega-modal-body'>
                    <div class='mega-modal-tabs'>
                        <button type='button' class='mega-tab-button active' data-tab='settings-general'>
                            <i class='fas fa-globe'></i>
                            –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-contact'>
                            <i class='fas fa-phone'></i>
                            –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-social'>
                            <i class='fas fa-share-alt'></i>
                            –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-shop'>
                            <i class='fas fa-shopping-cart'></i>
                            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-seo'>
                            <i class='fas fa-search'></i>
                            SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-appearance'>
                            <i class='fas fa-palette'></i>
                            –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
                        </button>
                        <button type='button' class='mega-tab-button' data-tab='settings-integrations'>
                            <i class='fas fa-plug'></i>
                            –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                        </button>
                    </div>

                    <div class='mega-tab-content'>
                        <div class='mega-tab-panel active' data-panel='settings-general'>
                            <div class='form-group'>
                                <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞ *</label>
                                <input type='text' name='site_name' class='form-input' required value='<?= htmlspecialchars($adminData['settings']['site_name'] ?? '–ê–∫–≤–∞–°–±–æ—Ä') ?>'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
                                <textarea name='site_description' class='form-textarea' rows='3'><?= htmlspecialchars($adminData['settings']['site_description'] ?? '') ?></textarea>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ *</label>
                                    <input type='email' name='admin_email' class='form-input' required value='<?= htmlspecialchars($adminData['settings']['admin_email'] ?? '') ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–í–∞–ª—é—Ç–∞</label>
                                    <select name='currency' class='form-select'>
                                        <option value='‚ÇΩ' <?= ($adminData['settings']['currency'] ?? '‚ÇΩ') === '‚ÇΩ' ? 'selected' : '' ?>>‚ÇΩ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å</option>
                                        <option value='$' <?= ($adminData['settings']['currency'] ?? '‚ÇΩ') === '$' ? 'selected' : '' ?>>$ –î–æ–ª–ª–∞—Ä –°–®–ê</option>
                                        <option value='‚Ç¨' <?= ($adminData['settings']['currency'] ?? '‚ÇΩ') === '‚Ç¨' ? 'selected' : '' ?>>‚Ç¨ –ï–≤—Ä–æ</option>
                                        <option value='‚Ç∏' <?= ($adminData['settings']['currency'] ?? '‚ÇΩ') === '‚Ç∏' ? 'selected' : '' ?>>‚Ç∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ</option>
                                    </select>
                                </div>
                            </div>

                            <div class='form-checkbox'>
                                <input type='checkbox' name='maintenance_mode' id='maintenanceMode' <?= !empty($adminData['settings']['maintenance_mode']) ? 'checked' : '' ?>>
                                <label for='maintenanceMode'>üîß –†–µ–∂–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è</label>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-contact'>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                                    <input type='tel' name='phone' class='form-input' required value='<?= htmlspecialchars($adminData['settings']['phone'] ?? '') ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</label>
                                    <input type='text' name='working_hours' class='form-input' value='<?= htmlspecialchars($adminData['settings']['working_hours'] ?? '–ü–Ω-–ü—Ç: 9:00-18:00') ?>'>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–ê–¥—Ä–µ—Å</label>
                                <textarea name='address' class='form-textarea' rows='2'><?= htmlspecialchars($adminData['settings']['address'] ?? '') ?></textarea>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-social'>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ (URL)</label>
                                    <input type='url' name='social_vk' class='form-input' placeholder='https://vk.com/yourpage' value='<?= htmlspecialchars($adminData['settings']['social_vk'] ?? '') ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>Telegram (URL)</label>
                                    <input type='url' name='social_telegram' class='form-input' placeholder='https://t.me/yourchannel' value='<?= htmlspecialchars($adminData['settings']['social_telegram'] ?? '') ?>'>
                                </div>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>Instagram (URL)</label>
                                    <input type='url' name='social_instagram' class='form-input' placeholder='https://instagram.com/yourpage' value='<?= htmlspecialchars($adminData['settings']['social_instagram'] ?? '') ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>YouTube (URL)</label>
                                    <input type='url' name='social_youtube' class='form-input' placeholder='https://youtube.com/yourchannel' value='<?= htmlspecialchars($adminData['settings']['social_youtube'] ?? '') ?>'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-shop'>
                            <div class='form-row-3'>
                                <div class='form-group'>
                                    <label class='form-label'>–¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</label>
                                    <select name='products_per_page' class='form-select'>
                                        <option value='6' <?= ($adminData['settings']['products_per_page'] ?? 12) == 6 ? 'selected' : '' ?>>6 —Ç–æ–≤–∞—Ä–æ–≤</option>
                                        <option value='9' <?= ($adminData['settings']['products_per_page'] ?? 12) == 9 ? 'selected' : '' ?>>9 —Ç–æ–≤–∞—Ä–æ–≤</option>
                                        <option value='12' <?= ($adminData['settings']['products_per_page'] ?? 12) == 12 ? 'selected' : '' ?>>12 —Ç–æ–≤–∞—Ä–æ–≤</option>
                                        <option value='15' <?= ($adminData['settings']['products_per_page'] ?? 12) == 15 ? 'selected' : '' ?>>15 —Ç–æ–≤–∞—Ä–æ–≤</option>
                                        <option value='18' <?= ($adminData['settings']['products_per_page'] ?? 12) == 18 ? 'selected' : '' ?>>18 —Ç–æ–≤–∞—Ä–æ–≤</option>
                                        <option value='24' <?= ($adminData['settings']['products_per_page'] ?? 12) == 24 ? 'selected' : '' ?>>24 —Ç–æ–≤–∞—Ä–∞</option>
                                    </select>
                                </div>

                                <div class='form-group'>
                                    <label class='form-label'>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ (‚ÇΩ)</label>
                                    <input type='number' name='min_order_amount' class='form-input' min='0' value='<?= $adminData['settings']['min_order_amount'] ?? 1000 ?>'>
                                </div>

                                <div class='form-group'>
                                    <label class='form-label'>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç (‚ÇΩ)</label>
                                    <input type='number' name='free_shipping_from' class='form-input' min='0' value='<?= $adminData['settings']['free_shipping_from'] ?? 5000 ?>'>
                                </div>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-seo'>
                            <div class='form-group'>
                                <label class='form-label'>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å–∞–π—Ç–∞</label>
                                <input type='text' name='site_keywords' class='form-input' value='<?= htmlspecialchars($adminData['settings']['site_keywords'] ?? '') ?>' placeholder='–∞–∫–≤–∞—Ä–∏—É–º, —Ä—ã–±–∫–∏, —Ä–∞—Å—Ç–µ–Ω–∏—è, –∫–æ—Ä–º'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>Google Analytics ID</label>
                                <input type='text' name='google_analytics' class='form-input' placeholder='GA-XXXXXXXXX-X' value='<?= htmlspecialchars($adminData['settings']['google_analytics'] ?? '') ?>'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>Yandex.Metrika ID</label>
                                <input type='text' name='yandex_metrika' class='form-input' placeholder='12345678' value='<?= htmlspecialchars($adminData['settings']['yandex_metrika'] ?? '') ?>'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-appearance'>
                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>–û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —Å–∞–π—Ç–∞</label>
                                    <input type='color' name='primary_color' class='form-input' value='<?= $adminData['settings']['primary_color'] ?? '#667eea' ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>–í—Ç–æ—Ä–∏—á–Ω—ã–π —Ü–≤–µ—Ç</label>
                                    <input type='color' name='secondary_color' class='form-input' value='<?= $adminData['settings']['secondary_color'] ?? '#764ba2' ?>'>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–õ–æ–≥–æ—Ç–∏–ø —Å–∞–π—Ç–∞ (URL)</label>
                                <input type='url' name='logo_url' class='form-input' placeholder='https://example.com/logo.png' value='<?= htmlspecialchars($adminData['settings']['logo_url'] ?? '') ?>'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>–§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (URL)</label>
                                <input type='url' name='hero_background' class='form-input' placeholder='https://example.com/bg.jpg' value='<?= htmlspecialchars($adminData['settings']['hero_background'] ?? '') ?>'>
                            </div>
                        </div>

                        <div class='mega-tab-panel' data-panel='settings-integrations'>
                            <div class='form-group'>
                                <label class='form-label'>API –∫–ª—é—á –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã</label>
                                <input type='password' name='payment_api_key' class='form-input' placeholder='–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á' value='<?= htmlspecialchars($adminData['settings']['payment_api_key'] ?? '') ?>'>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>SMTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ—á—Ç—ã</label>
                                <input type='text' name='smtp_host' class='form-input' placeholder='smtp.gmail.com' value='<?= htmlspecialchars($adminData['settings']['smtp_host'] ?? '') ?>'>
                            </div>

                            <div class='form-row'>
                                <div class='form-group'>
                                    <label class='form-label'>SMTP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</label>
                                    <input type='email' name='smtp_user' class='form-input' placeholder='your@email.com' value='<?= htmlspecialchars($adminData['settings']['smtp_user'] ?? '') ?>'>
                                </div>
                                <div class='form-group'>
                                    <label class='form-label'>SMTP –ø–∞—Ä–æ–ª—å</label>
                                    <input type='password' name='smtp_password' class='form-input' placeholder='–ü–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç—ã' value='<?= htmlspecialchars($adminData['settings']['smtp_password'] ?? '') ?>'>
                                </div>
                            </div>

                            <div class='form-group'>
                                <label class='form-label'>1C API endpoint</label>
                                <input type='url' name='onec_api_url' class='form-input' placeholder='https://your1c.com/api' value='<?= htmlspecialchars($adminData['settings']['onec_api_url'] ?? '') ?>'>
                            </div>
                        </div>
                    </div>
                </div>

                <div class='mega-modal-footer' style='padding: 20px 32px; border-top: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: center; background: var(--bg-secondary);'>
                    <button type='button' class='btn btn-outline' onclick='closeMegaModal("ultraSettingsModal")'>
                        <i class='fas fa-times'></i> –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-check'></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –õ–æ–∞–¥–µ—Ä -->
    <div class='loading-overlay' id='loadingOverlay'>
        <div class='spinner'></div>
    </div>

    <!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º Chart.js -->
    <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>

    <!-- –°–∫—Ä–∏–ø—Ç—ã -->
    <script>
        // === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===
        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }

        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('open');
        }

        function showNotification(message, type = 'info', duration = 5000) {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            document.querySelectorAll('.notification').forEach(n => n.remove());

            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class='fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}'></i>
                ${message}
            `;

            document.body.appendChild(notification);

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
            setTimeout(() => {
                notification.style.animation = 'notificationSlideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, duration);
        }

        // === –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ú–ï–ì–ê –ú–û–î–ê–õ–û–ö ===
        function openMegaModal(modalId, itemId = null, itemType = 'product') {
            const modal = document.getElementById(modalId);

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–æ–¥–∞–ª–∫–∏
            let titleElement, formActionElement, idElement, formElement;

            if (modalId === 'megaProductModal') {
                titleElement = document.getElementById('modalTitle');
                formActionElement = document.getElementById('formAction');
                idElement = document.getElementById('productId');
                formElement = document.getElementById('megaProductForm');
            } else if (modalId === 'megaCategoryModal') {
                titleElement = document.getElementById('categoryModalTitle');
                formActionElement = document.getElementById('categoryFormAction');
                idElement = document.getElementById('categoryId');
                formElement = document.getElementById('megaCategoryForm');
            } else if (modalId === 'megaReviewModal') {
                titleElement = document.getElementById('reviewModalTitle');
                formActionElement = document.getElementById('reviewFormAction');
                idElement = document.getElementById('reviewId');
                formElement = document.getElementById('megaReviewForm');
            } else if (modalId === 'megaNewsModal') {
                titleElement = document.getElementById('newsModalTitle');
                formActionElement = document.getElementById('newsFormAction');
                idElement = document.getElementById('newsId');
                formElement = document.getElementById('megaNewsForm');
            } else if (modalId === 'megaPageModal') {
                titleElement = document.getElementById('pageModalTitle');
                formActionElement = document.getElementById('pageFormAction');
                idElement = document.getElementById('pageId');
                formElement = document.getElementById('megaPageForm');
            } else if (modalId === 'megaSlideModal') {
                titleElement = document.getElementById('slideModalTitle');
                formActionElement = document.getElementById('slideFormAction');
                idElement = document.getElementById('slideId');
                formElement = document.getElementById('megaSlideForm');
            } else if (modalId === 'ultraSettingsModal') {
                // –î–ª—è –º–æ–¥–∞–ª–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
                return;
            }

            if (itemId) {
                // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                if (itemType === 'product') {
                    titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä';
                    formActionElement.value = 'update_product';
                    loadProductData(itemId);
                } else if (itemType === 'category') {
                    titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
                    formActionElement.value = 'update_category';
                    loadCategoryData(itemId);
                } else if (itemType === 'review') {
                    titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤';
                    formActionElement.value = 'update_review';
                    loadReviewData(itemId);
                } else if (itemType === 'news') {
                    titleElement.textContent = 'üì∞ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å';
                    formActionElement.value = 'update_news';
                    loadNewsData(itemId);
                } else if (itemType === 'page') {
                    titleElement.textContent = 'üìÑ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É';
                    formActionElement.value = 'update_page';
                    loadPageData(itemId);
                } else if (itemType === 'slide') {
                    titleElement.textContent = 'üéöÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–∞–π–¥';
                    formActionElement.value = 'update_slide';
                    loadSlideData(itemId);
                }
                idElement.value = itemId;
            } else {
                // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ
                if (itemType === 'product') {
                    titleElement.textContent = '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä';
                    formActionElement.value = 'create_product';
                } else if (itemType === 'category') {
                    titleElement.textContent = '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
                    formActionElement.value = 'create_category';
                } else if (itemType === 'review') {
                    titleElement.textContent = '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤';
                    formActionElement.value = 'create_review';
                } else if (itemType === 'news') {
                    titleElement.textContent = 'üì∞ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å';
                    formActionElement.value = 'create_news';
                } else if (itemType === 'page') {
                    titleElement.textContent = 'üìÑ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É';
                    formActionElement.value = 'create_page';
                } else if (itemType === 'slide') {
                    titleElement.textContent = 'üéöÔ∏è –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–ª–∞–π–¥';
                    formActionElement.value = 'create_slide';
                }
                idElement.value = '';
                formElement.reset();

                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                if (itemType === 'product') {
                    document.getElementById('isActive').checked = true;
                    document.querySelector('[name="stock"]').value = '1';
                } else if (itemType === 'category') {
                    document.getElementById('categoryActive').checked = true;
                } else if (itemType === 'review') {
                    document.getElementById('reviewApproved').checked = true;
                } else if (itemType === 'news') {
                    document.getElementById('newsPublished').checked = true;
                } else if (itemType === 'page') {
                    document.getElementById('pagePublished').checked = true;
                } else if (itemType === 'slide') {
                    document.getElementById('slideActive').checked = true;
                }
            }

            modal.classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function closeMegaModal(modalId) {
            const modal = document.getElementById(modalId);
            modal.classList.remove('show');
            document.body.style.overflow = '';
        }

        // === –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===

        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ (–ù–ï –¢–†–û–ì–ê–ï–ú - –û–†–ò–ì–ò–ù–ê–õ)
        async function loadProductData(productId) {
            try {
                const response = await fetch(`admin.php?action=get_product&ajax=1&id=${productId}`);
                const result = await response.json();

                if (result.success) {
                    const product = result.product;
                    document.querySelector('[name="name"]').value = product.name || '';
                    document.querySelector('[name="category_id"]').value = product.category_id || '';
                    document.querySelector('[name="short_description"]').value = product.short_description || '';
                    document.querySelector('[name="description"]').value = product.description || '';
                    document.querySelector('[name="price"]').value = product.price || '';
                    document.querySelector('[name="old_price"]').value = product.old_price || '';
                    document.querySelector('[name="stock"]').value = product.stock || 0;
                    document.querySelector('[name="sku"]').value = product.sku || '';

                    document.getElementById('isFeatured').checked = !!product.is_featured;
                    document.getElementById('isNew').checked = !!product.is_new;
                    document.getElementById('isActive').checked = !!product.is_active;

                    showNotification('–î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–∞', 'error');
            }
        }

        // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        async function loadCategoryData(categoryId) {
            try {
                const response = await fetch(`admin.php?action=get_category&ajax=1&id=${categoryId}`);
                const result = await response.json();

                if (result.success) {
                    const category = result.category;
                    document.querySelector('#megaCategoryForm [name="name"]').value = category.name || '';
                    document.querySelector('#megaCategoryForm [name="icon"]').value = category.icon || '';
                    document.querySelector('#megaCategoryForm [name="description"]').value = category.description || '';
                    document.querySelector('#megaCategoryForm [name="sort_order"]').value = category.sort_order || 999;
                    document.querySelector('#megaCategoryForm [name="seo_title"]').value = category.seo_title || '';
                    document.querySelector('#megaCategoryForm [name="seo_description"]').value = category.seo_description || '';

                    document.getElementById('categoryActive').checked = !!category.active;

                    showNotification('–î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'error');
            }
        }

        // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–∞
        async function loadReviewData(reviewId) {
            try {
                const response = await fetch(`admin.php?action=get_review&ajax=1&id=${reviewId}`);
                const result = await response.json();

                if (result.success) {
                    const review = result.review;
                    document.querySelector('#megaReviewForm [name="product_id"]').value = review.product_id || '';
                    document.querySelector('#megaReviewForm [name="customer_name"]').value = review.customer_name || '';
                    document.querySelector('#megaReviewForm [name="customer_email"]').value = review.customer_email || '';
                    document.querySelector('#megaReviewForm [name="rating"]').value = review.rating || 5;
                    document.querySelector('#megaReviewForm [name="title"]').value = review.title || '';
                    document.querySelector('#megaReviewForm [name="text"]').value = review.text || '';
                    document.querySelector('#megaReviewForm [name="admin_reply"]').value = review.admin_reply || '';

                    document.getElementById('reviewApproved').checked = !!review.is_approved;
                    document.getElementById('reviewFeatured').checked = !!review.is_featured;

                    showNotification('–î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–∞: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–∞:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–∞', 'error');
            }
        }

        // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–∏
        async function loadNewsData(newsId) {
            try {
                const response = await fetch(`admin.php?action=get_news&ajax=1&id=${newsId}`);
                const result = await response.json();

                if (result.success) {
                    const news = result.news;
                    document.querySelector('#megaNewsForm [name="title"]').value = news.title || '';
                    document.querySelector('#megaNewsForm [name="author"]').value = news.author || '';
                    document.querySelector('#megaNewsForm [name="image"]').value = news.image || '';
                    document.querySelector('#megaNewsForm [name="excerpt"]').value = news.excerpt || '';
                    document.querySelector('#megaNewsForm [name="content"]').value = news.content || '';
                    document.querySelector('#megaNewsForm [name="meta_title"]').value = news.meta_title || '';
                    document.querySelector('#megaNewsForm [name="meta_description"]').value = news.meta_description || '';

                    document.getElementById('newsPublished').checked = !!news.is_published;
                    document.getElementById('newsFeatured').checked = !!news.is_featured;

                    showNotification('–î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–∏', 'error');
            }
        }

        // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã  
        async function loadPageData(pageId) {
            try {
                const response = await fetch(`admin.php?action=get_page&ajax=1&id=${pageId}`);
                const result = await response.json();

                if (result.success) {
                    const page = result.page;
                    document.querySelector('#megaPageForm [name="title"]').value = page.title || '';
                    document.querySelector('#megaPageForm [name="slug"]').value = page.slug || '';
                    document.querySelector('#megaPageForm [name="content"]').value = page.content || '';
                    document.querySelector('#megaPageForm [name="template"]').value = page.template || 'default';
                    document.querySelector('#megaPageForm [name="meta_title"]').value = page.meta_title || '';
                    document.querySelector('#megaPageForm [name="meta_description"]').value = page.meta_description || '';
                    document.querySelector('#megaPageForm [name="menu_order"]').value = page.menu_order || 999;

                    document.getElementById('pagePublished').checked = !!page.is_published;
                    document.getElementById('pageInMenu').checked = !!page.show_in_menu;

                    showNotification('–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã', 'error');
            }
        }

        // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∞–π–¥–∞
        async function loadSlideData(slideId) {
            try {
                const response = await fetch(`admin.php?action=get_slide&ajax=1&id=${slideId}`);
                const result = await response.json();

                if (result.success) {
                    const slide = result.slide;
                    document.querySelector('#megaSlideForm [name="title"]').value = slide.title || '';
                    document.querySelector('#megaSlideForm [name="subtitle"]').value = slide.subtitle || '';
                    document.querySelector('#megaSlideForm [name="description"]').value = slide.description || '';
                    document.querySelector('#megaSlideForm [name="image"]').value = slide.image || '';
                    document.querySelector('#megaSlideForm [name="link_url"]').value = slide.link_url || '';
                    document.querySelector('#megaSlideForm [name="link_text"]').value = slide.link_text || '–ü–æ–¥—Ä–æ–±–Ω–µ–µ';
                    document.querySelector('#megaSlideForm [name="text_position"]').value = slide.text_position || 'center';
                    document.querySelector('#megaSlideForm [name="background_color"]').value = slide.background_color || '#667eea';
                    document.querySelector('#megaSlideForm [name="text_color"]').value = slide.text_color || '#ffffff';
                    document.querySelector('#megaSlideForm [name="sort_order"]').value = slide.sort_order || 1;
                    document.querySelector('#megaSlideForm [name="show_from"]').value = slide.show_from || '';
                    document.querySelector('#megaSlideForm [name="show_until"]').value = slide.show_until || '';

                    document.getElementById('slideActive').checked = !!slide.is_active;

                    showNotification('–î–∞–Ω–Ω—ã–µ —Å–ª–∞–π–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–∞–π–¥–∞: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–∞–π–¥–∞:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ª–∞–π–¥–∞', 'error');
            }
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        document.addEventListener('DOMContentLoaded', function() {
            const tabButtons = document.querySelectorAll('.mega-tab-button');
            const tabPanels = document.querySelectorAll('.mega-tab-panel');

            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const targetTab = this.dataset.tab;
                    const modal = this.closest('.mega-modal');

                    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—É—â–µ–π –º–æ–¥–∞–ª–∫–µ
                    modal.querySelectorAll('.mega-tab-button').forEach(b => b.classList.remove('active'));
                    modal.querySelectorAll('.mega-tab-panel').forEach(p => p.classList.remove('active'));

                    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
                    this.classList.add('active');
                    modal.querySelector(`[data-panel='${targetTab}']`).classList.add('active');
                });
            });

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –æ—Ç–∑—ã–≤–µ
            const productSelect = document.querySelector('#megaReviewForm [name="product_id"]');
            if (productSelect) {
                productSelect.addEventListener('change', function() {
                    const selectedOption = this.options[this.selectedIndex];
                    const productName = selectedOption.dataset.name || selectedOption.text;
                    document.getElementById('reviewProductName').value = productName;
                });
            }
        });

        // === AI –§–£–ù–ö–¶–ò–ò ===

        // AI –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ (–ù–ï –¢–†–û–ì–ê–ï–ú - –û–†–ò–ì–ò–ù–ê–õ)
        function generateProductName() {
            const names = [
                '–ù–µ–æ–Ω –≥–æ–ª—É–±–æ–π —Å—Ç–∞–π–∫–∞ (10 —à—Ç)',
                '–ê–Ω—É–±–∏–∞—Å –ë–∞—Ä—Ç–µ—Ä–∞ –Ω–∞–Ω–∞ –Ω–∞ –∫–æ—Ä—è–≥–µ',
                '–§–∏–ª—å—Ç—Ä –≤–Ω–µ—à–Ω–∏–π PREMIUM 150–ª',
                '–ö—Ä–µ–≤–µ—Ç–∫–∞ Cherry Red',
                '–ì—Ä—É–Ω—Ç ADA Amazonia 3–ª'
            ];
            const randomName = names[Math.floor(Math.random() * names.length)];
            document.querySelector('[name="name"]').value = randomName;
            showNotification('–ù–∞–∑–≤–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ', 'success');
        }

        function generateDescription() {
            const descriptions = [
                '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∞. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏ –æ–ø—ã—Ç–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤. –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞-–∫–∞—á–µ—Å—Ç–≤–æ.',
                '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏. –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.',
                '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –∞–∫–≤–∞—Ä–∏—É–º–∞. –•–æ—Ä–æ—à–æ —Å–º–æ—Ç—Ä–∏—Ç—Å—è –≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏—è—Ö –ª—é–±–æ–≥–æ —Å—Ç–∏–ª—è.'
            ];
            const randomDesc = descriptions[Math.floor(Math.random() * descriptions.length)];
            document.querySelector('[name="description"]').value = randomDesc;
            showNotification('–û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ', 'success');
        }

        function suggestCategory() {
            const categories = document.querySelectorAll('[name="category_id"] option');
            const randomCategory = categories[Math.floor(Math.random() * (categories.length - 1)) + 1];
            randomCategory.selected = true;
            showNotification('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–¥–æ–±—Ä–∞–Ω–∞', 'success');
        }

        // –ù–û–í–´–ï AI –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô
        function generateCategoryName() {
            const names = [
                '–ú–æ—Ä—Å–∫–∏–µ —Ä—ã–±–∫–∏',
                '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è',
                '–ù–∞–Ω–æ –∞–∫–≤–∞—Ä–∏—É–º—ã',
                '–ü—Ä–µ–º–∏—É–º –∫–æ—Ä–º–∞',
                'LED –æ—Å–≤–µ—â–µ–Ω–∏–µ'
            ];
            const randomName = names[Math.floor(Math.random() * names.length)];
            document.querySelector('#megaCategoryForm [name="name"]').value = randomName;
            showNotification('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ', 'success');
        }

        function generateCategoryDescription() {
            const descriptions = [
                '–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤',
                '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞–∫–≤–∞—Ä–∏—É–º–∞',
                '–¢–æ–≤–∞—Ä—ã –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞'
            ];
            const randomDesc = descriptions[Math.floor(Math.random() * descriptions.length)];
            document.querySelector('#megaCategoryForm [name="description"]').value = randomDesc;
            showNotification('–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ', 'success');
        }

        function suggestIcon() {
            const icons = ['üê†', 'üêü', 'ü¶à', 'üê°', 'üå±', 'ü™¥', 'üí°', '‚öôÔ∏è'];
            const randomIcon = icons[Math.floor(Math.random() * icons.length)];
            document.querySelector('#megaCategoryForm [name="icon"]').value = randomIcon;
            showNotification('–ò–∫–æ–Ω–∫–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–∞', 'success');
        }

        // –ù–û–í–´–ï AI –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–û–í–û–°–¢–ï–ô
        function generateNewsTitle() {
            const titles = [
                '–ù–æ–≤–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö —Ä—ã–±–æ–∫!',
                '–°–∫–∏–¥–∫–∏ –Ω–∞ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–æ 50%',
                '–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –º–æ—Ä—Å–∫–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π',
                '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –∑–∞–ø—É—Å–∫—É –∞–∫–≤–∞—Ä–∏—É–º–∞',
                '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –∫—Ä–µ–≤–µ—Ç–æ–∫ –ø–æ—Å—Ç—É–ø–∏–ª–∞ –≤ –ø—Ä–æ–¥–∞–∂—É'
            ];
            const randomTitle = titles[Math.floor(Math.random() * titles.length)];
            document.querySelector('#megaNewsForm [name="title"]').value = randomTitle;
            showNotification('–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω', 'success');
        }

        function generateNewsExcerpt() {
            const excerpts = [
                '–£–∑–Ω–∞–π—Ç–µ –ø–µ—Ä–≤—ã–º–∏ –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞.',
                '–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∞.',
                '–ß–∏—Ç–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.'
            ];
            const randomExcerpt = excerpts[Math.floor(Math.random() * excerpts.length)];
            document.querySelector('#megaNewsForm [name="excerpt"]').value = randomExcerpt;
            showNotification('–ê–Ω–æ–Ω—Å –Ω–æ–≤–æ—Å—Ç–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω', 'success');
        }

        function generateNewsContent() {
            const content = `
<p>–£–≤–∞–∂–∞–µ–º—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏!</p>

<p>–ú—ã —Ä–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å –≤–∞–º –æ –≤–∞–∂–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –≤—Å–µ—Ö –ª—é–±–∏—Ç–µ–ª–µ–π –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–∏–∫–∏.</p>

<h3>–ß—Ç–æ –Ω–æ–≤–æ–≥–æ?</h3>
<ul>
<li>–ù–æ–≤—ã–µ –≤–∏–¥—ã —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö —Ä—ã–±–æ–∫</li>
<li>–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–æ–≤</li>
<li>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ—Ä–º–∞ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π</li>
</ul>

<p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!</p>
            `.trim();
            
            document.querySelector('#megaNewsForm [name="content"]').value = content;
            showNotification('–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω', 'success');
        }

        // === AJAX –§–£–ù–ö–¶–ò–ò ===
        async function makeAjaxRequest(action, data = {}) {
            showLoading();

            const formData = new FormData();
            formData.append('action', action);
            formData.append('ajax', '1');

            for (let key in data) {
                formData.append(key, data[key]);
            }

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                return result;
            } catch (error) {
                console.error('AJAX Error:', error);
                return { success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' };
            } finally {
                hideLoading();
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–û–í–ê–†–û–í (–ù–ï –¢–†–û–ì–ê–ï–ú - –û–†–ò–ì–ò–ù–ê–õ) ===
        async function toggleProductStatus(productId, isActive) {
            const result = await makeAjaxRequest('toggle_product_status', {
                product_id: productId,
                is_active: isActive ? '1' : '0'
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteProduct(productId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_product', {
                product_id: productId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function duplicateProduct(productId) {
            const result = await makeAjaxRequest('duplicate_product', {
                product_id: productId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô ===
        async function deleteCategory(categoryId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_category', {
                category_id: categoryId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ö–ê–ó–û–í ===
        async function updateOrderStatus(orderId, status) {
            const result = await makeAjaxRequest('update_order_status', {
                order_id: orderId,
                status: status
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function bulkOrderAction(action) {
            const selectedIds = getSelectedOrders();
            if (selectedIds.length === 0) {
                showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏', 'warning');
                return;
            }

            const result = await makeAjaxRequest('bulk_orders', {
                order_ids: selectedIds.join(','),
                bulk_action: action
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–ó–´–í–û–í ===
        async function toggleReviewStatus(reviewId, isApproved) {
            const result = await makeAjaxRequest('approve_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteReview(reviewId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function bulkReviewAction(action) {
            const selectedIds = getSelectedReviews();
            if (selectedIds.length === 0) {
                showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∑—ã–≤—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏', 'warning');
                return;
            }

            const result = await makeAjaxRequest('bulk_reviews', {
                review_ids: selectedIds.join(','),
                bulk_action: action
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–û–í–û–°–¢–ï–ô ===
        async function deleteNews(newsId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_news', {
                news_id: newsId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–õ–ê–ô–î–ï–†–ê ===
        async function deleteSlide(slideId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Å–ª–∞–π–¥? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_slide', {
                slide_id: slideId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
        function getSelectedProducts() {
            return Array.from(document.querySelectorAll('.product-checkbox:checked')).map(cb => cb.value);
        }

        function getSelectedOrders() {
            return Array.from(document.querySelectorAll('.order-checkbox:checked')).map(cb => cb.value);
        }

        function getSelectedReviews() {
            return Array.from(document.querySelectorAll('.review-checkbox:checked')).map(cb => cb.value);
        }

        function toggleAllProducts(checked) {
            document.querySelectorAll('.product-checkbox').forEach(cb => cb.checked = checked);
        }

        function toggleAllOrders(checked) {
            document.querySelectorAll('.order-checkbox').forEach(cb => cb.checked = checked);
        }

        function toggleAllReviews(checked) {
            document.querySelectorAll('.review-checkbox').forEach(cb => cb.checked = checked);
        }

        // === –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–£–ü–ï–† –ê–ù–ê–õ–ò–¢–ò–ö–ê ===
        let superAnalyticsData = null;

        async function loadSuperAnalytics() {
            try {
                showLoading();
                const result = await makeAjaxRequest('get_super_analytics');

                if (result.success) {
                    superAnalyticsData = result.analytics;
                    renderSuperCharts();
                    return result.analytics;
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ' + result.message, 'error');
                    return null;
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
                showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏', 'error');
                return null;
            } finally {
                hideLoading();
            }
        }

        function renderSuperCharts() {
            if (!superAnalyticsData) return;

            // –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –¥–Ω—è–º
            const salesCtx = document.getElementById('salesChart');
            if (salesCtx) {
                new Chart(salesCtx, {
                    type: 'line',
                    data: {
                        labels: superAnalyticsData.sales_by_day.map(item => item.date_formatted),
                        datasets: [{
                            label: '–í—ã—Ä—É—á–∫–∞ (‚ÇΩ)',
                            data: superAnalyticsData.sales_by_day.map(item => item.revenue),
                            borderColor: '#2ecc71',
                            backgroundColor: 'rgba(46, 204, 113, 0.1)',
                            fill: true,
                            tension: 0.4
                        }, {
                            label: '–ó–∞–∫–∞–∑—ã',
                            data: superAnalyticsData.sales_by_day.map(item => item.orders),
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.1)',
                            fill: true,
                            tension: 0.4,
                            yAxisID: 'y1'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        interaction: {
                            mode: 'index',
                            intersect: false,
                        },
                        scales: {
                            x: {
                                display: true,
                                title: {
                                    display: true,
                                    text: '–î–∞—Ç–∞'
                                }
                            },
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                title: {
                                    display: true,
                                    text: '–í—ã—Ä—É—á–∫–∞ (‚ÇΩ)'
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                title: {
                                    display: true,
                                    text: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤'
                                },
                                grid: {
                                    drawOnChartArea: false,
                                },
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: '–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞ 30 –¥–Ω–µ–π'
                            }
                        }
                    }
                });
            }

            // –ì—Ä–∞—Ñ–∏–∫ –ø–æ —á–∞—Å–∞–º
            const hourlyCtx = document.getElementById('hourlyChart');
            if (hourlyCtx) {
                new Chart(hourlyCtx, {
                    type: 'bar',
                    data: {
                        labels: superAnalyticsData.hourly_data.map(item => item.hour),
                        datasets: [{
                            label: '–ó–∞–∫–∞–∑—ã',
                            data: superAnalyticsData.hourly_data.map(item => item.orders),
                            backgroundColor: 'rgba(102, 126, 234, 0.8)',
                            borderColor: '#667eea',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            title: {
                                display: true,
                                text: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }

            // –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            const categoriesCtx = document.getElementById('categoriesChart');
            if (categoriesCtx) {
                const colors = ['#667eea', '#2ecc71', '#f39c12', '#e74c3c', '#9b59b6', '#1abc9c', '#34495e', '#16a085'];

                new Chart(categoriesCtx, {
                    type: 'doughnut',
                    data: {
                        labels: superAnalyticsData.category_analytics.map(cat => cat.name),
                        datasets: [{
                            data: superAnalyticsData.category_analytics.map(cat => cat.percentage),
                            backgroundColor: colors,
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right',
                            },
                            title: {
                                display: true,
                                text: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'
                            }
                        }
                    }
                });
            }

            // –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂
            const funnelCtx = document.getElementById('funnelChart');
            if (funnelCtx) {
                new Chart(funnelCtx, {
                    type: 'bar',
                    data: {
                        labels: superAnalyticsData.funnel_data.map(item => item.stage),
                        datasets: [{
                            label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
                            data: superAnalyticsData.funnel_data.map(item => item.count),
                            backgroundColor: [
                                'rgba(52, 152, 219, 0.8)',
                                'rgba(46, 204, 113, 0.8)',
                                'rgba(243, 156, 18, 0.8)',
                                'rgba(231, 76, 60, 0.8)',
                                'rgba(155, 89, 182, 0.8)'
                            ],
                            borderColor: [
                                '#3498db',
                                '#2ecc71',
                                '#f39c12',
                                '#e74c3c',
                                '#9b59b6'
                            ],
                            borderWidth: 2
                        }]
                    },
                    options: {
                        indexAxis: 'y',
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            title: {
                                display: true,
                                text: '–í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏'
                            }
                        },
                        scales: {
                            x: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        document.addEventListener('DOMContentLoaded', function() {
            const notification = document.getElementById('adminNotification');
            if (notification) {
                setTimeout(() => {
                    notification.style.animation = 'notificationSlideOut 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }, 5000);
            }

            // –ï—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            if (window.location.search.includes('section=analytics')) {
                setTimeout(() => {
                    loadSuperAnalytics();
                }, 500);
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø–æ ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                document.querySelectorAll('.mega-modal.show').forEach(modal => {
                    modal.classList.remove('show');
                });
                document.body.style.overflow = '';
            }
        });

        // CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        const style = document.createElement('style');
        style.textContent = `
            @keyframes notificationSlideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>

<?php

// === –§–£–ù–ö–¶–ò–ò –î–ê–ù–ù–´–• –ê–î–ú–ò–ù–ö–ò ===

function getAdminData($section) {
    switch ($section) {
        case 'dashboard':
            return [
                'title' => 'KPI –î–∞—à–±–æ—Ä–¥',
                'stats' => getDashboardStats(),
                'recent_activity' => getRecentActivity()
            ];
        case 'products':
            return [
                'title' => 'MEGA –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏',
                'products' => getProducts(),
                'categories' => getCategories(),
                'stats' => getProductsStats()
            ];
        case 'categories':
            return [
                'title' => 'MEGA –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
                'categories' => getCategories(),
                'stats' => getCategoriesStats()
            ];
        case 'orders':
            return [
                'title' => 'MEGA –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏',
                'orders' => getMegaOrders(),
                'stats' => getOrdersStats()
            ];
        case 'reviews':
            return [
                'title' => 'MEGA –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏',
                'reviews' => getReviews(),
                'stats' => getReviewsStats()
            ];
        case 'news':
            return [
                'title' => 'üì∞ –ú–ï–ì–ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏',
                'news' => getNews(),
                'stats' => getNewsStats()
            ];
        case 'pages':
            return [
                'title' => 'üìÑ –ú–ï–ì–ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏',
                'pages' => getPages(),
                'stats' => getPagesStats()
            ];
        case 'slider':
            return [
                'title' => 'üéöÔ∏è –ú–ï–ì–ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–æ–º',
                'slides' => getSlides(),
                'stats' => getSliderStats()
            ];
        case 'analytics':
            return [
                'title' => '–°–£–ü–ï–† –ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂',
                'charts_data' => getAnalyticsData()
            ];
        case 'settings':
            return [
                'title' => '‚öôÔ∏è –°–£–ü–ï–† –ú–ï–ì–ê –ù–ê–°–¢–†–û–ô–ö–ò',
                'settings' => getSiteSettings()
            ];
        case 'logs':
            return [
                'title' => '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏',
                'logs' => getAdminLogs()
            ];
        default:
            return [
                'title' => ucfirst($section),
                'description' => "–†–∞–∑–¥–µ–ª '$section' –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
            ];
    }
}

function getPageIcon($section) {
    $icons = [
        'dashboard' => 'fas fa-chart-pie',
        'products' => 'fas fa-fish',
        'categories' => 'fas fa-tags',
        'orders' => 'fas fa-shopping-bag',
        'reviews' => 'fas fa-star',
        'news' => 'fas fa-newspaper',
        'pages' => 'fas fa-file-alt',
        'slider' => 'fas fa-images',
        'analytics' => 'fas fa-chart-line',
        'settings' => 'fas fa-cog',
        'logs' => 'fas fa-list-alt'
    ];

    return $icons[$section] ?? 'fas fa-cog';
}

function getDashboardStats() {
    $products = getProducts();
    $orders = getOrders();
    $reviews = getReviews();
    $categories = getCategories();
    $news = getNews();
    $pages = getPages();
    $slides = getSlides();

    $totalRevenue = array_sum(array_column($orders, 'total_amount'));
    $newOrders = count(array_filter($orders, fn($o) => $o['status'] === 'new'));
    $activeProducts = count(array_filter($products, fn($p) => $p['is_active']));
    $avgRating = count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0;
    $pendingReviews = count(array_filter($reviews, fn($r) => !$r['is_approved']));
    $publishedNews = count(array_filter($news, fn($n) => $n['is_published']));

    // –î–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–æ—Å—Ç–∞
    $monthAgo = date('Y-m-d', strtotime('-30 days'));
    $monthlyOrders = array_filter($orders, fn($o) => $o['created_at'] >= $monthAgo);
    $monthlyRevenue = array_sum(array_column($monthlyOrders, 'total_amount'));

    return [
        'revenue' => [
            'value' => number_format($totalRevenue, 0, '', ' ') . ' ‚ÇΩ',
            'label' => '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞',
            'change' => '+' . number_format($monthlyRevenue, 0, '', ' ') . ' ‚ÇΩ –∑–∞ –º–µ—Å—è—Ü',
            'trend' => 'positive',
            'icon' => 'fas fa-ruble-sign'
        ],
        'orders' => [
            'value' => count($orders),
            'label' => '–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤',
            'change' => '+' . $newOrders . ' –Ω–æ–≤—ã—Ö',
            'trend' => $newOrders > 0 ? 'positive' : 'neutral',
            'icon' => 'fas fa-shopping-bag'
        ],
        'products' => [
            'value' => $activeProducts,
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
            'change' => '–∏–∑ ' . count($products) . ' –≤—Å–µ–≥–æ',
            'trend' => 'neutral',
            'icon' => 'fas fa-fish'
        ],
        'rating' => [
            'value' => number_format($avgRating, 1),
            'label' => '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥',
            'change' => count($reviews) . ' –æ—Ç–∑—ã–≤–æ–≤',
            'trend' => $avgRating >= 4 ? 'positive' : ($avgRating >= 3 ? 'neutral' : 'negative'),
            'icon' => 'fas fa-star'
        ],
        'categories' => [
            'value' => count(array_filter($categories, fn($c) => $c['active'])),
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            'change' => '–∏–∑ ' . count($categories) . ' –≤—Å–µ–≥–æ',
            'trend' => 'neutral',
            'icon' => 'fas fa-tags'
        ],
        'news' => [
            'value' => $publishedNews,
            'label' => '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π',
            'change' => '–∏–∑ ' . count($news) . ' –≤—Å–µ–≥–æ',
            'trend' => 'positive',
            'icon' => 'fas fa-newspaper'
        ],
        'pages' => [
            'value' => count($pages),
            'label' => '–°—Ç—Ä–∞–Ω–∏—Ü —Å–∞–π—Ç–∞',
            'change' => '–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤',
            'trend' => 'neutral',
            'icon' => 'fas fa-file-alt'
        ],
        'slider' => [
            'value' => count(array_filter($slides, fn($s) => $s['is_active'])),
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª–∞–π–¥–æ–≤',
            'change' => '–∏–∑ ' . count($slides) . ' –≤—Å–µ–≥–æ',
            'trend' => 'positive',
            'icon' => 'fas fa-images'
        ],
        'pending' => [
            'value' => $pendingReviews,
            'label' => '–û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
            'change' => '–æ—Ç–∑—ã–≤—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
            'trend' => $pendingReviews > 5 ? 'negative' : 'positive',
            'icon' => 'fas fa-clock'
        ]
    ];
}

function getRecentActivity() {
    return [
        [
            'time' => '2 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
            'details' => '–ó–∞–∫–∞–∑ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' –Ω–∞ —Å—É–º–º—É ' . number_format(rand(1000, 5000), 0, '', ' ') . ' ‚ÇΩ',
            'icon' => 'fas fa-shopping-bag',
            'type' => 'success'
        ],
        [
            'time' => '5 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å',
            'details' => '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"',
            'icon' => 'fas fa-newspaper',
            'type' => 'info'
        ],
        [
            'time' => '8 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤',
            'details' => '–û—Ç–∑—ã–≤ –Ω–∞ —Ç–æ–≤–∞—Ä "–ê–Ω—É–±–∏–∞—Å –ë–∞—Ä—Ç–µ—Ä–∞ –Ω–∞–Ω–∞"',
            'icon' => 'fas fa-star',
            'type' => 'info'
        ],
        [
            'time' => '12 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–û–±–Ω–æ–≤–ª–µ–Ω —Å–ª–∞–π–¥–µ—Ä',
            'details' => '–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–ª–∞–π–¥ —Å –∞–∫—Ü–∏–µ–π',
            'icon' => 'fas fa-images',
            'type' => 'primary'
        ],
        [
            'time' => '15 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω',
            'details' => '–û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä "–°–∫–∞–ª—è—Ä–∏—è —Å–µ—Ä–µ–±—Ä–∏—Å—Ç–∞—è"',
            'icon' => 'fas fa-edit',
            'type' => 'primary'
        ],
        [
            'time' => '20 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
            'details' => '–°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ "–û –¥–æ—Å—Ç–∞–≤–∫–µ"',
            'icon' => 'fas fa-file-alt',
            'type' => 'success'
        ],
        [
            'time' => '1 —á–∞—Å –Ω–∞–∑–∞–¥',
            'action' => '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'details' => '–ó–∞–∫–∞–∑ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'icon' => 'fas fa-truck',
            'type' => 'success'
        ],
        [
            'time' => '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
            'action' => '–û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
            'details' => '–ò–∑–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞',
            'icon' => 'fas fa-cog',
            'type' => 'primary'
        ]
    ];
}

function getProductsStats() {
    $products = getProducts();

    return [
        'total' => count($products),
        'active' => count(array_filter($products, fn($p) => $p['is_active'])),
        'featured' => count(array_filter($products, fn($p) => $p['is_featured'])),
        'low_stock' => count(array_filter($products, fn($p) => $p['stock'] <= 5))
    ];
}

function getCategoriesStats() {
    $categories = getCategories();

    return [
        'total' => count($categories),
        'active' => count(array_filter($categories, fn($c) => $c['active']))
    ];
}

function getOrdersStats() {
    $orders = getOrders();

    $stats = [
        'total' => count($orders),
        'new' => count(array_filter($orders, fn($o) => $o['status'] === 'new')),
        'processing' => count(array_filter($orders, fn($o) => $o['status'] === 'processing')),
        'completed' => count(array_filter($orders, fn($o) => $o['status'] === 'delivered')),
        'total_amount' => array_sum(array_column($orders, 'total_amount'))
    ];

    return $stats;
}

function getReviewsStats() {
    $reviews = getReviews();

    return [
        'total' => count($reviews),
        'approved' => count(array_filter($reviews, fn($r) => $r['is_approved'])),
        'pending' => count(array_filter($reviews, fn($r) => !$r['is_approved'])),
        'average_rating' => count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0
    ];
}

function getNewsStats() {
    $news = getNews();

    return [
        'total' => count($news),
        'published' => count(array_filter($news, fn($n) => $n['is_published'])),
        'drafts' => count(array_filter($news, fn($n) => !$n['is_published'])),
        'featured' => count(array_filter($news, fn($n) => $n['is_featured'])),
        'total_views' => array_sum(array_column($news, 'views'))
    ];
}

function getPagesStats() {
    $pages = getPages();

    return [
        'total' => count($pages),
        'published' => count(array_filter($pages, fn($p) => $p['is_published'])),
        'in_menu' => count(array_filter($pages, fn($p) => $p['show_in_menu']))
    ];
}

function getSliderStats() {
    $slides = getSlides();

    return [
        'total' => count($slides),
        'active' => count(array_filter($slides, fn($s) => $s['is_active']))
    ];
}

function getAnalyticsData() {
    return [
        'sales_chart' => generateSalesChartData(),
        'categories_chart' => generateCategoriesChartData()
    ];
}

function generateSalesChartData() {
    $data = [];
    for ($i = 29; $i >= 0; $i--) {
        $date = date('Y-m-d', strtotime("-$i days"));
        $data[] = [
            'date' => $date,
            'sales' => rand(5000, 50000),
            'orders' => rand(10, 100)
        ];
    }
    return $data;
}

function generateCategoriesChartData() {
    $categories = getCategories();
    $products = getProducts();

    $data = [];
    foreach ($categories as $category) {
        $count = count(array_filter($products, fn($p) => $p['category_id'] == $category['id']));
        if ($count > 0) {
            $data[] = [
                'name' => $category['name'],
                'value' => $count,
                'icon' => $category['icon']
            ];
        }
    }

    return $data;
}

// === –§–£–ù–ö–¶–ò–ò –û–ë–†–ê–ë–û–¢–ö–ò –î–ê–ù–ù–´–• ===

function toggleProductStatus($productId, $isActive) {
    try {
        $dynamicData = initializeDynamicData();
        $products = &$dynamicData['products'];

        $productIndex = array_search($productId, array_column($products, 'id'));
        if ($productIndex === false) {
            return ['success' => false, 'message' => '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $products[$productIndex]['is_active'] = (bool)$isActive;
        $products[$productIndex]['updated_at'] = date('Y-m-d H:i:s');
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            $status = $isActive ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω';
            logAdminAction('PRODUCTS', "–¢–æ–≤–∞—Ä $status: {$products[$productIndex]['name']}");
            return ['success' => true, 'message' => "–¢–æ–≤–∞—Ä $status"];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function approveReview($reviewId) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        $reviews[$reviewIndex]['is_approved'] = true;
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('REVIEWS', "–û—Ç–∑—ã–≤ –æ–¥–æ–±—Ä–µ–Ω ID:$reviewId");
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ –æ–¥–æ–±—Ä–µ–Ω'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

function deleteReview($reviewId) {
    try {
        $dynamicData = initializeDynamicData();
        $reviews = &$dynamicData['reviews'];

        $reviewIndex = array_search($reviewId, array_column($reviews, 'id'));
        if ($reviewIndex === false) {
            return ['success' => false, 'message' => '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'];
        }

        array_splice($reviews, $reviewIndex, 1);
        $dynamicData['last_updated'] = date('Y-m-d H:i:s');

        if (saveDynamicData($dynamicData)) {
            logAdminAction('REVIEWS', "–û—Ç–∑—ã–≤ —É–¥–∞–ª–µ–Ω ID:$reviewId");
            return ['success' => true, 'message' => '–û—Ç–∑—ã–≤ —É–¥–∞–ª–µ–Ω'];
        } else {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ò–ù–ì–ê –†–ê–ó–î–ï–õ–û–í ===

function renderAdminSection($section, $data) {
    switch ($section) {
        case 'dashboard':
            renderDashboard($data);
            break;
        case 'products':
            renderMegaProductsSection($data);
            break;
        case 'categories':
            renderMegaCategoriesSection($data);
            break;
        case 'orders':
            renderMegaOrdersSection($data);
            break;
        case 'reviews':
            renderMegaReviewsSection($data);
            break;
        case 'news':
            renderMegaNewsSection($data);
            break;
        case 'pages':
            renderMegaPagesSection($data);
            break;
        case 'slider':
            renderMegaSliderSection($data);
            break;
        case 'analytics':
            renderSuperAnalyticsSection($data);
            break;
        case 'settings':
            renderUltraSettingsSection($data);
            break;
        case 'logs':
            renderLogsSection($data);
            break;
        default:
            renderDefaultSection($section, $data);
    }
}

// === –î–ê–®–ë–û–†–î ===
function renderDashboard($data) {
    $stats = $data['stats'];
    $activity = $data['recent_activity'] ?? [];
    ?>
    <!-- –°–£–ü–ï–† KPI –ö–∞—Ä—Ç–æ—á–∫–∏ -->
    <div class='stats-grid' style='grid-template-columns: repeat(3, 1fr); margin-bottom: 40px;'>
        <?php 
        $displayedStats = array_slice($stats, 0, 9, true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 9 –∫–∞—Ä—Ç–æ—á–µ–∫
        foreach ($displayedStats as $key => $stat): ?>
            <div class='stat-card stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>' data-stat='<?= $key ?>'>
                <div class='stat-header'>
                    <div class='stat-icon stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>'>
                        <i class='<?= $stat['icon'] ?>'></i>
                    </div>
                    <div class='stat-trend'>
                        <i class='fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>'></i>
                    </div>
                </div>

                <div class='stat-value'><?= $stat['value'] ?></div>
                <div class='stat-label'><?= $stat['label'] ?></div>
                <div class='stat-change <?= $stat['trend'] ?>'>
                    <i class='fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>'></i>
                    <?= $stat['change'] ?>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-clock'></i>
                –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
            </h3>
            <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                <i class='fas fa-sync-alt'></i>
                –û–±–Ω–æ–≤–∏—Ç—å
            </button>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; gap: 16px;'>
                <?php foreach ($activity as $item): ?>
                    <div style='display: flex; align-items: center; gap: 16px; padding: 16px; background: var(--bg-secondary); border-radius: var(--border-radius-lg); border-left: 4px solid var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color);'>
                        <div style='width: 40px; height: 40px; border-radius: 50%; background: var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color); display: flex; align-items: center; justify-content: center; color: white;'>
                            <i class='<?= $item['icon'] ?>'></i>
                        </div>
                        <div style='flex: 1;'>
                            <div style='font-weight: 600; margin-bottom: 4px;'><?= $item['action'] ?></div>
                            <div style='color: var(--text-secondary); font-size: 14px;'><?= $item['details'] ?></div>
                        </div>
                        <div style='color: var(--text-muted); font-size: 13px; white-space: nowrap;'>
                            <?= $item['time'] ?>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
    </div>

    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-rocket'></i>
                –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;'>
                <button class='btn btn-success btn-lg' onclick='openMegaModal("megaProductModal", null, "product")' style='height: 60px; display: flex; flex-direction: column; gap: 8px; justify-content: center;'>
                    <i class='fas fa-plus'></i>
                    –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                </button>
                
                <button class='btn btn-primary btn-lg' onclick='openMegaModal("megaNewsModal", null, "news")' style='height: 60px; display: flex; flex-direction: column; gap: 8px; justify-content: center;'>
                    <i class='fas fa-newspaper'></i>
                    –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å
                </button>
                
                <button class='btn btn-info btn-lg' onclick='openMegaModal("megaSlideModal", null, "slide")' style='height: 60px; display: flex; flex-direction: column; gap: 8px; justify-content: center;'>
                    <i class='fas fa-images'></i>
                    –î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥
                </button>
                
                <button class='btn btn-warning btn-lg' onclick='openMegaModal("ultraSettingsModal")' style='height: 60px; display: flex; flex-direction: column; gap: 8px; justify-content: center;'>
                    <i class='fas fa-cog'></i>
                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
            </div>
        </div>
    </div>
    <?php
}

// === –°–£–ü–ï–† –ú–ï–ì–ê –ê–ù–ê–õ–ò–¢–ò–ö–ê (–ò–°–ü–†–ê–í–õ–ï–ù–û) ===
function renderSuperAnalyticsSection($data) {
    ?>
    <!-- –°–£–ü–ï–† KPI –º–µ—Ç—Ä–∏–∫–∏ -->
    <div class='stats-grid' style='margin-bottom: 40px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-header'>
                <div class='stat-icon'>
                    <i class='fas fa-chart-line'></i>
                </div>
            </div>
            <div class='stat-value' id='totalOrders'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            <div class='stat-label'>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                <span id='ordersGrowth'>+12% –∑–∞ –º–µ—Å—è—Ü</span>
            </div>
        </div>

        <div class='stat-card stat-success'>
            <div class='stat-header'>
                <div class='stat-icon stat-success'>
                    <i class='fas fa-ruble-sign'></i>
                </div>
            </div>
            <div class='stat-value' id='totalRevenue'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            <div class='stat-label'>–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                <span id='revenueGrowth'>+25% –∑–∞ –º–µ—Å—è—Ü</span>
            </div>
        </div>

        <div class='stat-card stat-warning'>
            <div class='stat-header'>
                <div class='stat-icon stat-warning'>
                    <i class='fas fa-shopping-cart'></i>
                </div>
            </div>
            <div class='stat-value' id='avgOrderValue'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                <span id='avgOrderGrowth'>+8% –∑–∞ –º–µ—Å—è—Ü</span>
            </div>
        </div>

        <div class='stat-card stat-danger'>
            <div class='stat-header'>
                <div class='stat-icon stat-danger'>
                    <i class='fas fa-percentage'></i>
                </div>
            </div>
            <div class='stat-value' id='conversionRate'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            <div class='stat-label'>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                <span id='conversionGrowth'>+3.2% –∑–∞ –º–µ—Å—è—Ü</span>
            </div>
        </div>
    </div>

    <!-- –°–£–ü–ï–† –ì—Ä–∞—Ñ–∏–∫–∏ -->
    <div class='analytics-grid'>
        <!-- –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ -->
        <div class='analytics-card'>
            <div class='analytics-card-header'>
                <div class='analytics-card-title'>
                    <i class='fas fa-chart-area'></i>
                    –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞ 30 –¥–Ω–µ–π
                </div>
                <button class='btn btn-sm' style='background: rgba(255,255,255,0.2); color: white; border: none;' onclick='loadSuperAnalytics()'>
                    <i class='fas fa-sync-alt'></i>
                    –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
            <div class='analytics-card-body'>
                <div class='chart-container chart-big'>
                    <canvas id='salesChart'></canvas>
                </div>
            </div>
        </div>

        <!-- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º -->
        <div class='analytics-card'>
            <div class='analytics-card-header'>
                <div class='analytics-card-title'>
                    <i class='fas fa-clock'></i>
                    –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º
                </div>
            </div>
            <div class='analytics-card-body'>
                <div class='chart-container'>
                    <canvas id='hourlyChart'></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ -->
    <div class='analytics-grid'>
        <!-- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º -->
        <div class='analytics-card'>
            <div class='analytics-card-header'>
                <div class='analytics-card-title'>
                    <i class='fas fa-chart-pie'></i>
                    –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                </div>
            </div>
            <div class='analytics-card-body'>
                <div class='chart-container'>
                    <canvas id='categoriesChart'></canvas>
                </div>
            </div>
        </div>

        <!-- –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂ -->
        <div class='analytics-card'>
            <div class='analytics-card-header'>
                <div class='analytics-card-title'>
                    <i class='fas fa-filter'></i>
                    –í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
                </div>
            </div>
            <div class='analytics-card-body'>
                <div class='chart-container'>
                    <canvas id='funnelChart'></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        document.addEventListener('DOMContentLoaded', function() {
            if (window.location.search.includes('section=analytics')) {
                setTimeout(() => {
                    loadSuperAnalytics().then(data => {
                        if (data && data.totals) {
                            updateKPIStats(data.totals);
                        }
                    });
                }, 500);
            }
        });

        function updateKPIStats(totals) {
            document.getElementById('totalOrders').textContent = totals.total_orders.toLocaleString();
            document.getElementById('totalRevenue').textContent = totals.total_revenue.toLocaleString() + ' ‚ÇΩ';
            document.getElementById('avgOrderValue').textContent = Math.round(totals.avg_order_value).toLocaleString() + ' ‚ÇΩ';
            document.getElementById('conversionRate').textContent = totals.conversion_rate + '%';
        }
    </script>
    <?php
}

// === –ú–ï–ì–ê –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò (–ù–ï –¢–†–û–ì–ê–ï–ú - –û–†–ò–ì–ò–ù–ê–õ) ===
function renderMegaProductsSection($data) {
    $products = $data['products'];
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['active'] ?></div>
            <div class='stat-label'>–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-value'><?= $stats['featured'] ?></div>
            <div class='stat-label'>–ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö</div>
        </div>
        <div class='stat-card stat-danger'>
            <div class='stat-value'><?= $stats['low_stock'] ?></div>
            <div class='stat-label'>–ú–∞–ª–æ —Ç–æ–≤–∞—Ä–∞</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <div style='display: flex; gap: 16px; align-items: center;'>
            <button class='btn btn-success btn-lg' onclick='openMegaModal("megaProductModal", null, "product")'>
                <i class='fas fa-plus'></i>
                –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
            </button>
        </div>

        <!-- –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã -->
        <div style='display: flex; gap: 12px;'>
            <input type='text' placeholder='–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...' class='form-input' style='width: 250px;' onkeyup='searchProducts(this.value)'>
            <select class='form-select' onchange='filterByCategory(this.value)'>
                <option value=''>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                <?php foreach ($categories as $category): ?>
                    <option value='<?= $category['id'] ?>'><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                <?php endforeach; ?>
            </select>
        </div>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class='content-card'>
        <div class='table-container'>
            <table class='table' id='productsTable'>
                <thead>
                    <tr>
                        <th style='width: 40px;'>
                            <input type='checkbox' onchange='toggleAllProducts(this.checked)'>
                        </th>
                        <th style='width: 60px;'>–§–æ—Ç–æ</th>
                        <th>–¢–æ–≤–∞—Ä</th>
                        <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                        <th>–¶–µ–Ω–∞</th>
                        <th>–û—Å—Ç–∞—Ç–æ–∫</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th style='width: 240px;'>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($products as $product): ?>
                        <tr data-category='<?= $product['category_id'] ?>' data-name='<?= strtolower($product['name']) ?>' data-id='<?= $product['id'] ?>'>
                            <td>
                                <input type='checkbox' class='product-checkbox' value='<?= $product['id'] ?>'>
                            </td>
                            <td>
                                <div style='width: 50px; height: 50px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-tertiary); display: flex; align-items: center; justify-content: center;'>
                                    <?php if (!empty($product['images'])): ?>
                                        <img src='<?= htmlspecialchars($product['images'][0]) ?>' alt='<?= htmlspecialchars($product['name']) ?>' style='width: 100%; height: 100%; object-fit: cover;'>
                                    <?php else: ?>
                                        <i class='fas fa-image' style='color: var(--text-muted);'></i>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600; margin-bottom: 4px;'><?= htmlspecialchars(mb_substr($product['name'], 0, 50)) ?><?= mb_strlen($product['name']) > 50 ? '...' : '' ?></div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    –ê—Ä—Ç–∏–∫—É–ª: <?= $product['sku'] ?> | ID: <?= $product['id'] ?>
                                </div>
                                <div style='margin-top: 4px;'>
                                    <?php if ($product['is_featured']): ?>
                                        <span class='status-badge' style='background: gold; color: white;'>üî• –•–ò–¢</span>
                                    <?php endif; ?>
                                    <?php if ($product['is_new']): ?>
                                        <span class='status-badge status-new'>‚ú® –ù–û–í–ò–ù–ö–ê</span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <span class='status-badge' style='background: rgba(102, 126, 234, 0.1); color: var(--primary-color);'>
                                    <?= htmlspecialchars($product['category']) ?>
                                </span>
                            </td>
                            <td>
                                <div style='font-weight: 600; color: var(--success-color);'><?= number_format($product['price'], 0, '', ' ') ?> ‚ÇΩ</div>
                                <?php if ($product['old_price']): ?>
                                    <div style='font-size: 11px; color: var(--text-muted); text-decoration: line-through;'>
                                        <?= number_format($product['old_price'], 0, '', ' ') ?> ‚ÇΩ
                                    </div>
                                <?php endif; ?>
                            </td>
                            <td>
                                <span class='status-badge <?= $product['stock'] <= 0 ? 'status-cancelled' : ($product['stock'] <= 5 ? 'status-processing' : 'status-completed') ?>'>
                                    <?= $product['stock'] ?> —à—Ç
                                </span>
                            </td>
                            <td>
                                <label style='display: flex; align-items: center; cursor: pointer;'>
                                    <input type='checkbox' <?= $product['is_active'] ? 'checked' : '' ?>
                                           onchange='toggleProductStatus(<?= $product['id'] ?>, this.checked)'
                                           style='margin-right: 8px;'>
                                    <span class='status-badge <?= $product['is_active'] ? 'status-active' : 'status-inactive' ?>'>
                                        <?= $product['is_active'] ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–°–∫—Ä—ã—Ç' ?>
                                    </span>
                                </label>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaProductModal", <?= $product['id'] ?>, "product")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button class='btn btn-success btn-sm' onclick='duplicateProduct(<?= $product['id'] ?>)' title='–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-copy'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='window.open("index.php?page=product&id=<?= $product['id'] ?>", "_blank")' title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <button class='btn btn-danger btn-sm' onclick='deleteProduct(<?= $product['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                        <i class='fas fa-trash'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function searchProducts(query) {
            const rows = document.querySelectorAll('#productsTable tbody tr');
            const searchTerm = query.toLowerCase();

            rows.forEach(row => {
                const name = row.dataset.name;
                const visible = name.includes(searchTerm);
                row.style.display = visible ? '' : 'none';
            });
        }

        function filterByCategory(categoryId) {
            const rows = document.querySelectorAll('#productsTable tbody tr');

            rows.forEach(row => {
                const rowCategory = row.dataset.category;
                const visible = !categoryId || rowCategory === categoryId;
                row.style.display = visible ? '' : 'none';
            });
        }
    </script>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô ===
function renderMegaCategoriesSection($data) {
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div class='stats-grid' style='grid-template-columns: repeat(2, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['active'] ?></div>
            <div class='stat-label'>–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <button class='btn btn-success btn-lg' onclick='openMegaModal("megaCategoryModal", null, "category")'>
            <i class='fas fa-plus'></i>
            –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        </button>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-tags'></i>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            </h3>
        </div>
        <div class='table-container'>
            <table class='table'>
                <thead>
                    <tr>
                        <th>–ò–∫–æ–Ω–∫–∞</th>
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                        <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                        <th>–ü–æ—Ä—è–¥–æ–∫</th>
                        <th>–¢–æ–≤–∞—Ä–æ–≤</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php 
                    $products = getProducts();
                    foreach ($categories as $category): 
                        $productsCount = count(array_filter($products, fn($p) => $p['category_id'] == $category['id']));
                    ?>
                        <tr>
                            <td style='font-size: 32px; text-align: center; width: 60px;'>
                                <?= $category['icon'] ?>
                            </td>
                            <td>
                                <div style='font-weight: 600; font-size: 16px;'><?= htmlspecialchars($category['name']) ?></div>
                                <div style='font-size: 12px; color: var(--text-muted);'>ID: <?= $category['id'] ?></div>
                            </td>
                            <td>
                                <div style='max-width: 300px;'>
                                    <?= htmlspecialchars($category['description']) ?>
                                </div>
                            </td>
                            <td>
                                <span style='font-weight: 600; color: var(--primary-color);'>
                                    <?= $category['sort_order'] ?>
                                </span>
                            </td>
                            <td>
                                <span class='status-badge <?= $productsCount > 0 ? 'status-active' : 'status-inactive' ?>'>
                                    <?= $productsCount ?> —Ç–æ–≤–∞—Ä–æ–≤
                                </span>
                            </td>
                            <td>
                                <span class='status-badge <?= $category['active'] ? 'status-active' : 'status-inactive' ?>'>
                                    <?= $category['active'] ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–°–∫—Ä—ã—Ç–∞' ?>
                                </span>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaCategoryModal", <?= $category['id'] ?>, "category")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='window.open("index.php?page=catalog&category=<?= $category['id'] ?>", "_blank")' title='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <?php if ($productsCount == 0): ?>
                                        <button class='btn btn-danger btn-sm' onclick='deleteCategory(<?= $category['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                            <i class='fas fa-trash'></i>
                                        </button>
                                    <?php else: ?>
                                        <button class='btn btn-danger btn-sm' disabled title='–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å —Ç–æ–≤–∞—Ä–∞–º–∏'>
                                            <i class='fas fa-lock'></i>
                                        </button>
                                    <?php endif; ?>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –ó–ê–ö–ê–ó–û–í ===
function renderMegaOrdersSection($data) {
    $orders = $data['orders'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='stats-grid' style='margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
        </div>
        <div class='stat-card stat-info'>
            <div class='stat-value'><?= $stats['new'] ?></div>
            <div class='stat-label'>–ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-value'><?= $stats['processing'] ?></div>
            <div class='stat-label'>–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['completed'] ?></div>
            <div class='stat-label'>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='content-card' style='margin-bottom: 24px;'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-tools'></i>
                –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–∫–∞–∑–∞–º–∏
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: flex; gap: : 12px; align-items: center; flex-wrap: wrap;'>
                <span>–í—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</span>
                <select class='form-select' id='bulkOrderStatus' style='width: auto;'>
                    <option value=''>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å</option>
                    <option value='processing'>–í –æ–±—Ä–∞–±–æ—Ç–∫—É</option>
                    <option value='shipped'>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                    <option value='delivered'>–î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                    <option value='cancelled'>–û—Ç–º–µ–Ω–∏—Ç—å</option>
                </select>
                <button class='btn btn-primary btn-sm' onclick='bulkOrderStatusUpdate()'>
                    <i class='fas fa-check'></i> –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                </button>
            </div>
        </div>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-shopping-bag'></i>
                –í—Å–µ –∑–∞–∫–∞–∑—ã
            </h3>
            <div style='display: flex; gap: 12px;'>
                <select class='form-select' onchange='filterOrdersByStatus(this.value)'>
                    <option value=''>–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                    <option value='new'>–ù–æ–≤—ã–µ</option>
                    <option value='processing'>–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
                    <option value='shipped'>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã</option>
                    <option value='delivered'>–î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã</option>
                    <option value='cancelled'>–û—Ç–º–µ–Ω–µ–Ω—ã</option>
                </select>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
        <div class='table-container'>
            <table class='table' id='ordersTable'>
                <thead>
                    <tr>
                        <th style='width: 40px;'>
                            <input type='checkbox' onchange='toggleAllOrders(this.checked)'>
                        </th>
                        <th>–ó–∞–∫–∞–∑</th>
                        <th>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($orders as $order): ?>
                        <tr data-status='<?= $order['status'] ?>'>
                            <td>
                                <input type='checkbox' class='order-checkbox' value='<?= $order['id'] ?>'>
                            </td>
                            <td>
                                <div style='font-weight: 600;'><?= $order['order_number'] ?></div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    <?= $order['items_count'] ?> —Ç–æ–≤–∞—Ä–æ–≤ | <?= $order['payment_method'] === 'card' ? '–ö–∞—Ä—Ç–æ–π' : '–ù–∞–ª–∏—á–Ω—ã–º–∏' ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600;'><?= htmlspecialchars($order['customer_name']) ?></div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    <?= htmlspecialchars($order['customer_phone']) ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600; color: var(--success-color);'>
                                    <?= number_format($order['total_amount'], 0, '', ' ') ?> ‚ÇΩ
                                </div>
                            </td>
                            <td>
                                <span class='status-badge status-<?= $order['status'] === 'new' ? 'new' : ($order['status'] === 'processing' ? 'processing' : ($order['status'] === 'delivered' ? 'completed' : 'cancelled')) ?>'>
                                    <?= $order['status_label'] ?>
                                </span>
                            </td>
                            <td>
                                <div><?= formatDateRussian($order['created_at'], 'short') ?></div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    <?= $order['days_since_created'] ?> –¥–Ω–µ–π –Ω–∞–∑–∞–¥
                                </div>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <?php if (in_array($order['status'], ['new', 'processing'])): ?>
                                        <select onchange='updateOrderStatus(<?= $order['id'] ?>, this.value)' style='padding: 4px; border-radius: 4px; border: 1px solid var(--border-color); font-size: 12px;'>
                                            <option value=''>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å</option>
                                            <option value='processing' <?= $order['status'] === 'processing' ? 'selected' : '' ?>>–í –æ–±—Ä–∞–±–æ—Ç–∫—É</option>
                                            <option value='shipped'>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</option>
                                            <option value='delivered'>–î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                                            <option value='cancelled'>–û—Ç–º–µ–Ω–∏—Ç—å</option>
                                        </select>
                                    <?php endif; ?>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function filterOrdersByStatus(status) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');

            rows.forEach(row => {
                const rowStatus = row.dataset.status;
                const visible = !status || rowStatus === status;
                row.style.display = visible ? '' : 'none';
            });
        }

        function bulkOrderStatusUpdate() {
            const status = document.getElementById('bulkOrderStatus').value;
            if (!status) {
                showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è', 'warning');
                return;
            }
            bulkOrderAction('update_status', {status: status});
        }
    </script>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –û–¢–ó–´–í–û–í ===
function renderMegaReviewsSection($data) {
    $reviews = $data['reviews'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ -->
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['approved'] ?></div>
            <div class='stat-label'>–û–¥–æ–±—Ä–µ–Ω–æ</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-value'><?= $stats['pending'] ?></div>
            <div class='stat-label'>–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</div>
        </div>
        <div class='stat-card stat-info'>
            <div class='stat-value'><?= number_format($stats['average_rating'], 1) ?></div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <button class='btn btn-success btn-lg' onclick='openMegaModal("megaReviewModal", null, "review")'>
            <i class='fas fa-plus'></i>
            –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
        </button>
    </div>

    <!-- –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏ -->
    <div class='content-card' style='margin-bottom: 24px;'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-tools'></i>
                –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: flex; gap: 12px; align-items: center; flex-wrap: wrap;'>
                <span>–í—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã:</span>
                <button class='btn btn-success btn-sm' onclick='bulkReviewAction("approve")'>
                    <i class='fas fa-check'></i> –û–¥–æ–±—Ä–∏—Ç—å
                </button>
                <button class='btn btn-warning btn-sm' onclick='bulkReviewAction("reject")'>
                    <i class='fas fa-times'></i> –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </button>
                <button class='btn btn-info btn-sm' onclick='bulkReviewAction("feature")'>
                    <i class='fas fa-star'></i> –í —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ
                </button>
                <button class='btn btn-danger btn-sm' onclick='bulkReviewAction("delete")'>
                    <i class='fas fa-trash'></i> –£–¥–∞–ª–∏—Ç—å
                </button>
            </div>
        </div>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-star'></i>
                –í—Å–µ –æ—Ç–∑—ã–≤—ã
            </h3>
            <div style='display: flex; gap: 12px;'>
                <select class='form-select' onchange='filterReviewsByStatus(this.value)'>
                    <option value=''>–í—Å–µ –æ—Ç–∑—ã–≤—ã</option>
                    <option value='approved'>–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ</option>
                    <option value='pending'>–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</option>
                    <option value='featured'>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ</option>
                </select>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
        <div class='table-container'>
            <table class='table' id='reviewsTable'>
                <thead>
                    <tr>
                        <th style='width: 40px;'>
                            <input type='checkbox' onchange='toggleAllReviews(this.checked)'>
                        </th>
                        <th>–¢–æ–≤–∞—Ä</th>
                        <th>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</th>
                        <th>–†–µ–π—Ç–∏–Ω–≥</th>
                        <th>–û—Ç–∑—ã–≤</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($reviews as $review): ?>
                        <tr data-status='<?= $review['is_approved'] ? 'approved' : 'pending' ?>' data-featured='<?= $review['is_featured'] ? 'yes' : 'no' ?>'>
                            <td>
                                <input type='checkbox' class='review-checkbox' value='<?= $review['id'] ?>'>
                            </td>
                            <td>
                                <div style='font-weight: 600; max-width: 200px;'>
                                    <?= htmlspecialchars(mb_substr($review['product_name'], 0, 40)) ?>
                                    <?= mb_strlen($review['product_name']) > 40 ? '...' : '' ?>
                                </div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    ID —Ç–æ–≤–∞—Ä–∞: <?= $review['product_id'] ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600;'><?= htmlspecialchars($review['customer_name']) ?></div>
                                <?php if ($review['customer_email']): ?>
                                    <div style='font-size: 12px; color: var(--text-muted);'>
                                        <?= htmlspecialchars($review['customer_email']) ?>
                                    </div>
                                <?php endif; ?>
                            </td>
                            <td>
                                <div style='font-size: 20px; color: gold;'>
                                    <?php for ($i = 1; $i <= 5; $i++): ?>
                                        <?= $i <= $review['rating'] ? '‚≠ê' : '‚òÜ' ?>
                                    <?php endfor; ?>
                                </div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    <?= $review['rating'] ?>/5
                                </div>
                            </td>
                            <td>
                                <div style='max-width: 250px;'>
                                    <div style='font-weight: 600; margin-bottom: 4px;'>
                                        <?= htmlspecialchars($review['title']) ?>
                                    </div>
                                    <div style='font-size: 13px; color: var(--text-secondary);'>
                                        <?= htmlspecialchars(mb_substr($review['text'], 0, 100)) ?>
                                        <?= mb_strlen($review['text']) > 100 ? '...' : '' ?>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div style='display: flex; flex-direction: column; gap: 4px;'>
                                    <span class='status-badge <?= $review['is_approved'] ? 'status-active' : 'status-inactive' ?>'>
                                        <?= $review['is_approved'] ? '–û–¥–æ–±—Ä–µ–Ω' : '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏' ?>
                                    </span>
                                    <?php if ($review['is_featured']): ?>
                                        <span class='status-badge' style='background: gold; color: white;'>
                                            ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π
                                        </span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div><?= formatDateRussian($review['created_at'], 'short') ?></div>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaReviewModal", <?= $review['id'] ?>, "review")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <?php if (!$review['is_approved']): ?>
                                        <button class='btn btn-success btn-sm' onclick='toggleReviewStatus(<?= $review['id'] ?>, true)' title='–û–¥–æ–±—Ä–∏—Ç—å'>
                                            <i class='fas fa-check'></i>
                                        </button>
                                    <?php endif; ?>
                                    <button class='btn btn-danger btn-sm' onclick='deleteReview(<?= $review['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                        <i class='fas fa-trash'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function filterReviewsByStatus(filter) {
            const rows = document.querySelectorAll('#reviewsTable tbody tr');

            rows.forEach(row => {
                const status = row.dataset.status;
                const featured = row.dataset.featured;
                let visible = true;

                switch(filter) {
                    case 'approved':
                        visible = status === 'approved';
                        break;
                    case 'pending':
                        visible = status === 'pending';
                        break;
                    case 'featured':
                        visible = featured === 'yes';
                        break;
                }

                row.style.display = visible ? '' : 'none';
            });
        }
    </script>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –ù–û–í–û–°–¢–ï–ô ===
function renderMegaNewsSection($data) {
    $news = $data['news'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π -->
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['published'] ?></div>
            <div class='stat-label'>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-value'><?= $stats['drafts'] ?></div>
            <div class='stat-label'>–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</div>
        </div>
        <div class='stat-card stat-info'>
            <div class='stat-value'><?= $stats['featured'] ?></div>
            <div class='stat-label'>–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <button class='btn btn-success btn-lg' onclick='openMegaModal("megaNewsModal", null, "news")'>
            <i class='fas fa-plus'></i>
            üì∞ –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
        </button>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–µ–π -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-newspaper'></i>
                –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
            </h3>
            <div style='display: flex; gap: 12px;'>
                <select class='form-select' onchange='filterNewsByStatus(this.value)'>
                    <option value=''>–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏</option>
                    <option value='published'>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</option>
                    <option value='drafts'>–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</option>
                    <option value='featured'>–í–∞–∂–Ω—ã–µ</option>
                </select>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
        <div class='table-container'>
            <table class='table' id='newsTable'>
                <thead>
                    <tr>
                        <th style='width: 60px;'>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</th>
                        <th>–ó–∞–≥–æ–ª–æ–≤–æ–∫</th>
                        <th>–ê–Ω–æ–Ω—Å</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($news as $newsItem): ?>
                        <tr data-status='<?= $newsItem['is_published'] ? 'published' : 'drafts' ?>' data-featured='<?= $newsItem['is_featured'] ? 'yes' : 'no' ?>'>
                            <td>
                                <div style='width: 50px; height: 50px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-tertiary); display: flex; align-items: center; justify-content: center;'>
                                    <?php if (!empty($newsItem['image'])): ?>
                                        <img src='<?= htmlspecialchars($newsItem['image']) ?>' alt='<?= htmlspecialchars($newsItem['title']) ?>' style='width: 100%; height: 100%; object-fit: cover;'>
                                    <?php else: ?>
                                        <i class='fas fa-newspaper' style='color: var(--text-muted);'></i>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600; max-width: 250px;'>
                                    <?= htmlspecialchars(mb_substr($newsItem['title'], 0, 60)) ?>
                                    <?= mb_strlen($newsItem['title']) > 60 ? '...' : '' ?>
                                </div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    ID: <?= $newsItem['id'] ?> | –ê–≤—Ç–æ—Ä: <?= $newsItem['author'] ?? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' ?>
                                </div>
                            </td>
                            <td>
                                <div style='max-width: 200px; font-size: 13px; color: var(--text-secondary);'>
                                    <?= htmlspecialchars(mb_substr($newsItem['excerpt'], 0, 80)) ?>
                                    <?= mb_strlen($newsItem['excerpt']) > 80 ? '...' : '' ?>
                                </div>
                            </td>
                            <td>
                                <div style='display: flex; flex-direction: column; gap: 4px;'>
                                    <span class='status-badge <?= $newsItem['is_published'] ? 'status-active' : 'status-inactive' ?>'>
                                        <?= $newsItem['is_published'] ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫' ?>
                                    </span>
                                    <?php if ($newsItem['is_featured']): ?>
                                        <span class='status-badge' style='background: var(--warning-color); color: white;'>
                                            ‚≠ê –í–∞–∂–Ω–∞—è
                                        </span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <span style='font-weight: 600; color: var(--primary-color);'>
                                    <?= number_format($newsItem['views'] ?? 0) ?>
                                </span>
                            </td>
                            <td>
                                <div><?= formatDateRussian($newsItem['created_at'], 'short') ?></div>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaNewsModal", <?= $newsItem['id'] ?>, "news")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='window.open("?page=news&id=<?= $newsItem['id'] ?>", "_blank")' title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <button class='btn btn-danger btn-sm' onclick='deleteNews(<?= $newsItem['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                        <i class='fas fa-trash'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function filterNewsByStatus(filter) {
            const rows = document.querySelectorAll('#newsTable tbody tr');
            rows.forEach(row => {
                const status = row.dataset.status;
                const featured = row.dataset.featured;
                let visible = true;

                switch(filter) {
                    case 'published':
                        visible = status === 'published';
                        break;
                    case 'drafts':
                        visible = status === 'drafts';
                        break;
                    case 'featured':
                        visible = featured === 'yes';
                        break;
                }

                row.style.display = visible ? '' : 'none';
            });
        }
    </script>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –°–¢–†–ê–ù–ò–¶ ===
function renderMegaPagesSection($data) {
    $pages = $data['pages'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü -->
    <div class='stats-grid' style='grid-template-columns: repeat(3, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['published'] ?></div>
            <div class='stat-label'>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</div>
        </div>
        <div class='stat-card stat-info'>
            <div class='stat-value'><?= $stats['in_menu'] ?></div>
            <div class='stat-label'>–í –º–µ–Ω—é</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <button class='btn btn-success btn-lg' onclick='openMegaModal("megaPageModal", null, "page")'>
            <i class='fas fa-plus'></i>
            üìÑ –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
        </button>
    </div>

    <!-- –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-file-alt'></i>
                –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            </h3>
            <div style='display: flex; gap: 12px;'>
                <select class='form-select' onchange='filterPagesByStatus(this.value)'>
                    <option value=''>–í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</option>
                    <option value='published'>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</option>
                    <option value='drafts'>–ß–µ—Ä–Ω–æ–≤–∏–∫–∏</option>
                    <option value='in_menu'>–í –º–µ–Ω—é</option>
                </select>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
        <div class='table-container'>
            <table class='table' id='pagesTable'>
                <thead>
                    <tr>
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                        <th>–®–∞–±–ª–æ–Ω</th>
                        <th>–ü–æ—Ä—è–¥–æ–∫ –≤ –º–µ–Ω—é</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($pages as $page): ?>
                        <tr data-status='<?= $page['is_published'] ? 'published' : 'drafts' ?>' data-in-menu='<?= $page['show_in_menu'] ? 'yes' : 'no' ?>'>
                            <td>
                                <div style='font-weight: 600; font-size: 16px;'>
                                    <?= htmlspecialchars($page['title']) ?>
                                </div>
                                <div style='font-size: 12px; color: var(--text-muted);'>
                                    Slug: <?= htmlspecialchars($page['slug']) ?> | ID: <?= $page['id'] ?>
                                </div>
                            </td>
                            <td>
                                <span class='status-badge' style='background: rgba(102, 126, 234, 0.1); color: var(--primary-color);'>
                                    <?= ucfirst($page['template']) ?>
                                </span>
                            </td>
                            <td>
                                <?php if ($page['show_in_menu']): ?>
                                    <span style='font-weight: 600; color: var(--primary-color);'>
                                        <?= $page['menu_order'] ?>
                                    </span>
                                <?php else: ?>
                                    <span style='color: var(--text-muted);'>–ù–µ –≤ –º–µ–Ω—é</span>
                                <?php endif; ?>
                            </td>
                            <td>
                                <div style='display: flex; flex-direction: column; gap: 4px;'>
                                    <span class='status-badge <?= $page['is_published'] ? 'status-active' : 'status-inactive' ?>'>
                                        <?= $page['is_published'] ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫' ?>
                                    </span>
                                    <?php if ($page['show_in_menu']): ?>
                                        <span class='status-badge status-new'>–í –º–µ–Ω—é</span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div><?= formatDateRussian($page['created_at'], 'short') ?></div>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaPageModal", <?= $page['id'] ?>, "page")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='window.open("?page=custom&slug=<?= $page['slug'] ?>", "_blank")' title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <button class='btn btn-danger btn-sm' onclick='deletePage(<?= $page['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                        <i class='fas fa-trash'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function filterPagesByStatus(filter) {
            const rows = document.querySelectorAll('#pagesTable tbody tr');
            rows.forEach(row => {
                const status = row.dataset.status;
                const inMenu = row.dataset.inMenu;
                let visible = true;

                switch(filter) {
                    case 'published':
                        visible = status === 'published';
                        break;
                    case 'drafts':
                        visible = status === 'drafts';
                        break;
                    case 'in_menu':
                        visible = inMenu === 'yes';
                        break;
                }

                row.style.display = visible ? '' : 'none';
            });
        }
    </script>
    <?php
}

// === –ù–û–í–ê–Ø –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –°–õ–ê–ô–î–ï–†–ê ===
function renderMegaSliderSection($data) {
    $slides = $data['slides'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª–∞–π–¥–µ—Ä–∞ -->
    <div class='stats-grid' style='grid-template-columns: repeat(2, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= $stats['active'] ?></div>
            <div class='stat-label'>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª–∞–π–¥–æ–≤</div>
        </div>
    </div>

    <!-- –ú–ï–ì–ê –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ -->
    <div style='display: flex; justify-content: space-between; align-items: center; margin-bottom: 32px;'>
        <button class='btn btn-success btn-lg' onclick='openMegaModal("megaSlideModal", null, "slide")'>
            <i class='fas fa-plus'></i>
            üéöÔ∏è –ú–ï–ì–ê –î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥
        </button>
    </div>

    <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞–º–∏ -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-images'></i>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞–º–∏
            </h3>
            <div style='display: flex; gap: 12px;'>
                <select class='form-select' onchange='filterSlidesByStatus(this.value)'>
                    <option value=''>–í—Å–µ —Å–ª–∞–π–¥—ã</option>
                    <option value='active'>–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                    <option value='inactive'>–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
                </select>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
        <div style='padding: 28px;'>
            <div id='sortableSlides' style='display: grid; gap: 20px;'>
                <?php foreach ($slides as $slide): ?>
                    <div class='slide-item' data-id='<?= $slide['id'] ?>' data-status='<?= $slide['is_active'] ? 'active' : 'inactive' ?>' 
                         style='display: flex; align-items: center; gap: 20px; padding: 20px; background: var(--bg-secondary); border-radius: var(--border-radius-lg); border: 1px solid var(--border-color); cursor: move; transition: var(--transition);'>

                        <!-- –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                        <div style='width: 120px; height: 80px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-tertiary); display: flex; align-items: center; justify-content: center; flex-shrink: 0;'>
                            <?php if (!empty($slide['image'])): ?>
                                <img src='<?= htmlspecialchars($slide['image']) ?>' alt='<?= htmlspecialchars($slide['title']) ?>' 
                                     style='width: 100%; height: 100%; object-fit: cover;'>
                            <?php else: ?>
                                <i class='fas fa-image' style='color: var(--text-muted); font-size: 24px;'></i>
                            <?php endif; ?>
                        </div>

                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–∞–π–¥–µ -->
                        <div style='flex: 1; min-width: 0;'>
                            <div style='display: flex; align-items: center; gap: 12px; margin-bottom: 8px;'>
                                <h4 style='margin: 0; font-size: 18px;'>
                                    <?= htmlspecialchars($slide['title']) ?>
                                </h4>
                                <span class='status-badge <?= $slide['is_active'] ? 'status-active' : 'status-inactive' ?>'>
                                    <?= $slide['is_active'] ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–°–∫—Ä—ã—Ç' ?>
                                </span>
                                <span style='background: var(--primary-color); color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px;'>
                                    #{<?= $slide['sort_order'] ?>}
                                </span>
                            </div>

                            <?php if (!empty($slide['subtitle'])): ?>
                                <div style='color: var(--text-secondary); margin-bottom: 8px;'>
                                    <?= htmlspecialchars($slide['subtitle']) ?>
                                </div>
                            <?php endif; ?>

                            <?php if (!empty($slide['description'])): ?>
                                <div style='color: var(--text-muted); font-size: 14px; margin-bottom: 12px;'>
                                    <?= htmlspecialchars(mb_substr($slide['description'], 0, 100)) ?>
                                    <?= mb_strlen($slide['description']) > 100 ? '...' : '' ?>
                                </div>
                            <?php endif; ?>

                            <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–∞–π–¥–∞ -->
                            <div style='display: flex; gap: 16px; font-size: 12px; color: var(--text-muted);'>
                                <span><i class='fas fa-palette'></i> –ü–æ–∑–∏—Ü–∏—è: <?= ucfirst($slide['text_position']) ?></span>
                                <?php if (!empty($slide['link_url'])): ?>
                                    <span><i class='fas fa-link'></i> –ï—Å—Ç—å —Å—Å—ã–ª–∫–∞</span>
                                <?php endif; ?>
                                <?php if (!empty($slide['show_from']) || !empty($slide['show_until'])): ?>
                                    <span><i class='fas fa-clock'></i> –ü–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é</span>
                                <?php endif; ?>
                            </div>
                        </div>

                        <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                        <div style='display: flex; gap: 8px; flex-shrink: 0;'>
                            <button class='btn btn-primary btn-sm' onclick='openMegaModal("megaSlideModal", <?= $slide['id'] ?>, "slide")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                <i class='fas fa-edit'></i>
                            </button>
                            <button class='btn btn-info btn-sm' onclick='previewSlide(<?= $slide['id'] ?>)' title='–ü—Ä–µ–≤—å—é'>
                                <i class='fas fa-eye'></i>
                            </button>
                            <button class='btn btn-success btn-sm' onclick='duplicateSlide(<?= $slide['id'] ?>)' title='–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å'>
                                <i class='fas fa-copy'></i>
                            </button>
                            <button class='btn btn-danger btn-sm' onclick='deleteSlide(<?= $slide['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                <i class='fas fa-trash'></i>
                            </button>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>

            <?php if (empty($slides)): ?>
                <div class='empty-state' style='text-align: center; padding: 60px 20px;'>
                    <div style='font-size: 4em; margin-bottom: 20px; opacity: 0.6;'>üñºÔ∏è</div>
                    <h3>–ù–µ—Ç —Å–ª–∞–π–¥–æ–≤</h3>
                    <p style='margin: 20px 0; color: var(--text-secondary);'>
                        –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞
                    </p>
                    <button class='btn btn-success' onclick='openMegaModal("megaSlideModal", null, "slide")'>
                        <i class='fas fa-plus'></i> –î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥
                    </button>
                </div>
            <?php endif; ?>
        </div>
    </div>

    <script>
        function filterSlidesByStatus(filter) {
            const slides = document.querySelectorAll('.slide-item');
            slides.forEach(slide => {
                const status = slide.dataset.status;
                const visible = !filter || status === filter;
                slide.style.display = visible ? 'flex' : 'none';
            });
        }

        function previewSlide(slideId) {
            showNotification('–§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–≤—å—é –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
        }

        function duplicateSlide(slideId) {
            if (confirm('–°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é —Å–ª–∞–π–¥–∞?')) {
                showNotification('–§—É–Ω–∫—Ü–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
            }
        }
    </script>
    <?php
}

// === –£–õ–¨–¢–†–ê –ú–ï–ì–ê –°–ï–ö–¶–ò–Ø –ù–ê–°–¢–†–û–ï–ö ===
function renderUltraSettingsSection($data) {
    $settings = $data['settings'];
    ?>
    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
    <div class='stats-grid' style='margin-bottom: 40px;'>
        <div class='stat-card stat-primary' style='cursor: pointer;' onclick='openMegaModal("ultraSettingsModal")'>
            <div class='stat-header'>
                <div class='stat-icon'>
                    <i class='fas fa-cogs'></i>
                </div>
            </div>
            <div class='stat-value'>‚öôÔ∏è</div>
            <div class='stat-label'>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</div>
            <div class='stat-change neutral'>
                <i class='fas fa-arrow-right'></i>
                –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
            </div>
        </div>

        <div class='stat-card stat-success' style='cursor: pointer;' onclick='backupSettings()'>
            <div class='stat-header'>
                <div class='stat-icon stat-success'>
                    <i class='fas fa-download'></i>
                </div>
            </div>
            <div class='stat-value'>üíæ</div>
            <div class='stat-label'>–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è</div>
            <div class='stat-change positive'>
                <i class='fas fa-download'></i>
                –°–∫–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </div>
        </div>

        <div class='stat-card stat-info' style='cursor: pointer;' onclick='showSystemInfo()'>
            <div class='stat-header'>
                <div class='stat-icon stat-info'>
                    <i class='fas fa-info-circle'></i>
                </div>
            </div>
            <div class='stat-value'>‚ÑπÔ∏è</div>
            <div class='stat-label'>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
            <div class='stat-change neutral'>
                <i class='fas fa-server'></i>
                –û —Å–∏—Å—Ç–µ–º–µ
            </div>
        </div>
    </div>

    <!-- –ü—Ä–µ–≤—å—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ -->
    <div class='content-card' style='margin-bottom: 32px;'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-eye'></i>
                –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
            </h3>
            <button class='btn btn-primary' onclick='openMegaModal("ultraSettingsModal")'>
                <i class='fas fa-edit'></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ
            </button>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px;'>
                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div style='padding: 20px; background: var(--bg-secondary); border-radius: var(--border-radius-lg);'>
                    <h4 style='color: var(--primary-color); margin-bottom: 16px;'>
                        <i class='fas fa-globe'></i> –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div style='display: grid; gap: 12px;'>
                        <div><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> <?= htmlspecialchars($settings['site_name'] ?? '–ê–∫–≤–∞–°–±–æ—Ä') ?></div>
                        <div><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> <?= htmlspecialchars($settings['site_description'] ?? '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤') ?></div>
                        <div><strong>Email:</strong> <?= htmlspecialchars($settings['admin_email'] ?? 'admin@example.com') ?></div>
                    </div>
                </div>

                <!-- –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
                <div style='padding: 20px; background: var(--bg-secondary); border-radius: var(--border-radius-lg);'>
                    <h4 style='color: var(--success-color); margin-bottom: 16px;'>
                        <i class='fas fa-phone'></i> –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div style='display: grid; gap: 12px;'>
                        <div><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> <?= htmlspecialchars($settings['phone'] ?? '+7 (XXX) XXX-XX-XX') ?></div>
                        <div><strong>–ê–¥—Ä–µ—Å:</strong> <?= htmlspecialchars($settings['address'] ?? '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω') ?></div>
                        <div><strong>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</strong> <?= htmlspecialchars($settings['working_hours'] ?? '–ü–Ω-–ü—Ç: 9:00-18:00') ?></div>
                    </div>
                </div>

                <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ -->
                <div style='padding: 20px; background: var(--bg-secondary); border-radius: var(--border-radius-lg);'>
                    <h4 style='color: var(--warning-color); margin-bottom: 16px;'>
                        <i class='fas fa-shopping-cart'></i> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
                    </h4>
                    <div style='display: grid; gap: 12px;'>
                        <div><strong>–¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</strong> <?= $settings['products_per_page'] ?? 12 ?></div>
                        <div><strong>–ú–∏–Ω. —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</strong> <?= number_format($settings['min_order_amount'] ?? 1000) ?> ‚ÇΩ</div>
                        <div><strong>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç:</strong> <?= number_format($settings['free_shipping_from'] ?? 5000) ?> ‚ÇΩ</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function backupSettings() {
            const settings = <?= json_encode($settings ?? [], JSON_UNESCAPED_UNICODE) ?>;
            const dataStr = JSON.stringify(settings, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});

            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = 'akvasbor-settings-' + new Date().toISOString().slice(0, 10) + '.json';
            link.click();

            showNotification('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', 'success');
        }

        function showSystemInfo() {
            const info = `
                üê† –ê–∫–≤–∞–°–±–æ—Ä MEGA CRM v8.0
                üìÖ –í–µ—Ä—Å–∏—è –æ—Ç: ${new Date().toLocaleDateString('ru-RU')}
                üíæ –•—Ä–∞–Ω–∏–ª–∏—â–µ: JSON Database
                üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: Session-based
                üåê –î–æ–º–µ–Ω: ${window.location.hostname}
                üì± User Agent: ${navigator.userAgent.substring(0, 50)}...
            `;

            alert(info);
        }
    </script>
    <?php
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞)
function renderLogsSection($data) { 
    ?>
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-list-alt'></i>
                –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
            </h3>
        </div>
        <div class='content-card-body'>
            <p>–õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
        </div>
    </div>
    <?php
}

function renderDefaultSection($section, $data) {
    ?>
    <div class='content-card' style='text-align: center; max-width: 600px; margin: 0 auto;'>
        <div class='content-card-body'>
            <div style='font-size: 64px; margin-bottom: 24px; opacity: 0.6;'>‚öôÔ∏è</div>
            <h3>–†–∞–∑–¥–µ–ª '<?= ucfirst($section) ?>' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
            <p style='margin: 20px 0; color: var(--text-secondary); line-height: 1.6;'>
                –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.<br>
                –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è.
            </p>
            <a href='admin.php' class='btn btn-primary'>
                <i class='fas fa-arrow-left'></i>
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </a>
        </div>
    </div>
    <?php
}

// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞–¥–º–∏–Ω–∫–∏
if (isset($_SESSION['admin_logged_in'])) {
    logAdminAction('SYSTEM', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∏–ª —Ä–∞–∑–¥–µ–ª: ' . $section);
}
?>
