<?php
// Основные функции для работы с JSON файлами

/**
 * Загрузка данных из JSON файла
 */
function loadJsonData($filename) {
    $filepath = __DIR__ . '/data/' . $filename;
    if (!file_exists($filepath)) {
        return [];
    }
    $content = file_get_contents($filepath);
    return json_decode($content, true) ?: [];
}

/**
 * Сохранение данных в JSON файл
 */
function saveJsonData($filename, $data) {
    $filepath = __DIR__ . '/data/' . $filename;
    $dir = dirname($filepath);
    if (!is_dir($dir)) {
        mkdir($dir, 0755, true);
    }
    return file_put_contents($filepath, json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
}

/**
 * Получение товаров с фильтрацией
 */
function getProducts($filters = []) {
    $products = loadJsonData('products.json');

    if (!empty($filters['category_id'])) {
        $products = array_filter($products, function($product) use ($filters) {
            return $product['category_id'] == $filters['category_id'];
        });
    }

    if (!empty($filters['search'])) {
        $search = mb_strtolower($filters['search']);
        $products = array_filter($products, function($product) use ($search) {
            return mb_strpos(mb_strtolower($product['name']), $search) !== false ||
                   mb_strpos(mb_strtolower($product['latin_name']), $search) !== false ||
                   mb_strpos(mb_strtolower($product['description']), $search) !== false;
        });
    }

    if (!empty($filters['price_min'])) {
        $products = array_filter($products, function($product) use ($filters) {
            return $product['price'] >= $filters['price_min'];
        });
    }

    if (!empty($filters['price_max'])) {
        $products = array_filter($products, function($product) use ($filters) {
            return $product['price'] <= $filters['price_max'];
        });
    }

    if (!empty($filters['difficulty'])) {
        $products = array_filter($products, function($product) use ($filters) {
            return $product['difficulty'] == $filters['difficulty'];
        });
    }

    // Фильтр по статусу (активные товары)
    $products = array_filter($products, function($product) {
        return isset($product['status']) ? $product['status'] == 1 : true;
    });

    return array_values($products);
}

/**
 * Получение товара по slug
 */
function getProductBySlug($slug) {
    $products = loadJsonData('products.json');
    foreach ($products as $product) {
        if ($product['slug'] === $slug) {
            return $product;
        }
    }
    return null;
}

/**
 * Получение товара по ID
 */
function getProductById($id) {
    $products = loadJsonData('products.json');
    foreach ($products as $product) {
        if ($product['id'] == $id) {
            return $product;
        }
    }
    return null;
}

/**
 * Получение категорий с подсчетом товаров
 */
function getCategoriesWithCount() {
    $categories = loadJsonData('categories.json');
    $products = getProducts();

    foreach ($categories as &$category) {
        $count = 0;
        foreach ($products as $product) {
            if ($product['category_id'] == $category['id']) {
                $count++;
            }
        }
        $category['products_count'] = $count;
    }

    return $categories;
}

/**
 * Получение категории по ID
 */
function getCategoryById($id) {
    $categories = loadJsonData('categories.json');
    foreach ($categories as $category) {
        if ($category['id'] == $id) {
            return $category;
        }
    }
    return null;
}

/**
 * Генерация уникального ID
 */
function generateId($data) {
    if (empty($data)) return 1;
    $maxId = 0;
    foreach ($data as $item) {
        if (isset($item['id']) && $item['id'] > $maxId) {
            $maxId = $item['id'];
        }
    }
    return $maxId + 1;
}

/**
 * Создание slug из названия
 */
function createSlug($text) {
    $text = mb_strtolower($text);
    $text = preg_replace('/[^a-z0-9а-я\s-]/u', '', $text);
    $text = preg_replace('/\s+/', '-', trim($text));
    return $text;
}

/**
 * Форматирование цены
 */
function formatPrice($price) {
    return number_format($price, 0, ',', ' ') . ' ₽';
}

/**
 * Получение настроек сайта
 */
function getSettings() {
    return loadJsonData('settings.json');
}

/**
 * Получение корзины из сессии
 */
function getCart() {
    if (!isset($_SESSION)) {
        session_start();
    }
    return $_SESSION['cart'] ?? [];
}

/**
 * Добавление товара в корзину
 */
function addToCart($productId, $quantity = 1) {
    if (!isset($_SESSION)) {
        session_start();
    }

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

/**
 * Удаление товара из корзины
 */
function removeFromCart($productId) {
    if (!isset($_SESSION)) {
        session_start();
    }

    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

/**
 * Получение товаров корзины с деталями
 */
function getCartItems() {
    $cart = getCart();
    $items = [];
    $total = 0;

    foreach ($cart as $productId => $quantity) {
        $product = getProductById($productId);
        if ($product) {
            $item = $product;
            $item['quantity'] = $quantity;
            $item['subtotal'] = $product['price'] * $quantity;
            $total += $item['subtotal'];
            $items[] = $item;
        }
    }

    return ['items' => $items, 'total' => $total];
}

/**
 * Очистка корзины
 */
function clearCart() {
    if (!isset($_SESSION)) {
        session_start();
    }
    unset($_SESSION['cart']);
}

/**
 * Сохранение заказа
 */
function saveOrder($orderData) {
    $orders = loadJsonData('orders.json');

    $order = [
        'id' => generateId($orders),
        'date' => date('Y-m-d H:i:s'),
        'status' => 'new',
        'customer' => $orderData['customer'],
        'items' => $orderData['items'],
        'total' => $orderData['total']
    ];

    $orders[] = $order;
    saveJsonData('orders.json', $orders);

    return $order['id'];
}

/**
 * Получение популярных товаров
 */
function getFeaturedProducts($limit = 8) {
    $products = getProducts();
    shuffle($products);
    return array_slice($products, 0, $limit);
}

/**
 * Получение статистики для дашборда
 */
function getDashboardStats() {
    $products = loadJsonData('products.json');
    $orders = loadJsonData('orders.json');
    $categories = loadJsonData('categories.json');

    $activeProducts = array_filter($products, function($p) {
        return isset($p['status']) ? $p['status'] == 1 : true;
    });

    $todayOrders = array_filter($orders, function($o) {
        return date('Y-m-d', strtotime($o['date'])) === date('Y-m-d');
    });

    $totalRevenue = array_sum(array_column($orders, 'total'));

    return [
        'total_products' => count($activeProducts),
        'total_categories' => count($categories),
        'total_orders' => count($orders),
        'today_orders' => count($todayOrders),
        'total_revenue' => $totalRevenue
    ];
}

/**
 * Проверка авторизации админа
 */
function isAdminAuthenticated() {
    if (session_status() == PHP_SESSION_NONE) {
        session_start();
    }
    return isset($_SESSION['admin_authenticated']) && $_SESSION['admin_authenticated'] === true;
}

/**
 * Авторизация админа
 */
function authenticateAdmin($username, $password) {
    // Простая проверка (в реальном проекте лучше хешировать пароли)
    $validUsername = 'admin';
    $validPassword = 'admin123';

    if ($username === $validUsername && $password === $validPassword) {
        if (session_status() == PHP_SESSION_NONE) {
            session_start();
        }
        $_SESSION['admin_authenticated'] = true;
        $_SESSION['admin_username'] = $username;
        return true;
    }

    return false;
}

/**
 * Выход из админки
 */
function adminLogout() {
    if (session_status() == PHP_SESSION_NONE) {
        session_start();
    }
    $_SESSION = [];
    session_destroy();
}

/**
 * Требовать авторизацию админа
 */
function requireAdminAuth() {
    if (!isAdminAuthenticated()) {
        header('Location: auth.php');
        exit;
    }
}
?>
