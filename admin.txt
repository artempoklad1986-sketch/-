<?php
/**
 * –ê–∫–≤–∞–°–±–æ—Ä - –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å v6.0 - ENTERPRISE LEVEL
 * –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª + –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ + –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ + –º–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
session_start();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
require_once 'data.php';
if (file_exists('date_functions.php')) {
    require_once 'date_functions.php';
}
if (file_exists('cart_system.php')) {
    require_once 'cart_system.php';
}

// –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
if (!isset($_SESSION['admin_logged_in'])) {
    if (($_POST['admin_password'] ?? '') === ADMIN_PASSWORD) {
        $_SESSION['admin_logged_in'] = true;
        $_SESSION['admin_name'] = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
        $_SESSION['admin_role'] = '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω';
        header('Location: admin.php');
        exit;
    } elseif (!empty($_POST['admin_password'])) {
        $login_error = '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å';
    }
}

// –í—ã—Ö–æ–¥
if (($_GET['action'] ?? '') === 'logout') {
    session_destroy();
    header('Location: admin.php');
    exit;
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (!isset($_SESSION['admin_logged_in'])) {
    $error = $login_error ?? '';
    ?>
    <!DOCTYPE html>
    <html lang='ru'>
    <head>
        <meta charset='UTF-8'>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <title>üê† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –ê–∫–≤–∞–°–±–æ—Ä</title>
        <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' rel='stylesheet'>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Inter', sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 20px;
            }
            .login-container {
                background: white;
                padding: 40px;
                border-radius: 20px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.2);
                max-width: 400px;
                width: 100%;
                text-align: center;
            }
            .logo { font-size: 60px; margin-bottom: 20px; animation: float 3s ease-in-out infinite; }
            @keyframes float { 0%, 100% { transform: translateY(0px); } 50% { transform: translateY(-10px); } }
            h2 { color: #2c3e50; margin-bottom: 30px; font-size: 28px; }
            input, button {
                width: 100%;
                padding: 15px;
                margin: 10px 0;
                border: 2px solid #e0e6ed;
                border-radius: 10px;
                font-size: 16px;
                transition: all 0.3s ease;
            }
            input:focus {
                border-color: #667eea;
                outline: none;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }
            button {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border: none;
                cursor: pointer;
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            button:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            }
            .error {
                background: #fee;
                color: #c33;
                padding: 15px;
                border-radius: 10px;
                margin-bottom: 20px;
                border: 1px solid #fcc;
            }
            .hint {
                margin-top: 20px;
                padding: 15px;
                background: #f8f9ff;
                border-radius: 10px;
                color: #666;
                font-size: 14px;
            }
        </style>
    </head>
    <body>
        <div class='login-container'>
            <div class='logo'>üê†</div>
            <h2>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Enterprise</h2>
            <form method='post'>
                <?php if ($error): ?>
                    <div class='error'>‚ùå <?= htmlspecialchars($error) ?></div>
                <?php endif; ?>
                <input type='password' name='admin_password' placeholder='üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' required autofocus>
                <button type='submit'>–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</button>
                <div class='hint'>
                    üí° <strong>–ü–∞—Ä–æ–ª—å:</strong> admin123<br>
                    üöÄ Enterprise —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞, –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –≠–∫—Å–ø–æ—Ä—Ç
                </div>
            </form>
        </div>
    </body>
    </html>
    <?php
    exit;
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
$section = $_GET['section'] ?? 'dashboard';
$action = $_POST['action'] ?? $_GET['action'] ?? '';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
if (isset($_POST['ajax']) || isset($_GET['ajax'])) {
    header('Content-Type: application/json');

    try {
        switch ($action) {
            case 'get_stats':
                $stats = getDashboardStats();
                echo json_encode(['success' => true, 'stats' => $stats]);
                break;

            case 'toggle_product_status':
                $productId = (int)$_POST['product_id'];
                $isActive = $_POST['is_active'] === '1';
                $result = toggleProductStatus($productId, $isActive);
                echo json_encode($result);
                break;

            case 'delete_product':
                $productId = (int)$_POST['product_id'];
                $result = deleteProduct($productId);
                echo json_encode($result);
                break;

            case 'bulk_action_products':
                $action = $_POST['bulk_action'];
                $productIds = json_decode($_POST['product_ids'], true);
                $result = bulkActionProducts($action, $productIds);
                echo json_encode($result);
                break;

            case 'approve_review':
                $reviewId = (int)$_POST['review_id'];
                $result = approveReview($reviewId);
                echo json_encode($result);
                break;

            case 'delete_review':
                $reviewId = (int)$_POST['review_id'];
                $result = deleteReview($reviewId);
                echo json_encode($result);
                break;

            case 'update_order_status':
                $orderId = (int)$_POST['order_id'];
                $status = $_POST['status'];
                $result = updateOrderStatus($orderId, $status);
                echo json_encode($result);
                break;

            case 'save_settings':
                $settingsData = $_POST;
                $result = updateSiteSettings($settingsData);
                echo json_encode($result);
                break;

            case 'export_data':
                $type = $_POST['export_type'];
                $result = exportData($type);
                echo json_encode($result);
                break;

            case 'upload_media':
                $result = uploadMediaFile($_FILES['file']);
                echo json_encode($result);
                break;

            case 'delete_media':
                $filename = $_POST['filename'];
                $result = deleteMediaFile($filename);
                echo json_encode($result);
                break;

            case 'get_analytics_data':
                $period = $_POST['period'] ?? '7days';
                $type = $_POST['type'] ?? 'sales';
                $result = getAnalyticsData($period, $type);
                echo json_encode($result);
                break;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()]);
    }
    exit;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö POST –∑–∞–ø—Ä–æ—Å–æ–≤
if ($action && !isset($_POST['ajax'])) {
    switch ($action) {
        case 'save_settings':
            $result = updateSiteSettings($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=settings');
            exit;

        case 'create_product':
            $result = createProduct($_POST, $_FILES ?? []);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=products');
            exit;

        case 'update_product':
            $productId = (int)$_POST['product_id'];
            $result = updateProduct($productId, $_POST, $_FILES ?? []);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=products');
            exit;

        case 'create_category':
            $result = createCategory($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=categories');
            exit;

        case 'update_category':
            $categoryId = (int)$_POST['category_id'];
            $result = updateCategory($categoryId, $_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=categories');
            exit;

        case 'create_news':
            $result = createNews($_POST);
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=news');
            exit;

        case 'backup_data':
            $result = createBackup();
            $_SESSION['admin_message'] = [
                'text' => $result['message'],
                'type' => $result['success'] ? 'success' : 'error'
            ];
            header('Location: admin.php?section=system');
            exit;
    }
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
$adminData = getAdminData($section);

?><!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title><?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?> - –ê–∫–≤–∞–°–±–æ—Ä CRM Enterprise v6.0</title>

    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' rel='stylesheet'>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>
    <link rel='icon' href='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y=".9em" font-size="90">üê†</text></svg>'>

    <!-- Chart.js –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ -->
    <script src='https://cdn.jsdelivr.net/npm/chart.js'></script>

    <style>
        :root {
            --primary-color: #667eea;
            --primary-dark: #5a6fd8;
            --secondary-color: #764ba2;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #3498db;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --bg-primary: #ffffff;
            --bg-secondary: #f8f9fa;
            --bg-tertiary: #e9ecef;
            --text-primary: #2c3e50;
            --text-secondary: #6c757d;
            --text-muted: #95a5a6;
            --border-color: #dee2e6;
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --border-radius-xl: 20px;
            --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 12px rgba(0,0,0,0.1);
            --shadow-lg: 0 8px 25px rgba(0,0,0,0.15);
            --shadow-xl: 0 12px 40px rgba(0,0,0,0.2);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.15s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--bg-secondary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .admin-layout {
            display: flex;
            min-height: 100vh;
            position: relative;
        }

        /* ===== –ë–û–ö–û–í–ê–Ø –ü–ê–ù–ï–õ–¨ ===== */
        .sidebar {
            width: 300px;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            overflow-x: hidden;
            z-index: 1000;
            transition: var(--transition);
            box-shadow: var(--shadow-xl);
        }

        .sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .sidebar::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.05);
        }

        .sidebar::-webkit-scrollbar-thumb {
            background: rgba(255,255,255,0.2);
            border-radius: 3px;
        }

        .sidebar::-webkit-scrollbar-thumb:hover {
            background: rgba(255,255,255,0.3);
        }

        .sidebar-header {
            padding: 24px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            background: rgba(255,255,255,0.05);
        }

        .admin-logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            font-size: 36px;
            animation: logoFloat 3s ease-in-out infinite;
            filter: drop-shadow(0 2px 8px rgba(0,0,0,0.2));
        }

        @keyframes logoFloat {
            0%, 100% { transform: translateY(0px) scale(1); }
            50% { transform: translateY(-3px) scale(1.05); }
        }

        .logo-text {
            display: flex;
            flex-direction: column;
        }

        .logo-title {
            font-size: 22px;
            font-weight: 700;
            line-height: 1.2;
        }

        .logo-subtitle {
            font-size: 11px;
            opacity: 0.8;
            font-weight: 400;
            background: linear-gradient(45deg, #ffd700, #ffed4a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .sidebar-nav {
            padding: 24px 0 120px 0;
        }

        .nav-section {
            margin-bottom: 32px;
        }

        .nav-title {
            padding: 0 20px 12px;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 1.5px;
            opacity: 0.7;
            font-weight: 600;
            color: rgba(255,255,255,0.8);
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 16px 20px;
            color: rgba(255,255,255,0.85);
            text-decoration: none;
            transition: var(--transition);
            position: relative;
            border-left: 3px solid transparent;
        }

        .sidebar-link:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            padding-left: 28px;
            border-left-color: rgba(255,255,255,0.3);
        }

        .sidebar-link.active {
            background: rgba(255,255,255,0.15);
            color: white;
            border-left-color: white;
            font-weight: 600;
        }

        .sidebar-link.active::before {
            content: '';
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            width: 6px;
            height: 6px;
            background: white;
            border-radius: 50%;
        }

        .sidebar-link i {
            width: 24px;
            margin-right: 12px;
            text-align: center;
            font-size: 16px;
        }

        .sidebar-link-text {
            font-size: 14px;
            font-weight: 500;
            flex: 1;
        }

        .sidebar-badge {
            margin-left: auto;
            padding: 4px 10px;
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            font-size: 10px;
            font-weight: 600;
            min-width: 24px;
            text-align: center;
            line-height: 1.2;
        }

        .sidebar-badge.badge-warning {
            background: var(--warning-color);
        }

        .sidebar-badge.badge-success {
            background: var(--success-color);
        }

        .sidebar-badge.badge-danger {
            background: var(--danger-color);
        }

        .sidebar-badge.badge-new {
            background: linear-gradient(45deg, #ff6b6b, #ff8e53);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .sidebar-footer {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 20px;
            border-top: 1px solid rgba(255,255,255,0.1);
            background: rgba(0,0,0,0.1);
        }

        .admin-profile {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .admin-avatar {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            border: 2px solid rgba(255,255,255,0.3);
        }

        .admin-info {
            flex: 1;
            min-width: 0;
        }

        .admin-name {
            font-weight: 600;
            font-size: 14px;
            line-height: 1.2;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .admin-role {
            font-size: 11px;
            opacity: 0.7;
            line-height: 1.2;
        }

        .logout-btn {
            color: rgba(255,255,255,0.7);
            text-decoration: none;
            padding: 10px;
            border-radius: var(--border-radius);
            transition: var(--transition);
            font-size: 16px;
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            transform: scale(1.1);
        }

        /* ===== –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ ===== */
        .main-content {
            flex: 1;
            margin-left: 300px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .top-bar {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            padding: 20px 32px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: sticky;
            top: 0;
            z-index: 500;
            box-shadow: var(--shadow-sm);
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95);
        }

        .page-title {
            font-size: 32px;
            font-weight: 700;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .page-title i {
            color: var(--primary-color);
        }

        .top-bar-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: var(--transition);
            white-space: nowrap;
            line-height: 1.4;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
            box-shadow: var(--shadow-sm);
        }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-1px);
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
        }

        .btn-lg {
            padding: 16px 32px;
            font-size: 16px;
        }

        .btn-xl {
            padding: 20px 40px;
            font-size: 18px;
            font-weight: 600;
        }

        /* ===== –ö–û–ù–¢–ï–ù–¢ –°–¢–†–ê–ù–ò–¶ ===== */
        .page-content {
            flex: 1;
            padding: 32px;
            max-width: 100%;
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ò–ï –ö–ê–†–¢–û–ß–ö–ò ===== */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 28px;
            margin-bottom: 50px;
        }

        .stat-card {
            background: var(--bg-primary);
            padding: 32px;
            border-radius: var(--border-radius-xl);
            box-shadow: var(--shadow-lg);
            border: 1px solid var(--border-color);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow-xl);
        }

        .stat-card.stat-primary::before {
            background: linear-gradient(90deg, var(--primary-color), var(--info-color));
        }

        .stat-card.stat-success::before {
            background: linear-gradient(90deg, var(--success-color), #27ae60);
        }

        .stat-card.stat-warning::before {
            background: linear-gradient(90deg, var(--warning-color), #e67e22);
        }

        .stat-card.stat-danger::before {
            background: linear-gradient(90deg, var(--danger-color), #c0392b);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 20px;
        }

        .stat-icon {
            width: 70px;
            height: 70px;
            border-radius: var(--border-radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 32px;
            color: white;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            box-shadow: var(--shadow-md);
        }

        .stat-icon.stat-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
        }

        .stat-icon.stat-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
        }

        .stat-icon.stat-danger {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
        }

        .stat-value {
            font-size: 42px;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 10px;
            line-height: 1;
        }

        .stat-label {
            font-size: 18px;
            color: var(--text-secondary);
            margin-bottom: 16px;
            font-weight: 500;
        }

        .stat-change {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            font-weight: 500;
            padding: 6px 12px;
            border-radius: var(--border-radius);
        }

        .stat-change.positive {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
        }

        .stat-change.negative {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
        }

        .stat-change.neutral {
            background: var(--bg-tertiary);
            color: var(--text-muted);
        }

        .stat-trend {
            font-size: 12px;
            margin-left: auto;
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ö–ê–†–¢–û–ß–ö–ò –ö–û–ù–¢–ï–ù–¢–ê ===== */
        .content-card {
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            margin-bottom: 40px;
            transition: var(--transition);
        }

        .content-card:hover {
            box-shadow: var(--shadow-lg);
        }

        .content-card-header {
            padding: 28px 32px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(135deg, #f8f9ff, #fff);
        }

        .content-card-title {
            font-size: 22px;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .content-card-body {
            padding: 32px;
        }

        .content-card-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –¢–ê–ë–õ–ò–¶–´ ===== */
        .table-container {
            overflow-x: auto;
            border-radius: var(--border-radius-lg);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-sm);
            background: var(--bg-primary);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .table th {
            background: linear-gradient(135deg, #f8f9ff, var(--bg-secondary));
            padding: 20px 16px;
            text-align: left;
            font-weight: 600;
            color: var(--text-primary);
            border-bottom: 2px solid var(--border-color);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table td {
            padding: 18px 16px;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .table tr {
            transition: var(--transition-fast);
        }

        .table tr:hover {
            background: rgba(102, 126, 234, 0.05);
        }

        .table tr.selected {
            background: rgba(102, 126, 234, 0.1);
        }

        .table-checkbox {
            width: 18px;
            height: 18px;
            margin: 0;
        }

        /* ===== –ú–ê–°–°–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò ===== */
        .bulk-actions {
            display: none;
            padding: 16px 20px;
            background: var(--info-color);
            color: white;
            align-items: center;
            gap: 16px;
            margin-bottom: 20px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-md);
        }

        .bulk-actions.show {
            display: flex;
        }

        .bulk-actions-text {
            font-weight: 500;
        }

        .bulk-actions-buttons {
            display: flex;
            gap: 8px;
            margin-left: auto;
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –°–¢–ê–¢–£–° –ë–ï–ô–î–ñ–ò ===== */
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 8px 14px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            line-height: 1;
        }

        .status-new {
            background: rgba(52, 152, 219, 0.1);
            color: var(--info-color);
            border: 1px solid rgba(52, 152, 219, 0.2);
        }

        .status-processing {
            background: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
            border: 1px solid rgba(243, 156, 18, 0.2);
        }

        .status-completed {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-cancelled {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
            border: 1px solid rgba(231, 76, 60, 0.2);
        }

        .status-active {
            background: rgba(46, 204, 113, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(46, 204, 113, 0.2);
        }

        .status-inactive {
            background: rgba(149, 165, 166, 0.1);
            color: var(--text-muted);
            border: 1px solid rgba(149, 165, 166, 0.2);
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –§–û–†–ú–´ ===== */
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            margin-bottom: 24px;
        }

        .form-row-3 {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
            margin-bottom: 24px;
        }

        .form-row-4 {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 24px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-primary);
            font-size: 14px;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 14px 16px;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 14px;
            transition: var(--transition);
            font-family: inherit;
            background: var(--bg-primary);
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 120px;
            line-height: 1.6;
        }

        .form-checkbox {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            padding: 8px 0;
        }

        .form-checkbox input {
            width: 18px;
            height: 18px;
            margin: 0;
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===== */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.6);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(8px);
        }

        .modal.show {
            display: flex;
            animation: modalFadeIn 0.3s ease;
        }

        @keyframes modalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-dialog {
            background: var(--bg-primary);
            border-radius: var(--border-radius-xl);
            max-width: 800px;
            width: 95%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: var(--shadow-xl);
            animation: modalSlideUp 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        .modal-dialog.modal-lg {
            max-width: 1000px;
        }

        .modal-dialog.modal-xl {
            max-width: 1200px;
        }

        @keyframes modalSlideUp {
            from { transform: translateY(50px) scale(0.95); opacity: 0; }
            to { transform: translateY(0) scale(1); opacity: 1; }
        }

        .modal-header {
            padding: 28px 32px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(135deg, #f8f9ff, #fff);
        }

        .modal-title {
            font-size: 24px;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 28px;
            cursor: pointer;
            color: var(--text-muted);
            padding: 8px;
            border-radius: var(--border-radius);
            transition: var(--transition);
            line-height: 1;
        }

        .modal-close:hover {
            background: var(--bg-tertiary);
            color: var(--text-primary);
        }

        .modal-body {
            padding: 32px;
        }

        .modal-footer {
            padding: 24px 32px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            gap: 16px;
            background: var(--bg-secondary);
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===== */
        .notification {
            position: fixed;
            top: 24px;
            right: 24px;
            padding: 20px 24px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-xl);
            z-index: 9999;
            animation: notificationSlideIn 0.3s ease;
            max-width: 400px;
            display: flex;
            align-items: center;
            gap: 16px;
            font-weight: 500;
            font-size: 16px;
        }

        .notification-success {
            background: linear-gradient(135deg, var(--success-color), #27ae60);
            color: white;
        }

        .notification-error {
            background: linear-gradient(135deg, var(--danger-color), #c0392b);
            color: white;
        }

        .notification-warning {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
        }

        .notification-info {
            background: linear-gradient(135deg, var(--info-color), #2980b9);
            color: white;
        }

        @keyframes notificationSlideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* ===== –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ü–£–°–¢–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø ===== */
        .empty-state {
            text-align: center;
            padding: 100px 20px;
            color: var(--text-muted);
        }

        .empty-state-icon {
            font-size: 80px;
            margin-bottom: 32px;
            opacity: 0.6;
        }

        .empty-state h3 {
            margin-bottom: 16px;
            color: var(--text-secondary);
            font-size: 24px;
        }

        .empty-state p {
            margin-bottom: 32px;
            font-size: 16px;
            line-height: 1.6;
        }

        /* ===== DRAG & DROP –ó–û–ù–ê ===== */
        .dropzone {
            border: 3px dashed var(--border-color);
            border-radius: var(--border-radius-lg);
            padding: 60px 20px;
            text-align: center;
            transition: var(--transition);
            cursor: pointer;
        }

        .dropzone:hover, .dropzone.dragover {
            border-color: var(--primary-color);
            background: rgba(102, 126, 234, 0.05);
        }

        .dropzone-icon {
            font-size: 48px;
            color: var(--text-muted);
            margin-bottom: 16px;
            display: block;
        }

        .dropzone-text {
            font-size: 16px;
            color: var(--text-secondary);
            margin-bottom: 8px;
        }

        .dropzone-hint {
            font-size: 14px;
            color: var(--text-muted);
        }

        /* ===== –ú–ï–î–ò–ê –ì–ê–õ–ï–†–ï–Ø ===== */
        .media-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .media-item {
            position: relative;
            background: var(--bg-secondary);
            border-radius: var(--border-radius-lg);
            overflow: hidden;
            aspect-ratio: 1;
            cursor: pointer;
            transition: var(--transition);
        }

        .media-item:hover {
            transform: scale(1.05);
            box-shadow: var(--shadow-lg);
        }

        .media-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-item-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            opacity: 0;
            transition: var(--transition);
        }

        .media-item:hover .media-item-overlay {
            opacity: 1;
        }

        /* ===== –ì–†–ê–§–ò–ö–ò –ò –î–ò–ê–ì–†–ê–ú–ú–´ ===== */
        .chart-container {
            position: relative;
            height: 400px;
            margin: 20px 0;
            padding: 20px;
            background: var(--bg-primary);
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-sm);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-title {
            font-size: 18px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .chart-filters {
            display: flex;
            gap: 10px;
        }

        /* ===== –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨ ===== */
        @media (max-width: 1400px) {
            .stats-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        @media (max-width: 1200px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .form-row, .form-row-3, .form-row-4 {
                grid-template-columns: 1fr;
            }

            .sidebar {
                width: 280px;
            }

            .main-content {
                margin-left: 280px;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: 1fr;
                gap: 16px;
            }

            .page-content {
                padding: 20px 16px;
            }

            .top-bar {
                padding: 16px 20px;
            }

            .page-title {
                font-size: 24px;
            }

            .modal-dialog {
                width: 95%;
                margin: 20px 10px;
                max-height: 85vh;
            }

            .table-container {
                font-size: 13px;
            }

            .table th,
            .table td {
                padding: 12px 8px;
            }
        }

        /* ===== –õ–û–ê–î–ï–† ===== */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 3000;
            backdrop-filter: blur(5px);
        }

        .loading-overlay.show {
            display: flex;
        }

        .spinner {
            border: 6px solid var(--bg-tertiary);
            border-top: 6px solid var(--primary-color);
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–´ ===== */
        .text-center { text-align: center; }
        .text-right { text-align: right; }
        .text-muted { color: var(--text-muted); }
        .text-primary { color: var(--primary-color); }
        .text-success { color: var(--success-color); }
        .text-warning { color: var(--warning-color); }
        .text-danger { color: var(--danger-color); }

        .mb-0 { margin-bottom: 0; }
        .mb-1 { margin-bottom: 8px; }
        .mb-2 { margin-bottom: 16px; }
        .mb-3 { margin-bottom: 24px; }
        .mb-4 { margin-bottom: 32px; }
        .mb-5 { margin-bottom: 40px; }

        .mt-0 { margin-top: 0; }
        .mt-1 { margin-top: 8px; }
        .mt-2 { margin-top: 16px; }
        .mt-3 { margin-top: 24px; }
        .mt-4 { margin-top: 32px; }

        .d-flex { display: flex; }
        .align-items-center { align-items: center; }
        .justify-content-between { justify-content: space-between; }
        .justify-content-center { justify-content: center; }
        .flex-wrap { flex-wrap: wrap; }
        .gap-1 { gap: 8px; }
        .gap-2 { gap: 16px; }
        .gap-3 { gap: 24px; }

        .w-100 { width: 100%; }
        .h-100 { height: 100%; }

        .cursor-pointer { cursor: pointer; }

        /* ===== –ê–ù–ò–ú–ê–¶–ò–ò –ü–û–Ø–í–õ–ï–ù–ò–Ø ===== */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .slide-up {
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(40px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* ===== –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê (–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø) ===== */
        @media (prefers-color-scheme: dark) {
            :root {
                --bg-primary: #1a1a1a;
                --bg-secondary: #2d2d2d;
                --bg-tertiary: #404040;
                --text-primary: #ffffff;
                --text-secondary: #cccccc;
                --text-muted: #999999;
                --border-color: #404040;
            }
        }
    </style>
</head>
<body>
    <div class='admin-layout'>
        <!-- –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <aside class='sidebar' id='sidebar'>
            <div class='sidebar-header'>
                <div class='admin-logo'>
                    <div class='logo-icon'>üê†</div>
                    <div class='logo-text'>
                        <div class='logo-title'>–ê–∫–≤–∞–°–±–æ—Ä</div>
                        <div class='logo-subtitle'>ENTERPRISE CRM v6.0</div>
                    </div>
                </div>
            </div>

            <nav class='sidebar-nav'>
                <!-- –ê–ù–ê–õ–ò–¢–ò–ö–ê & –û–¢–ß–ï–¢–´ -->
                <div class='nav-section'>
                    <div class='nav-title'>üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê & –û–¢–ß–ï–¢–´</div>
                    <a href='admin.php?section=dashboard' class='sidebar-link <?= $section === 'dashboard' ? 'active' : '' ?>'>
                        <i class='fas fa-chart-pie'></i>
                        <span class='sidebar-link-text'>KPI –î–∞—à–±–æ—Ä–¥</span>
                        <span class='sidebar-badge badge-success'>LIVE</span>
                    </a>
                    <a href='admin.php?section=analytics' class='sidebar-link <?= $section === 'analytics' ? 'active' : '' ?>'>
                        <i class='fas fa-chart-line'></i>
                        <span class='sidebar-link-text'>–ì—Ä–∞—Ñ–∏–∫–∏ –ø—Ä–æ–¥–∞–∂</span>
                        <span class='sidebar-badge badge-new'>NEW</span>
                    </a>
                    <a href='admin.php?section=reports' class='sidebar-link <?= $section === 'reports' ? 'active' : '' ?>'>
                        <i class='fas fa-file-chart-column'></i>
                        <span class='sidebar-link-text'>–û—Ç—á–µ—Ç—ã</span>
                        <span class='sidebar-badge badge-warning'>PRO</span>
                    </a>
                    <a href='admin.php?section=conversion' class='sidebar-link <?= $section === 'conversion' ? 'active' : '' ?>'>
                        <i class='fas fa-funnel-dollar'></i>
                        <span class='sidebar-link-text'>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</span>
                    </a>
                </div>

                <!-- –ò–ù–¢–ï–†–ù–ï–¢-–ú–ê–ì–ê–ó–ò–ù -->
                <div class='nav-section'>
                    <div class='nav-title'>üõí –ò–ù–¢–ï–†–ù–ï–¢-–ú–ê–ì–ê–ó–ò–ù</div>
                    <a href='admin.php?section=products' class='sidebar-link <?= $section === 'products' ? 'active' : '' ?>'>
                        <i class='fas fa-fish'></i>
                        <span class='sidebar-link-text'>–¢–æ–≤–∞—Ä—ã</span>
                        <span class='sidebar-badge'><?= count(getProducts()) ?></span>
                    </a>
                    <a href='admin.php?section=categories' class='sidebar-link <?= $section === 'categories' ? 'active' : '' ?>'>
                        <i class='fas fa-tags'></i>
                        <span class='sidebar-link-text'>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
                        <span class='sidebar-badge'><?= count(getCategories()) ?></span>
                    </a>
                    <a href='admin.php?section=inventory' class='sidebar-link <?= $section === 'inventory' ? 'active' : '' ?>'>
                        <i class='fas fa-warehouse'></i>
                        <span class='sidebar-link-text'>–°–∫–ª–∞–¥ & –æ—Å—Ç–∞—Ç–∫–∏</span>
                        <span class='sidebar-badge badge-warning'><?= getLowStockCount() ?></span>
                    </a>
                    <a href='admin.php?section=pricing' class='sidebar-link <?= $section === 'pricing' ? 'active' : '' ?>'>
                        <i class='fas fa-tag'></i>
                        <span class='sidebar-link-text'>–¶–µ–Ω—ã & —Å–∫–∏–¥–∫–∏</span>
                        <span class='sidebar-badge badge-success'>AUTO</span>
                    </a>
                </div>

                <!-- –ü–†–û–î–ê–ñ–ò & –ó–ê–ö–ê–ó–´ -->
                <div class='nav-section'>
                    <div class='nav-title'>üí∞ –ü–†–û–î–ê–ñ–ò & –ó–ê–ö–ê–ó–´</div>
                    <a href='admin.php?section=orders' class='sidebar-link <?= $section === 'orders' ? 'active' : '' ?>'>
                        <i class='fas fa-shopping-bag'></i>
                        <span class='sidebar-link-text'>–ó–∞–∫–∞–∑—ã</span>
                        <span class='sidebar-badge badge-danger'><?= count(array_filter(getOrders(), fn($o) => $o['status'] === 'new')) ?></span>
                    </a>
                    <a href='admin.php?section=customers' class='sidebar-link <?= $section === 'customers' ? 'active' : '' ?>'>
                        <i class='fas fa-users'></i>
                        <span class='sidebar-link-text'>–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏</span>
                        <span class='sidebar-badge'><?= getCustomersCount() ?></span>
                    </a>
                    <a href='admin.php?section=shipping' class='sidebar-link <?= $section === 'shipping' ? 'active' : '' ?>'>
                        <i class='fas fa-truck'></i>
                        <span class='sidebar-link-text'>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                    </a>
                    <a href='admin.php?section=payments' class='sidebar-link <?= $section === 'payments' ? 'active' : '' ?>'>
                        <i class='fas fa-credit-card'></i>
                        <span class='sidebar-link-text'>–ü–ª–∞—Ç–µ–∂–∏</span>
                        <span class='sidebar-badge badge-success'>API</span>
                    </a>
                </div>

                <!-- –ú–ê–†–ö–ï–¢–ò–ù–ì & –ü–†–û–î–í–ò–ñ–ï–ù–ò–ï -->
                <div class='nav-section'>
                    <div class='nav-title'>üì¢ –ú–ê–†–ö–ï–¢–ò–ù–ì</div>
                    <a href='admin.php?section=promotions' class='sidebar-link <?= $section === 'promotions' ? 'active' : '' ?>'>
                        <i class='fas fa-percentage'></i>
                        <span class='sidebar-link-text'>–ê–∫—Ü–∏–∏ & –ø—Ä–æ–º–æ–∫–æ–¥—ã</span>
                        <span class='sidebar-badge badge-new'>HOT</span>
                    </a>
                    <a href='admin.php?section=reviews' class='sidebar-link <?= $section === 'reviews' ? 'active' : '' ?>'>
                        <i class='fas fa-star'></i>
                        <span class='sidebar-link-text'>–û—Ç–∑—ã–≤—ã</span>
                        <span class='sidebar-badge badge-warning'><?= count(array_filter(getReviews(), fn($r) => !$r['is_approved'])) ?></span>
                    </a>
                    <a href='admin.php?section=email' class='sidebar-link <?= $section === 'email' ? 'active' : '' ?>'>
                        <i class='fas fa-envelope'></i>
                        <span class='sidebar-link-text'>Email —Ä–∞—Å—Å—ã–ª–∫–∏</span>
                    </a>
                    <a href='admin.php?section=seo' class='sidebar-link <?= $section === 'seo' ? 'active' : '' ?>'>
                        <i class='fas fa-search'></i>
                        <span class='sidebar-link-text'>SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</span>
                        <span class='sidebar-badge badge-success'>AUTO</span>
                    </a>
                </div>

                <!-- –ö–û–ù–¢–ï–ù–¢ & –ú–ï–î–ò–ê -->
                <div class='nav-section'>
                    <div class='nav-title'>üìù –ö–û–ù–¢–ï–ù–¢ & –ú–ï–î–ò–ê</div>
                    <a href='admin.php?section=news' class='sidebar-link <?= $section === 'news' ? 'active' : '' ?>'>
                        <i class='fas fa-newspaper'></i>
                        <span class='sidebar-link-text'>–ù–æ–≤–æ—Å—Ç–∏</span>
                        <span class='sidebar-badge'><?= count(getNews()) ?></span>
                    </a>
                    <a href='admin.php?section=pages' class='sidebar-link <?= $section === 'pages' ? 'active' : '' ?>'>
                        <i class='fas fa-file-alt'></i>
                        <span class='sidebar-link-text'>–°—Ç—Ä–∞–Ω–∏—Ü—ã</span>
                    </a>
                    <a href='admin.php?section=media' class='sidebar-link <?= $section === 'media' ? 'active' : '' ?>'>
                        <i class='fas fa-images'></i>
                        <span class='sidebar-link-text'>–ú–µ–¥–∏–∞ –≥–∞–ª–µ—Ä–µ—è</span>
                        <span class='sidebar-badge badge-new'>NEW</span>
                    </a>
                    <a href='admin.php?section=blog' class='sidebar-link <?= $section === 'blog' ? 'active' : '' ?>'>
                        <i class='fas fa-blog'></i>
                        <span class='sidebar-link-text'>–ë–ª–æ–≥</span>
                    </a>
                </div>

                <!-- –°–ò–°–¢–ï–ú–ê & –ù–ê–°–¢–†–û–ô–ö–ò -->
                <div class='nav-section'>
                    <div class='nav-title'>‚öôÔ∏è –°–ò–°–¢–ï–ú–ê</div>
                    <a href='admin.php?section=settings' class='sidebar-link <?= $section === 'settings' ? 'active' : '' ?>'>
                        <i class='fas fa-cog'></i>
                        <span class='sidebar-link-text'>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                        <span class='sidebar-badge badge-success'>PRO</span>
                    </a>
                    <a href='admin.php?section=integrations' class='sidebar-link <?= $section === 'integrations' ? 'active' : '' ?>'>
                        <i class='fas fa-plug'></i>
                        <span class='sidebar-link-text'>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</span>
                        <span class='sidebar-badge badge-new'>API</span>
                    </a>
                    <a href='admin.php?section=backup' class='sidebar-link <?= $section === 'backup' ? 'active' : '' ?>'>
                        <i class='fas fa-download'></i>
                        <span class='sidebar-link-text'>Backup & Export</span>
                    </a>
                    <a href='admin.php?section=logs' class='sidebar-link <?= $section === 'logs' ? 'active' : '' ?>'>
                        <i class='fas fa-list-alt'></i>
                        <span class='sidebar-link-text'>–õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã</span>
                    </a>
                    <a href='admin.php?section=security' class='sidebar-link <?= $section === 'security' ? 'active' : '' ?>'>
                        <i class='fas fa-shield-alt'></i>
                        <span class='sidebar-link-text'>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</span>
                        <span class='sidebar-badge badge-danger'>!</span>
                    </a>
                </div>
            </nav>

            <div class='sidebar-footer'>
                <div class='admin-profile'>
                    <div class='admin-avatar'>üë§</div>
                    <div class='admin-info'>
                        <div class='admin-name'><?= $_SESSION['admin_name'] ?></div>
                        <div class='admin-role'><?= $_SESSION['admin_role'] ?></div>
                    </div>
                    <a href='admin.php?action=logout' class='logout-btn' title='–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã'>
                        <i class='fas fa-sign-out-alt'></i>
                    </a>
                </div>
            </div>
        </aside>

        <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
        <main class='main-content'>
            <!-- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å -->
            <header class='top-bar'>
                <div class='top-bar-left'>
                    <h1 class='page-title'>
                        <i class='<?= getPageIcon($section) ?>'></i>
                        <?= $adminData['title'] ?? '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ?>
                    </h1>
                </div>

                <div class='top-bar-right'>
                    <button class='btn btn-outline' onclick='toggleSidebar()' title='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–µ–Ω—é'>
                        <i class='fas fa-bars'></i>
                    </button>
                    <button class='btn btn-success' onclick='showQuickAdd()' title='–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ'>
                        <i class='fas fa-plus'></i>
                        –ë—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤–∏—Ç—å
                    </button>
                    <a href='index.php' class='btn btn-primary' target='_blank'>
                        <i class='fas fa-external-link-alt'></i>
                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                    </a>
                </div>
            </header>

            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
            <div class='page-content'>
                <?php if (isset($_SESSION['admin_message'])): ?>
                    <div class='notification notification-<?= $_SESSION['admin_message']['type'] ?>' id='adminNotification'>
                        <i class='fas fa-<?= $_SESSION['admin_message']['type'] === 'success' ? 'check-circle' : 'exclamation-circle' ?>'></i>
                        <?= htmlspecialchars($_SESSION['admin_message']['text']) ?>
                    </div>
                    <?php unset($_SESSION['admin_message']); ?>
                <?php endif; ?>

                <?php renderAdminSection($section, $adminData); ?>
            </div>
        </main>
    </div>

    <!-- –ë–´–°–¢–†–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï -->
    <div class='modal' id='quickAddModal'>
        <div class='modal-dialog'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-plus'></i>
                    –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("quickAddModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;'>
                    <button class='btn btn-primary btn-lg' onclick='openModal("addProductModal")'>
                        <i class='fas fa-fish'></i>
                        –¢–æ–≤–∞—Ä
                    </button>
                    <button class='btn btn-success btn-lg' onclick='openModal("addCategoryModal")'>
                        <i class='fas fa-tags'></i>
                        –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </button>
                    <button class='btn btn-info btn-lg' onclick='openModal("addNewsModal")'>
                        <i class='fas fa-newspaper'></i>
                        –ù–æ–≤–æ—Å—Ç—å
                    </button>
                    <button class='btn btn-warning btn-lg' onclick='openModal("addPromoModal")'>
                        <i class='fas fa-percentage'></i>
                        –ü—Ä–æ–º–æ–∫–æ–¥
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- –õ–æ–∞–¥–µ—Ä -->
    <div class='loading-overlay' id='loadingOverlay'>
        <div class='spinner'></div>
    </div>

    <!-- –†–ê–°–®–ò–†–ï–ù–ù–´–ï –°–∫—Ä–∏–ø—Ç—ã -->
    <script>
        // === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===

        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }

        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('open');
        }

        function showQuickAdd() {
            openModal('quickAddModal');
        }

        function showNotification(message, type = 'info', duration = 5000) {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            document.querySelectorAll('.notification').forEach(n => n.remove());

            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class='fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}'></i>
                ${message}
            `;

            document.body.appendChild(notification);

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
            setTimeout(() => {
                notification.style.animation = 'notificationSlideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, duration);
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        document.addEventListener('DOMContentLoaded', function() {
            const notification = document.getElementById('adminNotification');
            if (notification) {
                setTimeout(() => {
                    notification.style.animation = 'notificationSlideOut 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }, 5000);
            }
        });

        // === –†–ê–°–®–ò–†–ï–ù–ù–´–ï AJAX –§–£–ù–ö–¶–ò–ò ===

        async function makeAjaxRequest(action, data = {}) {
            showLoading();

            const formData = new FormData();
            formData.append('action', action);
            formData.append('ajax', '1');

            for (let key in data) {
                if (data[key] instanceof File) {
                    formData.append(key, data[key]);
                } else if (typeof data[key] === 'object') {
                    formData.append(key, JSON.stringify(data[key]));
                } else {
                    formData.append(key, data[key]);
                }
            }

            try {
                const response = await fetch('admin.php', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                return result;
            } catch (error) {
                console.error('AJAX Error:', error);
                return { success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' };
            } finally {
                hideLoading();
            }
        }

        // === –ú–ê–°–°–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò ===

        function toggleAllCheckboxes(masterCheckbox) {
            const checkboxes = document.querySelectorAll('.table-checkbox[data-id]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = masterCheckbox.checked;
            });
            updateBulkActions();
        }

        function updateBulkActions() {
            const selectedCheckboxes = document.querySelectorAll('.table-checkbox[data-id]:checked');
            const bulkActions = document.querySelector('.bulk-actions');

            if (selectedCheckboxes.length > 0) {
                bulkActions.classList.add('show');
                document.querySelector('.bulk-actions-text').textContent = 
                    `–í—ã–±—Ä–∞–Ω–æ: ${selectedCheckboxes.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`;
            } else {
                bulkActions.classList.remove('show');
            }
        }

        async function executeBulkAction(action) {
            const selectedIds = Array.from(document.querySelectorAll('.table-checkbox[data-id]:checked'))
                .map(cb => cb.dataset.id);

            if (selectedIds.length === 0) {
                showNotification('–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞', 'warning');
                return;
            }

            if (!confirm(`–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ "${action}" –¥–ª—è ${selectedIds.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤?`)) {
                return;
            }

            const result = await makeAjaxRequest('bulk_action_products', {
                bulk_action: action,
                product_ids: selectedIds
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–û–í–ê–†–û–í ===

        async function toggleProductStatus(productId, isActive) {
            const result = await makeAjaxRequest('toggle_product_status', {
                product_id: productId,
                is_active: isActive ? '1' : '0'
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteProduct(productId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;

            const result = await makeAjaxRequest('delete_product', {
                product_id: productId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –û–¢–ó–´–í–û–í ===

        async function approveReview(reviewId) {
            const result = await makeAjaxRequest('approve_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        async function deleteReview(reviewId) {
            if (!confirm('–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤?')) return;

            const result = await makeAjaxRequest('delete_review', {
                review_id: reviewId
            });

            if (result.success) {
                showNotification(result.message, 'success');
                setTimeout(() => location.reload(), 1000);
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ö–ê–ó–û–í ===

        async function updateOrderStatus(orderId, status) {
            const result = await makeAjaxRequest('update_order_status', {
                order_id: orderId,
                status: status
            });

            if (result.success) {
                showNotification(result.message, 'success');
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –§–£–ù–ö–¶–ò–ò –≠–ö–°–ü–û–†–¢–ê ===

        async function exportData(type) {
            const result = await makeAjaxRequest('export_data', {
                export_type: type
            });

            if (result.success) {
                // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                const link = document.createElement('a');
                link.href = result.download_url;
                link.download = result.filename;
                link.click();
                showNotification('–≠–∫—Å–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤!', 'success');
            } else {
                showNotification(result.message, 'error');
            }
        }

        // === –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===

        function openModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.remove('show');
                document.body.style.overflow = '';
            }
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('show');
                document.body.style.overflow = '';
            }
        });

        // === DRAG & DROP –ó–ê–ì–†–£–ó–ö–ê ===

        function initDropZone(dropzoneId, callback) {
            const dropzone = document.getElementById(dropzoneId);
            if (!dropzone) return;

            dropzone.addEventListener('dragover', function(e) {
                e.preventDefault();
                dropzone.classList.add('dragover');
            });

            dropzone.addEventListener('dragleave', function(e) {
                e.preventDefault();
                dropzone.classList.remove('dragover');
            });

            dropzone.addEventListener('drop', function(e) {
                e.preventDefault();
                dropzone.classList.remove('dragover');

                const files = Array.from(e.dataTransfer.files);
                callback(files);
            });
        }

        // === –ì–†–ê–§–ò–ö–ò –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê ===

        async function loadChart(chartId, period = '7days', type = 'sales') {
            const result = await makeAjaxRequest('get_analytics_data', {
                period: period,
                type: type
            });

            if (result.success) {
                renderChart(chartId, result.data, type);
            }
        }

        function renderChart(chartId, data, type) {
            const ctx = document.getElementById(chartId);
            if (!ctx) return;

            new Chart(ctx, {
                type: type === 'pie' ? 'doughnut' : 'line',
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: type !== 'pie' ? {
                        y: {
                            beginAtZero: true
                        }
                    } : {}
                }
            });
        }

        // === –ê–ù–ò–ú–ê–¶–ò–ò ===

        // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const style = document.createElement('style');
        style.textContent = `
            @keyframes notificationSlideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);

        // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('fade-in');
                }
            });
        }, observerOptions);

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.stat-card, .content-card').forEach(card => {
                observer.observe(card);
            });

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤
            document.querySelectorAll('.table-checkbox[data-id]').forEach(checkbox => {
                checkbox.addEventListener('change', updateBulkActions);
            });
        });

        // === –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò ===

        let statsUpdateInterval;

        function startStatsAutoUpdate() {
            statsUpdateInterval = setInterval(async () => {
                if (window.location.search.includes('section=dashboard') || !window.location.search.includes('section=')) {
                    const result = await makeAjaxRequest('get_stats');
                    if (result.success) {
                        updateStatsDisplay(result.stats);
                    }
                }
            }, 30000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        }

        function updateStatsDisplay(stats) {
            for (let key in stats) {
                const valueElement = document.querySelector(`[data-stat='${key}'] .stat-value`);
                const changeElement = document.querySelector(`[data-stat='${key}'] .stat-change`);

                if (valueElement) {
                    valueElement.textContent = stats[key].value;
                }
                if (changeElement) {
                    changeElement.textContent = stats[key].change;
                    changeElement.className = `stat-change ${stats[key].trend}`;
                }
            }
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        document.addEventListener('DOMContentLoaded', function() {
            startStatsAutoUpdate();
        });

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', function() {
            if (statsUpdateInterval) {
                clearInterval(statsUpdateInterval);
            }
        });

        // === –ü–û–ò–°–ö –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò ===

        function initLiveSearch(inputId, targetSelector) {
            const input = document.getElementById(inputId);
            if (!input) return;

            input.addEventListener('input', function() {
                const query = this.value.toLowerCase();
                const items = document.querySelectorAll(targetSelector);

                items.forEach(item => {
                    const text = item.textContent.toLowerCase();
                    item.style.display = text.includes(query) ? '' : 'none';
                });
            });
        }

        // === –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò ===

        document.addEventListener('keydown', function(e) {
            // Ctrl+S - –ë—ã—Å—Ç—Ä–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            if (e.ctrlKey && e.key === 's') {
                e.preventDefault();
                const saveBtn = document.querySelector('.btn-success[type="submit"]');
                if (saveBtn) saveBtn.click();
            }

            // Ctrl+N - –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
            if (e.ctrlKey && e.key === 'n') {
                e.preventDefault();
                showQuickAdd();
            }

            // Escape - –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
            if (e.key === 'Escape') {
                document.querySelectorAll('.modal.show').forEach(modal => {
                    modal.classList.remove('show');
                    document.body.style.overflow = '';
                });
            }
        });

        // === –õ–û–ö–ê–õ–¨–ù–û–ï –•–†–ê–ù–ò–õ–ò–©–ï ===

        function saveToLocalStorage(key, data) {
            try {
                localStorage.setItem('akvasbor_' + key, JSON.stringify(data));
            } catch (e) {
                console.warn('LocalStorage not available');
            }
        }

        function loadFromLocalStorage(key, defaultValue = null) {
            try {
                const data = localStorage.getItem('akvasbor_' + key);
                return data ? JSON.parse(data) : defaultValue;
            } catch (e) {
                return defaultValue;
            }
        }

        // === –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò ===

        function initNotifications() {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            setInterval(async () => {
                const result = await makeAjaxRequest('check_new_orders');
                if (result.success && result.new_orders > 0) {
                    showNotification(`${result.new_orders} –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤!`, 'info');
                }
            }, 60000);
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        document.addEventListener('DOMContentLoaded', function() {
            initNotifications();
        });
    </script>
</body>
</html>

<?php

// === –†–ê–°–®–ò–†–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–ê–ù–ù–´–• –ê–î–ú–ò–ù–ö–ò ===

function getAdminData($section) {
    switch ($section) {
        case 'dashboard':
            return [
                'title' => 'KPI –î–∞—à–±–æ—Ä–¥',
                'stats' => getDashboardStats(),
                'recent_activity' => getRecentActivity(),
                'charts' => getDashboardCharts()
            ];
        case 'analytics':
            return [
                'title' => '–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                'charts_data' => getAnalyticsChartData(),
                'metrics' => getAdvancedMetrics()
            ];
        case 'reports':
            return [
                'title' => '–û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                'reports' => getAvailableReports()
            ];
        case 'conversion':
            return [
                'title' => '–í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂',
                'funnel_data' => getConversionFunnel()
            ];
        case 'products':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏',
                'products' => getProducts(),
                'categories' => getCategories(),
                'stats' => getProductsStats()
            ];
        case 'categories':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
                'categories' => getCategories(),
                'stats' => getCategoriesStats()
            ];
        case 'inventory':
            return [
                'title' => '–°–∫–ª–∞–¥ –∏ –æ—Å—Ç–∞—Ç–∫–∏',
                'inventory' => getInventoryData(),
                'low_stock' => getLowStockProducts()
            ];
        case 'pricing':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–∞–º–∏',
                'pricing_rules' => getPricingRules(),
                'promotions' => getActivePromotions()
            ];
        case 'orders':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏',
                'orders' => getOrders(),
                'stats' => getOrdersStats()
            ];
        case 'customers':
            return [
                'title' => '–ë–∞–∑–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π',
                'customers' => getCustomers(),
                'segments' => getCustomerSegments()
            ];
        case 'shipping':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–æ–π',
                'shipping_methods' => getShippingMethods(),
                'zones' => getDeliveryZones()
            ];
        case 'payments':
            return [
                'title' => '–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
                'payment_methods' => getPaymentMethods(),
                'transactions' => getRecentTransactions()
            ];
        case 'promotions':
            return [
                'title' => '–ê–∫—Ü–∏–∏ –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã',
                'promotions' => getPromotions(),
                'coupons' => getCoupons()
            ];
        case 'reviews':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏',
                'reviews' => getReviews(),
                'stats' => getReviewsStats()
            ];
        case 'email':
            return [
                'title' => 'Email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
                'campaigns' => getEmailCampaigns(),
                'templates' => getEmailTemplates()
            ];
        case 'seo':
            return [
                'title' => 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
                'seo_data' => getSEOData(),
                'keywords' => getKeywords()
            ];
        case 'news':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏',
                'news' => getNews(),
                'stats' => getNewsStats()
            ];
        case 'pages':
            return [
                'title' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏',
                'pages' => getPages()
            ];
        case 'media':
            return [
                'title' => '–ú–µ–¥–∏–∞ –≥–∞–ª–µ—Ä–µ—è',
                'media' => getMediaFiles(),
                'storage' => getStorageInfo()
            ];
        case 'blog':
            return [
                'title' => '–ë–ª–æ–≥',
                'posts' => getBlogPosts(),
                'categories' => getBlogCategories()
            ];
        case 'settings':
            return [
                'title' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
                'settings' => getSiteSettings(),
                'modules' => getAvailableModules()
            ];
        case 'integrations':
            return [
                'title' => '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ API',
                'integrations' => getIntegrations()
            ];
        case 'backup':
            return [
                'title' => 'Backup –∏ —ç–∫—Å–ø–æ—Ä—Ç',
                'backups' => getBackups(),
                'export_options' => getExportOptions()
            ];
        case 'logs':
            return [
                'title' => '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏',
                'logs' => getSystemLogs()
            ];
        case 'security':
            return [
                'title' => '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                'security_status' => getSecurityStatus(),
                'blocked_ips' => getBlockedIPs()
            ];
        default:
            return [
                'title' => ucfirst($section),
                'description' => "–†–∞–∑–¥–µ–ª '$section' –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
            ];
    }
}

function getPageIcon($section) {
    $icons = [
        'dashboard' => 'fas fa-chart-pie',
        'analytics' => 'fas fa-chart-line',
        'reports' => 'fas fa-file-chart-column',
        'conversion' => 'fas fa-funnel-dollar',
        'products' => 'fas fa-fish',
        'categories' => 'fas fa-tags',
        'inventory' => 'fas fa-warehouse',
        'pricing' => 'fas fa-tag',
        'orders' => 'fas fa-shopping-bag',
        'customers' => 'fas fa-users',
        'shipping' => 'fas fa-truck',
        'payments' => 'fas fa-credit-card',
        'promotions' => 'fas fa-percentage',
        'reviews' => 'fas fa-star',
        'email' => 'fas fa-envelope',
        'seo' => 'fas fa-search',
        'news' => 'fas fa-newspaper',
        'pages' => 'fas fa-file-alt',
        'media' => 'fas fa-images',
        'blog' => 'fas fa-blog',
        'settings' => 'fas fa-cog',
        'integrations' => 'fas fa-plug',
        'backup' => 'fas fa-download',
        'logs' => 'fas fa-list-alt',
        'security' => 'fas fa-shield-alt'
    ];

    return $icons[$section] ?? 'fas fa-cog';
}

// === –†–ê–°–®–ò–†–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –°–¢–ê–¢–ò–°–¢–ò–ö–ò ===

function getDashboardStats() {
    $products = getProducts();
    $orders = getOrders();
    $reviews = getReviews();
    $categories = getCategories();

    $totalRevenue = array_sum(array_column($orders, 'total_amount'));
    $newOrders = count(array_filter($orders, fn($o) => $o['status'] === 'new'));
    $activeProducts = count(array_filter($products, fn($p) => $p['is_active']));
    $avgRating = count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0;
    $pendingReviews = count(array_filter($reviews, fn($r) => !$r['is_approved']));

    // –î–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–æ—Å—Ç–∞
    $monthAgo = date('Y-m-d', strtotime('-30 days'));
    $monthlyOrders = array_filter($orders, fn($o) => $o['created_at'] >= $monthAgo);
    $monthlyRevenue = array_sum(array_column($monthlyOrders, 'total_amount'));
    $monthlyNewCustomers = count(array_unique(array_column($monthlyOrders, 'customer_email')));

    return [
        'revenue' => [
            'value' => number_format($totalRevenue, 0, '', ' ') . ' ‚ÇΩ',
            'label' => '–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞',
            'change' => '+' . number_format($monthlyRevenue, 0, '', ' ') . ' ‚ÇΩ –∑–∞ –º–µ—Å—è—Ü',
            'trend' => 'positive',
            'icon' => 'fas fa-ruble-sign'
        ],
        'orders' => [
            'value' => count($orders),
            'label' => '–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤',
            'change' => '+' . $newOrders . ' –Ω–æ–≤—ã—Ö',
            'trend' => $newOrders > 0 ? 'positive' : 'neutral',
            'icon' => 'fas fa-shopping-bag'
        ],
        'products' => [
            'value' => $activeProducts,
            'label' => '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
            'change' => '–∏–∑ ' . count($products) . ' –≤—Å–µ–≥–æ',
            'trend' => 'neutral',
            'icon' => 'fas fa-fish'
        ],
        'rating' => [
            'value' => number_format($avgRating, 1),
            'label' => '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥',
            'change' => count($reviews) . ' –æ—Ç–∑—ã–≤–æ–≤',
            'trend' => $avgRating >= 4 ? 'positive' : ($avgRating >= 3 ? 'neutral' : 'negative'),
            'icon' => 'fas fa-star'
        ],
        'customers' => [
            'value' => getCustomersCount(),
            'label' => '–í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤',
            'change' => '+' . $monthlyNewCustomers . ' –∑–∞ –º–µ—Å—è—Ü',
            'trend' => 'positive',
            'icon' => 'fas fa-users'
        ],
        'conversion' => [
            'value' => number_format(calculateConversion(), 1) . '%',
            'label' => '–ö–æ–Ω–≤–µ—Ä—Å–∏—è',
            'change' => '—Å—Ä–µ–¥–Ω—è—è –ø–æ —Å–∞–π—Ç—É',
            'trend' => 'positive',
            'icon' => 'fas fa-percentage'
        ]
    ];
}

function getDashboardCharts() {
    return [
        'sales' => generateSalesChartData(30),
        'categories' => generateCategoriesChartData(),
        'orders_by_status' => generateOrdersStatusChart()
    ];
}

function getAdvancedMetrics() {
    $orders = getOrders();
    $products = getProducts();

    return [
        'avg_order_value' => calculateAverageOrderValue(),
        'repeat_customers' => calculateRepeatCustomers(),
        'top_products' => getTopSellingProducts(10),
        'revenue_growth' => calculateRevenueGrowth(),
        'customer_lifetime_value' => calculateCustomerLTV()
    ];
}

// === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

function getCustomersCount() {
    $orders = getOrders();
    return count(array_unique(array_column($orders, 'customer_email')));
}

function getLowStockCount() {
    $products = getProducts();
    return count(array_filter($products, fn($p) => $p['stock'] <= 5));
}

function calculateConversion() {
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
    $orders = getOrders();
    $monthlyOrders = array_filter($orders, fn($o) => $o['created_at'] >= date('Y-m-d', strtotime('-30 days')));
    $visitors = 1000; // –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
    return count($monthlyOrders) / $visitors * 100;
}

function calculateAverageOrderValue() {
    $orders = getOrders();
    if (empty($orders)) return 0;
    return array_sum(array_column($orders, 'total_amount')) / count($orders);
}

function calculateRepeatCustomers() {
    $orders = getOrders();
    $customerOrders = array_count_values(array_column($orders, 'customer_email'));
    return count(array_filter($customerOrders, fn($count) => $count > 1));
}

function getTopSellingProducts($limit = 10) {
    $products = getProducts();
    usort($products, fn($a, $b) => $b['sales'] - $a['sales']);
    return array_slice($products, 0, $limit);
}

function calculateRevenueGrowth() {
    $orders = getOrders();
    $currentMonth = array_filter($orders, fn($o) => date('Y-m', strtotime($o['created_at'])) === date('Y-m'));
    $previousMonth = array_filter($orders, fn($o) => date('Y-m', strtotime($o['created_at'])) === date('Y-m', strtotime('-1 month')));

    $currentRevenue = array_sum(array_column($currentMonth, 'total_amount'));
    $previousRevenue = array_sum(array_column($previousMonth, 'total_amount'));

    return $previousRevenue > 0 ? (($currentRevenue - $previousRevenue) / $previousRevenue) * 100 : 0;
}

function calculateCustomerLTV() {
    $avgOrderValue = calculateAverageOrderValue();
    $avgOrdersPerCustomer = 2.5; // –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    return $avgOrderValue * $avgOrdersPerCustomer;
}

// === –§–£–ù–ö–¶–ò–ò –ú–ê–°–°–û–í–´–• –û–ü–ï–†–ê–¶–ò–ô ===

function bulkActionProducts($action, $productIds) {
    try {
        $dynamicData = loadDynamicData();
        if (!$dynamicData) {
            return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö'];
        }

        $products = &$dynamicData['products'];
        $affected = 0;

        foreach ($productIds as $productId) {
            $productIndex = array_search($productId, array_column($products, 'id'));
            if ($productIndex === false) continue;

            switch ($action) {
                case 'activate':
                    $products[$productIndex]['is_active'] = true;
                    $affected++;
                    break;
                case 'deactivate':
                    $products[$productIndex]['is_active'] = false;
                    $affected++;
                    break;
                case 'feature':
                    $products[$productIndex]['is_featured'] = true;
                    $affected++;
                    break;
                case 'unfeature':
                    $products[$productIndex]['is_featured'] = false;
                    $affected++;
                    break;
                case 'delete':
                    array_splice($products, $productIndex, 1);
                    $affected++;
                    break;
            }
        }

        if ($affected > 0) {
            $dynamicData['last_updated'] = date('Y-m-d H:i:s');
            saveDynamicData($dynamicData);
        }

        return ['success' => true, 'message' => "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $affected"];
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞: ' . $e->getMessage()];
    }
}

// === –§–£–ù–ö–¶–ò–ò –≠–ö–°–ü–û–†–¢–ê ===

function exportData($type) {
    try {
        switch ($type) {
            case 'products':
                return exportProducts();
            case 'orders':
                return exportOrders();
            case 'customers':
                return exportCustomers();
            default:
                return ['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —ç–∫—Å–ø–æ—Ä—Ç–∞'];
        }
    } catch (Exception $e) {
        return ['success' => false, 'message' => '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ' . $e->getMessage()];
    }
}

function exportProducts() {
    $products = getProducts();
    $filename = 'products_' . date('Y-m-d_H-i-s') . '.csv';
    $filepath = 'exports/' . $filename;

    if (!file_exists('exports')) {
        mkdir('exports', 0755, true);
    }

    $file = fopen($filepath, 'w');
    fputcsv($file, ['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–¶–µ–Ω–∞', '–û—Å—Ç–∞—Ç–æ–∫', '–°—Ç–∞—Ç—É—Å']);

    foreach ($products as $product) {
        fputcsv($file, [
            $product['id'],
            $product['name'],
            $product['category'],
            $product['price'],
            $product['stock'],
            $product['is_active'] ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'
        ]);
    }

    fclose($file);

    return [
        'success' => true,
        'filename' => $filename,
        'download_url' => $filepath
    ];
}

function exportOrders() {
    $orders = getOrders();
    $filename = 'orders_' . date('Y-m-d_H-i-s') . '.csv';
    $filepath = 'exports/' . $filename;

    if (!file_exists('exports')) {
        mkdir('exports', 0755, true);
    }

    $file = fopen($filepath, 'w');
    fputcsv($file, ['‚Ññ –ó–∞–∫–∞–∑–∞', '–ö–ª–∏–µ–Ω—Ç', 'Email', '–¢–µ–ª–µ—Ñ–æ–Ω', '–°—É–º–º–∞', '–°—Ç–∞—Ç—É—Å', '–î–∞—Ç–∞']);

    foreach ($orders as $order) {
        fputcsv($file, [
            $order['order_number'],
            $order['customer_name'],
            $order['customer_email'],
            $order['customer_phone'],
            $order['total_amount'],
            $order['status_label'],
            date('d.m.Y H:i', strtotime($order['created_at']))
        ]);
    }

    fclose($file);

    return [
        'success' => true,
        'filename' => $filename,
        'download_url' => $filepath
    ];
}

// === –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ò–ù–ì–ê –†–ê–ó–î–ï–õ–û–í ===

function renderAdminSection($section, $data) {
    switch ($section) {
        case 'dashboard':
            renderDashboard($data);
            break;
        case 'analytics':
            renderAnalytics($data);
            break;
        case 'reports':
            renderReports($data);
            break;
        case 'conversion':
            renderConversion($data);
            break;
        case 'products':
            renderProductsSection($data);
            break;
        case 'categories':
            renderCategoriesSection($data);
            break;
        case 'inventory':
            renderInventory($data);
            break;
        case 'pricing':
            renderPricing($data);
            break;
        case 'orders':
            renderOrdersSection($data);
            break;
        case 'customers':
            renderCustomers($data);
            break;
        case 'shipping':
            renderShipping($data);
            break;
        case 'payments':
            renderPayments($data);
            break;
        case 'promotions':
            renderPromotions($data);
            break;
        case 'reviews':
            renderReviewsSection($data);
            break;
        case 'email':
            renderEmailMarketing($data);
            break;
        case 'seo':
            renderSEO($data);
            break;
        case 'news':
            renderNewsSection($data);
            break;
        case 'pages':
            renderPages($data);
            break;
        case 'media':
            renderMedia($data);
            break;
        case 'blog':
            renderBlog($data);
            break;
        case 'settings':
            renderSettingsSection($data);
            break;
        case 'integrations':
            renderIntegrations($data);
            break;
        case 'backup':
            renderBackup($data);
            break;
        case 'logs':
            renderLogsSection($data);
            break;
        case 'security':
            renderSecurity($data);
            break;
        default:
            renderDefaultSection($section, $data);
    }
}

// === –†–ê–°–®–ò–†–ï–ù–ù–´–ô –î–ê–®–ë–û–†–î ===
function renderDashboard($data) {
    $stats = $data['stats'];
    $activity = $data['recent_activity'] ?? [];
    ?>
    <!-- –†–ê–°–®–ò–†–ï–ù–ù–´–ï KPI –ö–∞—Ä—Ç–æ—á–∫–∏ -->
    <div class='stats-grid'>
        <?php foreach ($stats as $key => $stat): ?>
            <div class='stat-card stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>' data-stat='<?= $key ?>'>
                <div class='stat-header'>
                    <div class='stat-icon stat-<?= $stat['trend'] === 'positive' ? 'success' : ($stat['trend'] === 'negative' ? 'danger' : 'primary') ?>'>
                        <i class='<?= $stat['icon'] ?>'></i>
                    </div>
                    <div class='stat-trend'>
                        <i class='fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>'></i>
                    </div>
                </div>

                <div class='stat-value'><?= $stat['value'] ?></div>
                <div class='stat-label'><?= $stat['label'] ?></div>
                <div class='stat-change <?= $stat['trend'] ?>'>
                    <i class='fas fa-<?= $stat['trend'] === 'positive' ? 'arrow-up' : ($stat['trend'] === 'negative' ? 'arrow-down' : 'minus') ?>'></i>
                    <?= $stat['change'] ?>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- –ì–†–ê–§–ò–ö–ò –ü–†–û–î–ê–ñ -->
    <div style='display: grid; grid-template-columns: 2fr 1fr; gap: 32px; margin-bottom: 40px;'>
        <div class='content-card'>
            <div class='content-card-header'>
                <h3 class='content-card-title'>
                    <i class='fas fa-chart-line'></i>
                    –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂
                </h3>
                <div class='content-card-actions'>
                    <select class='form-select' onchange='loadChart("salesChart", this.value)'>
                        <option value='7days'>7 –¥–Ω–µ–π</option>
                        <option value='30days' selected>30 –¥–Ω–µ–π</option>
                        <option value='90days'>90 –¥–Ω–µ–π</option>
                    </select>
                    <button class='btn btn-outline btn-sm' onclick='refreshChart("salesChart")'>
                        <i class='fas fa-sync-alt'></i>
                    </button>
                </div>
            </div>
            <div class='content-card-body'>
                <div class='chart-container'>
                    <canvas id='salesChart'></canvas>
                </div>
            </div>
        </div>

        <div class='content-card'>
            <div class='content-card-header'>
                <h3 class='content-card-title'>
                    <i class='fas fa-chart-pie'></i>
                    –¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                </h3>
            </div>
            <div class='content-card-body'>
                <div class='chart-container'>
                    <canvas id='categoriesChart'></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-bolt'></i>
                –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;'>
                <button class='btn btn-primary btn-xl' onclick='openModal("addProductModal")'>
                    <i class='fas fa-plus'></i>
                    –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                </button>
                <button class='btn btn-success btn-xl' onclick='exportData("orders")'>
                    <i class='fas fa-download'></i>
                    –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤
                </button>
                <button class='btn btn-warning btn-xl' onclick='openModal("bulkPricingModal")'>
                    <i class='fas fa-tags'></i>
                    –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—ã
                </button>
                <button class='btn btn-info btn-xl' onclick='openModal("emailCampaignModal")'>
                    <i class='fas fa-envelope'></i>
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
                </button>
            </div>
        </div>
    </div>

    <!-- –ü–û–°–õ–ï–î–ù–Ø–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨ –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-clock'></i>
                –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
            </h3>
            <div class='content-card-actions'>
                <button class='btn btn-outline btn-sm' onclick='location.reload()'>
                    <i class='fas fa-sync-alt'></i>
                    –û–±–Ω–æ–≤–∏—Ç—å
                </button>
                <button class='btn btn-outline btn-sm' onclick='exportActivity()'>
                    <i class='fas fa-download'></i>
                    –≠–∫—Å–ø–æ—Ä—Ç
                </button>
            </div>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; gap: 16px;'>
                <?php foreach (getRecentActivity() as $item): ?>
                    <div style='display: flex; align-items: center; gap: 16px; padding: 16px; background: var(--bg-secondary); border-radius: var(--border-radius-lg); border-left: 4px solid var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color);'>
                        <div style='width: 50px; height: 50px; border-radius: 50%; background: var(--<?= $item['type'] === 'success' ? 'success' : ($item['type'] === 'primary' ? 'primary' : 'info') ?>-color); display: flex; align-items: center; justify-content: center; color: white;'>
                            <i class='<?= $item['icon'] ?>'></i>
                        </div>
                        <div style='flex: 1;'>
                            <div style='font-weight: 600; margin-bottom: 4px;'><?= $item['action'] ?></div>
                            <div style='color: var(--text-secondary); font-size: 14px; margin-bottom: 4px;'><?= $item['details'] ?></div>
                            <div style='color: var(--text-muted); font-size: 12px;'><?= $item['time'] ?></div>
                        </div>
                        <div class='status-badge status-<?= $item['type'] ?>'>
                            <?= ucfirst($item['type']) ?>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
    </div>

    <!-- –°–ö–†–ò–ü–¢–´ –î–ê–®–ë–û–†–î–ê -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
            loadChart('salesChart', '30days', 'sales');
            loadChart('categoriesChart', '30days', 'pie');
        });

        function refreshChart(chartId) {
            const canvas = document.getElementById(chartId);
            if (canvas && canvas.chart) {
                canvas.chart.destroy();
            }
            loadChart(chartId, '30days', chartId === 'categoriesChart' ? 'pie' : 'sales');
        }

        function exportActivity() {
            showNotification('–≠–∫—Å–ø–æ—Ä—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç...', 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
        }
    </script>
    <?php
}

// === –ê–ù–ê–õ–ò–¢–ò–ö–ê –ò –û–¢–ß–ï–¢–´ ===
function renderAnalytics($data) {
    ?>
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-chart-line'></i>
                –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
            </h3>
            <div class='content-card-actions'>
                <select class='form-select' id='analyticsPeriod' onchange='updateAnalytics(this.value)'>
                    <option value='7days'>7 –¥–Ω–µ–π</option>
                    <option value='30days' selected>30 –¥–Ω–µ–π</option>
                    <option value='90days'>3 –º–µ—Å—è—Ü–∞</option>
                    <option value='365days'>–ì–æ–¥</option>
                </select>
                <button class='btn btn-primary' onclick='generateReport()'>
                    <i class='fas fa-file-pdf'></i>
                    –û—Ç—á–µ—Ç PDF
                </button>
            </div>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); gap: 30px;'>
                <!-- –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ -->
                <div class='chart-container'>
                    <div class='chart-header'>
                        <h4 class='chart-title'>–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–Ω—è–º</h4>
                    </div>
                    <canvas id='salesLineChart'></canvas>
                </div>

                <!-- –ì—Ä–∞—Ñ–∏–∫ –∑–∞–∫–∞–∑–æ–≤ -->
                <div class='chart-container'>
                    <div class='chart-header'>
                        <h4 class='chart-title'>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤</h4>
                    </div>
                    <canvas id='ordersChart'></canvas>
                </div>

                <!-- –¢–æ–ø —Ç–æ–≤–∞—Ä—ã -->
                <div class='chart-container'>
                    <div class='chart-header'>
                        <h4 class='chart-title'>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
                    </div>
                    <canvas id='topProductsChart'></canvas>
                </div>

                <!-- –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–¥–∞–∂ -->
                <div class='chart-container'>
                    <div class='chart-header'>
                        <h4 class='chart-title'>–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –∑–∞–∫–∞–∑–æ–≤</h4>
                    </div>
                    <canvas id='geoChart'></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–ï–¢–†–ò–ö–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò -->
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr);'>
        <div class='stat-card stat-success'>
            <div class='stat-value'><?= number_format(calculateConversion(), 1) ?>%</div>
            <div class='stat-label'>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                +2.3% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É
            </div>
        </div>
        <div class='stat-card stat-primary'>
            <div class='stat-value'><?= number_format(calculateAverageOrderValue(), 0, '', ' ') ?> ‚ÇΩ</div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                +15% —Ä–æ—Å—Ç
            </div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-value'><?= calculateRepeatCustomers() ?></div>
            <div class='stat-label'>–ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫</div>
            <div class='stat-change neutral'>
                <i class='fas fa-minus'></i>
                –°—Ç–∞–±–∏–ª—å–Ω–æ
            </div>
        </div>
        <div class='stat-card stat-danger'>
            <div class='stat-value'><?= number_format(calculateCustomerLTV(), 0, '', ' ') ?> ‚ÇΩ</div>
            <div class='stat-label'>LTV –∫–ª–∏–µ–Ω—Ç–∞</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                –†–∞—Å—Ç–µ—Ç
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeAnalyticsCharts();
        });

        async function initializeAnalyticsCharts() {
            await loadChart('salesLineChart', '30days', 'line');
            await loadChart('ordersChart', '30days', 'bar');
            await loadChart('topProductsChart', '30days', 'horizontalBar');
            await loadChart('geoChart', '30days', 'doughnut');
        }

        async function updateAnalytics(period) {
            showLoading();

            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏
            await Promise.all([
                loadChart('salesLineChart', period, 'line'),
                loadChart('ordersChart', period, 'bar'),
                loadChart('topProductsChart', period, 'horizontalBar'),
                loadChart('geoChart', period, 'doughnut')
            ]);

            hideLoading();
            showNotification('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞', 'success');
        }

        function generateReport() {
            const period = document.getElementById('analyticsperiod').value;
            showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –æ—Ç—á–µ—Ç–∞...', 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
        }
    </script>
    <?php
}

// === –†–ê–°–®–ò–†–ï–ù–ù–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò ===
function renderProductsSection($data) {
    $products = $data['products'];
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class='stats-grid' style='grid-template-columns: repeat(5, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-icon'><i class='fas fa-fish'></i></div>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-icon stat-success'><i class='fas fa-check-circle'></i></div>
            <div class='stat-value'><?= $stats['active'] ?></div>
            <div class='stat-label'>–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-icon stat-warning'><i class='fas fa-star'></i></div>
            <div class='stat-value'><?= $stats['featured'] ?></div>
            <div class='stat-label'>–ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö</div>
        </div>
        <div class='stat-card stat-danger'>
            <div class='stat-icon stat-danger'><i class='fas fa-exclamation-triangle'></i></div>
            <div class='stat-value'><?= $stats['low_stock'] ?></div>
            <div class='stat-label'>–ú–∞–ª–æ —Ç–æ–≤–∞—Ä–∞</div>
        </div>
        <div class='stat-card stat-primary'>
            <div class='stat-icon'><i class='fas fa-ruble-sign'></i></div>
            <div class='stat-value'><?= number_format(array_sum(array_column($products, 'price')) / count($products), 0, '', ' ') ?></div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
        </div>
    </div>

    <!-- –î–ï–ô–°–¢–í–ò–Ø –ò –§–ò–õ–¨–¢–†–´ -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-filter'></i>
                –§–∏–ª—å—Ç—Ä—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 20px;'>
                <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                <div style='display: flex; gap: 12px; align-items: center;'>
                    <button class='btn btn-success btn-lg' onclick='openModal("addProductModal")'>
                        <i class='fas fa-plus'></i>
                        –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                    <button class='btn btn-primary' onclick='openModal("importProductsModal")'>
                        <i class='fas fa-upload'></i>
                        –ò–º–ø–æ—Ä—Ç CSV
                    </button>
                    <button class='btn btn-outline' onclick='exportData("products")'>
                        <i class='fas fa-download'></i>
                        –≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                </div>

                <!-- –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã -->
                <div style='display: flex; gap: 12px; align-items: center;'>
                    <input type='text' placeholder='–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...' class='form-input' style='min-width: 250px;' 
                           onkeyup='searchProducts(this.value)' id='productsSearch'>
                    <select class='form-select' onchange='filterByCategory(this.value)' id='categoryFilter'>
                        <option value=''>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                        <?php foreach ($categories as $category): ?>
                            <option value='<?= $category['id'] ?>'><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                        <?php endforeach; ?>
                    </select>
                    <select class='form-select' onchange='filterByStatus(this.value)'>
                        <option value=''>–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                        <option value='active'>–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                        <option value='inactive'>–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
                        <option value='featured'>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</option>
                        <option value='low_stock'>–ú–∞–ª–æ —Ç–æ–≤–∞—Ä–∞</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–ê–°–°–û–í–´–ï –î–ï–ô–°–¢–í–ò–Ø -->
    <div class='bulk-actions' id='bulkActions'>
        <div class='bulk-actions-text'>–í—ã–±—Ä–∞–Ω–æ: 0 —Ç–æ–≤–∞—Ä–æ–≤</div>
        <div class='bulk-actions-buttons'>
            <button class='btn btn-success btn-sm' onclick='executeBulkAction("activate")'>
                <i class='fas fa-check'></i>
                –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <button class='btn btn-outline btn-sm' onclick='executeBulkAction("deactivate")'>
                <i class='fas fa-times'></i>
                –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <button class='btn btn-warning btn-sm' onclick='executeBulkAction("feature")'>
                <i class='fas fa-star'></i>
                –í –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ
            </button>
            <button class='btn btn-danger btn-sm' onclick='executeBulkAction("delete")'>
                <i class='fas fa-trash'></i>
                –£–¥–∞–ª–∏—Ç—å
            </button>
        </div>
    </div>

    <!-- –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ -->
    <div class='content-card'>
        <div class='table-container'>
            <table class='table' id='productsTable'>
                <thead>
                    <tr>
                        <th style='width: 40px;'>
                            <input type='checkbox' class='table-checkbox' onchange='toggleAllCheckboxes(this)'>
                        </th>
                        <th style='width: 80px;'>–§–æ—Ç–æ</th>
                        <th>–¢–æ–≤–∞—Ä</th>
                        <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                        <th>–¶–µ–Ω–∞</th>
                        <th>–û—Å—Ç–∞—Ç–æ–∫</th>
                        <th>–ü—Ä–æ–¥–∞–Ω–æ</th>
                        <th>–†–µ–π—Ç–∏–Ω–≥</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th style='width: 160px;'>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($products as $product): ?>
                        <tr data-category='<?= $product['category_id'] ?>' data-name='<?= strtolower($product['name']) ?>' 
                            data-status='<?= $product['is_active'] ? 'active' : 'inactive' ?>'>
                            <td>
                                <input type='checkbox' class='table-checkbox' data-id='<?= $product['id'] ?>' onchange='updateBulkActions()'>
                            </td>
                            <td>
                                <div style='width: 60px; height: 60px; border-radius: var(--border-radius); overflow: hidden; background: var(--bg-tertiary); display: flex; align-items: center; justify-content: center; cursor: pointer;' onclick='previewProductImages(<?= $product['id'] ?>)'>
                                    <?php if (!empty($product['images'])): ?>
                                        <img src='<?= htmlspecialchars($product['images'][0]) ?>' alt='<?= htmlspecialchars($product['name']) ?>' style='width: 100%; height: 100%; object-fit: cover;'>
                                    <?php else: ?>
                                        <i class='fas fa-image' style='color: var(--text-muted);'></i>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600; margin-bottom: 6px; cursor: pointer;' onclick='editProduct(<?= $product['id'] ?>)'>
                                    <?= htmlspecialchars(mb_substr($product['name'], 0, 50)) ?><?= mb_strlen($product['name']) > 50 ? '...' : '' ?>
                                </div>
                                <div style='font-size: 11px; color: var(--text-muted); margin-bottom: 4px;'>
                                    <span>ID: <?= $product['id'] ?></span> ‚Ä¢ <span>SKU: <?= $product['sku'] ?></span>
                                </div>
                                <div style='margin-top: 6px;'>
                                    <?php if ($product['is_featured']): ?>
                                        <span class='status-badge' style='background: gold; color: white; font-size: 10px;'>üî• –•–ò–¢</span>
                                    <?php endif; ?>
                                    <?php if ($product['is_new']): ?>
                                        <span class='status-badge status-new' style='font-size: 10px;'>‚ú® NEW</span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td>
                                <span class='status-badge status-new'>
                                    <?= htmlspecialchars($product['category']) ?>
                                </span>
                            </td>
                            <td>
                                <div style='font-weight: 700; color: var(--success-color); font-size: 16px;'><?= number_format($product['price'], 0, '', ' ') ?> ‚ÇΩ</div>
                                <?php if ($product['old_price']): ?>
                                    <div style='font-size: 11px; color: var(--text-muted); text-decoration: line-through;'>
                                        <?= number_format($product['old_price'], 0, '', ' ') ?> ‚ÇΩ
                                    </div>
                                <?php endif; ?>
                            </td>
                            <td>
                                <div class='status-badge <?= $product['stock'] <= 0 ? 'status-cancelled' : ($product['stock'] <= 5 ? 'status-processing' : 'status-completed') ?>'>
                                    <?= $product['stock'] ?> —à—Ç
                                </div>
                                <div style='font-size: 10px; color: var(--text-muted); margin-top: 2px;'>
                                    –í–µ—Å: <?= $product['weight'] ?>–≥
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600;'><?= $product['sales'] ?? 0 ?></div>
                                <div style='font-size: 10px; color: var(--text-muted);'>–ø—Ä–æ–¥–∞–Ω–æ</div>
                            </td>
                            <td>
                                <div style='color: gold; font-weight: 600;'>
                                    <?= number_format($product['rating'] ?? 0, 1) ?> ‚≠ê
                                </div>
                                <div style='font-size: 10px; color: var(--text-muted);'>
                                    (<?= $product['reviews_count'] ?? 0 ?> –æ—Ç–∑.)
                                </div>
                            </td>
                            <td>
                                <label style='display: flex; align-items: center; cursor: pointer;'>
                                    <input type='checkbox' <?= $product['is_active'] ? 'checked' : '' ?>
                                           onchange='toggleProductStatus(<?= $product['id'] ?>, this.checked)'
                                           style='margin-right: 8px;'>
                                    <span class='status-badge <?= $product['is_active'] ? 'status-active' : 'status-inactive' ?>'>
                                        <?= $product['is_active'] ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–°–∫—Ä—ã—Ç' ?>
                                    </span>
                                </label>
                            </td>
                            <td>
                                <div style='display: flex; gap: 6px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='editProduct(<?= $product['id'] ?>)' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='duplicateProduct(<?= $product['id'] ?>)' title='–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å'>
                                        <i class='fas fa-copy'></i>
                                    </button>
                                    <button class='btn btn-warning btn-sm' onclick='previewProduct(<?= $product['id'] ?>)' title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <button class='btn btn-danger btn-sm' onclick='deleteProduct(<?= $product['id'] ?>)' title='–£–¥–∞–ª–∏—Ç—å'>
                                        <i class='fas fa-trash'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <!-- –†–ê–°–®–ò–†–ï–ù–ù–û–ï –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
    <div class='modal' id='addProductModal'>
        <div class='modal-dialog modal-xl'>
            <form method='post' enctype='multipart/form-data'>
                <input type='hidden' name='action' value='create_product'>
                <div class='modal-header'>
                    <h3 class='modal-title'>
                        <i class='fas fa-plus'></i>
                        –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
                    </h3>
                    <button type='button' class='modal-close' onclick='closeModal("addProductModal")'>&times;</button>
                </div>
                <div class='modal-body'>
                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
                            <input type='text' name='name' class='form-input' required placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                            <select name='category_id' class='form-select' required>
                                <option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                <?php foreach ($categories as $category): ?>
                                    <option value='<?= $category['id'] ?>'><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                    </div>

                    <!-- –¶–µ–Ω—ã –∏ –æ—Å—Ç–∞—Ç–∫–∏ -->
                    <div class='form-row-4'>
                        <div class='form-group'>
                            <label class='form-label'>–¶–µ–Ω–∞ (‚ÇΩ) *</label>
                            <input type='number' name='price' class='form-input' min='0' step='0.01' required>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (‚ÇΩ)</label>
                            <input type='number' name='old_price' class='form-input' min='0' step='0.01'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ *</label>
                            <input type='number' name='stock' class='form-input' min='0' value='1' required>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–í–µ—Å (–≥)</label>
                            <input type='number' name='weight' class='form-input' min='0' value='100'>
                        </div>
                    </div>

                    <!-- –û–ø–∏—Å–∞–Ω–∏—è -->
                    <div class='form-group'>
                        <label class='form-label'>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name='short_description' class='form-textarea' rows='2' placeholder='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞'></textarea>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name='description' class='form-textarea' rows='4' placeholder='–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'></textarea>
                    </div>

                    <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                    <div class='form-group'>
                        <label class='form-label'>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞</label>
                        <div class='dropzone' id='productImagesDropzone'>
                            <i class='dropzone-icon fas fa-cloud-upload-alt'></i>
                            <div class='dropzone-text'>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</div>
                            <div class='dropzone-hint'>PNG, JPG, WEBP –¥–æ 5MB –∫–∞–∂–¥–æ–µ</div>
                            <input type='file' name='images[]' multiple accept='image/*' style='display: none;'>
                        </div>
                    </div>

                    <!-- SEO -->
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>Meta Title</label>
                            <input type='text' name='meta_title' class='form-input' placeholder='SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>Meta Keywords</label>
                            <input type='text' name='meta_keywords' class='form-input' placeholder='–∫–ª—é—á–µ–≤—ã–µ, —Å–ª–æ–≤–∞, —á–µ—Ä–µ–∑, –∑–∞–ø—è—Ç—É—é'>
                        </div>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>Meta Description</label>
                        <textarea name='meta_description' class='form-textarea' rows='2' placeholder='SEO –æ–ø–∏—Å–∞–Ω–∏–µ'></textarea>
                    </div>

                    <!-- –û–ø—Ü–∏–∏ -->
                    <div style='display: flex; gap: 30px; align-items: center; flex-wrap: wrap;'>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='is_featured'>
                            <span>üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='is_new'>
                            <span>‚ú® –ù–æ–≤–∏–Ω–∫–∞</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='is_active' checked>
                            <span>üëÅÔ∏è –ê–∫—Ç–∏–≤–µ–Ω (–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ)</span>
                        </label>
                    </div>
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("addProductModal")'>
                        <i class='fas fa-times'></i>
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-save'></i>
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ò–ú–ü–û–†–¢–ê -->
    <div class='modal' id='importProductsModal'>
        <div class='modal-dialog'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-upload'></i>
                    –ò–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ CSV
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("importProductsModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div class='form-group'>
                    <label class='form-label'>–í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª</label>
                    <input type='file' class='form-input' accept='.csv' id='csvFileInput'>
                </div>
                <div style='background: var(--bg-secondary); padding: 20px; border-radius: var(--border-radius); margin: 20px 0;'>
                    <h4 style='margin-bottom: 12px;'>–§–æ—Ä–º–∞—Ç CSV —Ñ–∞–π–ª–∞:</h4>
                    <code style='display: block; background: white; padding: 10px; border-radius: 4px; font-size: 12px;'>
                        name,category_id,price,old_price,stock,description<br>
                        "–ù–µ–æ–Ω –≥–æ–ª—É–±–æ–π",1,450,500,25,"–°—Ç–∞–π–∫–∞ –Ω–µ–æ–Ω–æ–≤"<br>
                        "–ê–Ω—É–±–∏–∞—Å",2,350,,15,"–ö—Ä–∞—Å–∏–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ"
                    </code>
                </div>
                <div class='d-flex gap-2'>
                    <button class='btn btn-outline' onclick='downloadTemplate()'>
                        <i class='fas fa-download'></i>
                        –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω
                    </button>
                    <button class='btn btn-info' onclick='previewImport()'>
                        <i class='fas fa-eye'></i>
                        –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    </button>
                </div>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("importProductsModal")'>–û—Ç–º–µ–Ω–∞</button>
                <button type='button' class='btn btn-success' onclick='executeImport()'>
                    <i class='fas fa-upload'></i>
                    –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
            </div>
        </div>
    </div>

    <script>
        // === –§–£–ù–ö–¶–ò–ò –ü–û–ò–°–ö–ê –ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò ===

        function searchProducts(query) {
            const rows = document.querySelectorAll('#productsTable tbody tr');
            const searchTerm = query.toLowerCase();

            rows.forEach(row => {
                const name = row.dataset.name;
                const visible = name.includes(searchTerm);
                row.style.display = visible ? '' : 'none';
            });

            updateResultsCount();
        }

        function filterByCategory(categoryId) {
            const rows = document.querySelectorAll('#productsTable tbody tr');

            rows.forEach(row => {
                const rowCategory = row.dataset.category;
                const visible = !categoryId || rowCategory === categoryId;
                row.style.display = visible ? '' : 'none';
            });

            updateResultsCount();
        }

        function filterByStatus(status) {
            const rows = document.querySelectorAll('#productsTable tbody tr');

            rows.forEach(row => {
                let visible = true;

                switch(status) {
                    case 'active':
                        visible = row.dataset.status === 'active';
                        break;
                    case 'inactive':
                        visible = row.dataset.status === 'inactive';
                        break;
                    case 'featured':
                        visible = row.querySelector('.status-badge[style*="gold"]') !== null;
                        break;
                    case 'low_stock':
                        visible = row.querySelector('.status-cancelled, .status-processing') !== null;
                        break;
                }

                row.style.display = visible ? '' : 'none';
            });

            updateResultsCount();
        }

        function updateResultsCount() {
            const visibleRows = document.querySelectorAll('#productsTable tbody tr[style=""], #productsTable tbody tr:not([style*="none"])');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
        }

        // === –§–£–ù–ö–¶–ò–ò –¢–û–í–ê–†–û–í ===

        function editProduct(productId) {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            showNotification(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ #${productId}`, 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        }

        function duplicateProduct(productId) {
            if (!confirm('–°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é —Ç–æ–≤–∞—Ä–∞?')) return;
            showNotification(`–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ #${productId}`, 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        }

        function previewProduct(productId) {
            window.open(`index.php?page=product&id=${productId}`, '_blank');
        }

        function previewProductImages(productId) {
            showNotification(`–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ #${productId}`, 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        }

        // === –§–£–ù–ö–¶–ò–ò –ò–ú–ü–û–†–¢–ê ===

        function downloadTemplate() {
            const csvContent = "name,category_id,price,old_price,stock,description\\n" +
                              "–ù–µ–æ–Ω –≥–æ–ª—É–±–æ–π,1,450,500,25,–°—Ç–∞–π–∫–∞ –Ω–µ–æ–Ω–æ–≤\\n" +
                              "–ê–Ω—É–±–∏–∞—Å,2,350,,15,–ö—Ä–∞—Å–∏–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ";

            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'products_template.csv';
            a.click();
            window.URL.revokeObjectURL(url);
        }

        function previewImport() {
            const fileInput = document.getElementById('csvFileInput');
            if (!fileInput.files[0]) {
                showNotification('–í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª', 'warning');
                return;
            }

            showNotification('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–º–ø–æ—Ä—Ç–∞...', 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        }

        function executeImport() {
            const fileInput = document.getElementById('csvFileInput');
            if (!fileInput.files[0]) {
                showNotification('–í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª', 'warning');
                return;
            }

            if (!confirm('–ù–∞—á–∞—Ç—å –∏–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤?')) return;

            showNotification('–ò–º–ø–æ—Ä—Ç –Ω–∞—á–∞—Ç...', 'info');
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
        }

        // === DRAG & DROP ===

        document.addEventListener('DOMContentLoaded', function() {
            initDropZone('productImagesDropzone', function(files) {
                showNotification(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤`, 'success');
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            });
        });
    </script>
    <?php
}

// –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ò–ù–ì–ê –ë–£–î–£–¢ –ü–†–û–î–û–õ–ñ–ï–ù–´...

// === –§–£–ù–ö–¶–ò–ò –ü–û–õ–£–ß–ï–ù–ò–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –î–ê–ù–ù–´–• ===

function getRecentActivity() {
    return [
        [
            'time' => '2 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
            'details' => '–ó–∞–∫–∞–∑ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' –Ω–∞ —Å—É–º–º—É ' . number_format(rand(1000, 5000), 0, '', ' ') . ' ‚ÇΩ',
            'icon' => 'fas fa-shopping-bag',
            'type' => 'success'
        ],
        [
            'time' => '5 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω',
            'details' => '–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–†–∞—Å—Ç–µ–Ω–∏—è"',
            'icon' => 'fas fa-plus',
            'type' => 'primary'
        ],
        [
            'time' => '8 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤',
            'details' => '–û—Ç–∑—ã–≤ –Ω–∞ —Ç–æ–≤–∞—Ä "–ê–Ω—É–±–∏–∞—Å –ë–∞—Ä—Ç–µ—Ä–∞ –Ω–∞–Ω–∞" (5 –∑–≤–µ–∑–¥)',
            'icon' => 'fas fa-star',
            'type' => 'info'
        ],
        [
            'time' => '15 –º–∏–Ω –Ω–∞–∑–∞–¥',
            'action' => '–ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω',
            'details' => '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #AQ-2024-' . str_pad(rand(1, 999), 4, '0', STR_PAD_LEFT) . ' –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω"',
            'icon' => 'fas fa-truck',
            'type' => 'success'
        ],
        [
            'time' => '1 —á–∞—Å –Ω–∞–∑–∞–¥',
            'action' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã',
            'details' => '–û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏',
            'icon' => 'fas fa-cog',
            'type' => 'primary'
        ]
    ];
}

function getProductsStats() {
    $products = getProducts();

    return [
        'total' => count($products),
        'active' => count(array_filter($products, fn($p) => $p['is_active'])),
        'featured' => count(array_filter($products, fn($p) => $p['is_featured'])),
        'low_stock' => count(array_filter($products, fn($p) => $p['stock'] <= 5))
    ];
}

function getLowStockProducts() {
    $products = getProducts();
    return array_filter($products, fn($p) => $p['stock'] <= 5);
}

function generateSalesChartData($days = 30) {
    $data = [];
    for ($i = $days - 1; $i >= 0; $i--) {
        $date = date('Y-m-d', strtotime("-$i days"));
        $data[] = [
            'date' => $date,
            'sales' => rand(5000, 50000),
            'orders' => rand(10, 100)
        ];
    }
    return $data;
}

function generateCategoriesChartData() {
    $categories = getCategories();
    $products = getProducts();

    $data = [];
    foreach ($categories as $category) {
        $count = count(array_filter($products, fn($p) => $p['category_id'] == $category['id']));
        if ($count > 0) {
            $data[] = [
                'name' => $category['name'],
                'value' => $count,
                'icon' => $category['icon']
            ];
        }
    }

    return $data;
}

function getCategoriesStats() {
    $categories = getCategories();

    return [
        'total' => count($categories),
        'active' => count(array_filter($categories, fn($c) => $c['active']))
    ];
}

function getOrdersStats() {
    $orders = getOrders();

    $stats = [
        'total' => count($orders),
        'new' => count(array_filter($orders, fn($o) => $o['status'] === 'new')),
        'processing' => count(array_filter($orders, fn($o) => $o['status'] === 'processing')),
        'completed' => count(array_filter($orders, fn($o) => $o['status'] === 'delivered')),
        'total_amount' => array_sum(array_column($orders, 'total_amount'))
    ];

    return $stats;
}

function getReviewsStats() {
    $reviews = getReviews();

    return [
        'total' => count($reviews),
        'approved' => count(array_filter($reviews, fn($r) => $r['is_approved'])),
        'pending' => count(array_filter($reviews, fn($r) => !$r['is_approved'])),
        'average_rating' => count($reviews) > 0 ? array_sum(array_column($reviews, 'rating')) / count($reviews) : 0
    ];
}

function getNewsStats() {
    $news = getNews();

    return [
        'total' => count($news),
        'published' => count(array_filter($news, fn($n) => $n['is_published'])),
        'drafts' => count(array_filter($news, fn($n) => !$n['is_published'])),
        'total_views' => array_sum(array_column($news, 'views'))
    ];
}

function getSystemLogs() {
    return [
        [
            'timestamp' => date('Y-m-d H:i:s'),
            'level' => 'INFO',
            'message' => '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É',
            'context' => 'AUTH'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-5 minutes')),
            'level' => 'SUCCESS',
            'message' => '–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä ID: ' . rand(100, 999),
            'context' => 'PRODUCTS'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-15 minutes')),
            'level' => 'WARNING',
            'message' => '–¢–æ–≤–∞—Ä –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ ID: ' . rand(100, 999),
            'context' => 'INVENTORY'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-30 minutes')),
            'level' => 'INFO',
            'message' => '–û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞',
            'context' => 'SETTINGS'
        ],
        [
            'timestamp' => date('Y-m-d H:i:s', strtotime('-1 hour')),
            'level' => 'ERROR',
            'message' => '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
            'context' => 'EMAIL'
        ]
    ];
}

// === –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ù–û–í–´–• –†–ê–ó–î–ï–õ–û–í ===

function getInventoryData() {
    return [];
}

function getPricingRules() {
    return [];
}

function getActivePromotions() {
    return [];
}

function getCustomers() {
    return [];
}

function getCustomerSegments() {
    return [];
}

function getShippingMethods() {
    return [];
}

function getDeliveryZones() {
    return [];
}

function getPaymentMethods() {
    return [];
}

function getRecentTransactions() {
    return [];
}

function getPromotions() {
    return [];
}

function getCoupons() {
    return [];
}

function getEmailCampaigns() {
    return [];
}

function getEmailTemplates() {
    return [];
}

function getSEOData() {
    return [];
}

function getKeywords() {
    return [];
}

function getPages() {
    return [];
}

function getMediaFiles() {
    return [];
}

function getStorageInfo() {
    return [];
}

function getBlogPosts() {
    return [];
}

function getBlogCategories() {
    return [];
}

function getAvailableModules() {
    return [];
}

function getIntegrations() {
    return [];
}

function getBackups() {
    return [];
}

function getExportOptions() {
    return [];
}

function getSecurityStatus() {
    return [];
}

function getBlockedIPs() {
    return [];
}

?>
// === –ü–†–û–î–û–õ–ñ–ï–ù–ò–ï –§–£–ù–ö–¶–ò–ô –†–ï–ù–î–ï–†–ò–ù–ì–ê ===

// === –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò ===
function renderCategoriesSection($data) {
    $categories = $data['categories'];
    $stats = $data['stats'];
    ?>
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <div class='stats-grid' style='grid-template-columns: repeat(3, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-icon'><i class='fas fa-tags'></i></div>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-icon stat-success'><i class='fas fa-check-circle'></i></div>
            <div class='stat-value'><?= $stats['active'] ?></div>
            <div class='stat-label'>–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-icon stat-warning'><i class='fas fa-fish'></i></div>
            <div class='stat-value'><?= array_sum(array_map(fn($c) => count(getProductsByCategory($c['id'])), $categories)) ?></div>
            <div class='stat-label'>–û–±—â–∏–π —Ç–æ–≤–∞—Ä–æ–≤</div>
        </div>
    </div>

    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-tools'></i>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: flex; justify-content: space-between; align-items: center;'>
                <button class='btn btn-success btn-lg' onclick='openModal("addCategoryModal")'>
                    <i class='fas fa-plus'></i>
                    –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                </button>
                <div style='display: flex; gap: 12px;'>
                    <button class='btn btn-outline' onclick='sortCategories()'>
                        <i class='fas fa-sort'></i>
                        –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class='btn btn-primary' onclick='exportCategories()'>
                        <i class='fas fa-download'></i>
                        –≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- –°–µ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –£–õ–£–ß–®–ï–ù–ù–ê–Ø -->
    <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(380px, 1fr)); gap: 28px;'>
        <?php foreach ($categories as $category): ?>
            <div class='content-card' style='cursor: pointer; transition: var(--transition);' onclick='editCategory(<?= $category['id'] ?>)'>
                <div class='content-card-body'>
                    <div style='display: flex; align-items: center; justify-content: space-between; margin-bottom: 20px;'>
                        <div style='display: flex; align-items: center; gap: 16px;'>
                            <div style='font-size: 64px; text-shadow: 0 2px 8px rgba(0,0,0,0.1);'><?= $category['icon'] ?></div>
                            <div>
                                <h3 style='margin: 0; font-size: 22px; font-weight: 700;'><?= htmlspecialchars($category['name']) ?></h3>
                                <div style='font-size: 12px; color: var(--text-muted); margin-top: 4px;'>
                                    ID: <?= $category['id'] ?> | –ü–æ—Ä—è–¥–æ–∫: <?= $category['sort_order'] ?>
                                </div>
                            </div>
                        </div>
                        <span class='status-badge <?= $category['active'] ? 'status-active' : 'status-inactive' ?>'>
                            <?= $category['active'] ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–°–∫—Ä—ã—Ç–∞' ?>
                        </span>
                    </div>

                    <p style='color: var(--text-secondary); margin-bottom: 24px; font-size: 14px; line-height: 1.6;'>
                        <?= htmlspecialchars($category['description']) ?>
                    </p>

                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
                    <div style='display: grid; grid-template-columns: repeat(3, 1fr); gap: 16px; margin-bottom: 20px;'>
                        <div style='text-align: center; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius);'>
                            <div style='font-weight: 700; color: var(--primary-color);'><?= count(getProductsByCategory($category['id'])) ?></div>
                            <div style='font-size: 11px; color: var(--text-muted);'>–¢–æ–≤–∞—Ä–æ–≤</div>
                        </div>
                        <div style='text-align: center; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius);'>
                            <div style='font-weight: 700; color: var(--success-color);'><?= rand(10, 100) ?></div>
                            <div style='font-size: 11px; color: var(--text-muted);'>–ü—Ä–æ–¥–∞–∂</div>
                        </div>
                        <div style='text-align: center; padding: 12px; background: var(--bg-secondary); border-radius: var(--border-radius);'>
                            <div style='font-weight: 700; color: var(--warning-color);'><?= number_format(rand(1000, 50000), 0, '', ' ') ?> ‚ÇΩ</div>
                            <div style='font-size: 11px; color: var(--text-muted);'>–í—ã—Ä—É—á–∫–∞</div>
                        </div>
                    </div>

                    <div style='display: flex; justify-content: space-between; align-items: center;' onclick='event.stopPropagation()'>
                        <div style='color: var(--text-muted); font-size: 12px;'>
                            –°–æ–∑–¥–∞–Ω–∞: <?= date('d.m.Y', strtotime($category['created_at'])) ?>
                        </div>
                        <div style='display: flex; gap: 8px;'>
                            <button class='btn btn-primary btn-sm' onclick='editCategory(<?= $category['id'] ?>)' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                <i class='fas fa-edit'></i>
                            </button>
                            <button class='btn btn-outline btn-sm' onclick='viewCategoryProducts(<?= $category['id'] ?>)' title='–¢–æ–≤–∞—Ä—ã'>
                                <i class='fas fa-eye'></i>
                            </button>
                            <button class='btn btn-warning btn-sm' onclick='duplicateCategory(<?= $category['id'] ?>)' title='–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å'>
                                <i class='fas fa-copy'></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- –†–ê–°–®–ò–†–ï–ù–ù–û–ï –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
    <div class='modal' id='addCategoryModal'>
        <div class='modal-dialog modal-lg'>
            <form method='post'>
                <input type='hidden' name='action' value='create_category'>
                <div class='modal-header'>
                    <h3 class='modal-title'>
                        <i class='fas fa-plus'></i>
                        –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    </h3>
                    <button type='button' class='modal-close' onclick='closeModal("addCategoryModal")'>&times;</button>
                </div>
                <div class='modal-body'>
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *</label>
                            <input type='text' name='name' class='form-input' required placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</label>
                            <input type='number' name='sort_order' class='form-input' min='1' value='<?= count($categories) + 1 ?>'>
                        </div>
                    </div>

                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>–ò–∫–æ–Ω–∫–∞ (emoji –∏–ª–∏ –∫–ª–∞—Å—Å –∏–∫–æ–Ω–∫–∏)</label>
                            <div style='display: flex; gap: 12px; align-items: center;'>
                                <input type='text' name='icon' class='form-input' placeholder='üê† –∏–ª–∏ fas fa-fish' style='text-align: center; font-size: 24px;'>
                                <div style='font-size: 32px;' id='iconPreview'>üê†</div>
                            </div>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>–¶–≤–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</label>
                            <input type='color' name='color' class='form-input' value='#667eea' style='height: 50px;'>
                        </div>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name='description' class='form-textarea' rows='3' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è SEO –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'></textarea>
                    </div>

                    <!-- SEO –ø–æ–ª—è -->
                    <div class='form-row'>
                        <div class='form-group'>
                            <label class='form-label'>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                            <input type='text' name='seo_title' class='form-input' placeholder='–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤'>
                        </div>
                        <div class='form-group'>
                            <label class='form-label'>SEO –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</label>
                            <input type='text' name='seo_keywords' class='form-input' placeholder='–∫–ª—é—á–µ–≤—ã–µ, —Å–ª–æ–≤–∞, —á–µ—Ä–µ–∑, –∑–∞–ø—è—Ç—É—é'>
                        </div>
                    </div>

                    <div class='form-group'>
                        <label class='form-label'>SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                        <textarea name='seo_description' class='form-textarea' rows='2' placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º'></textarea>
                    </div>

                    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                    <div style='display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px; margin-top: 20px;'>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='active' checked>
                            <span>‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='show_in_menu'>
                            <span>üîó –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –º–µ–Ω—é</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='featured'>
                            <span>‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox' name='enable_filters'>
                            <span>üîç –í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</span>
                        </label>
                    </div>
                </div>
                <div class='modal-footer'>
                    <button type='button' class='btn btn-outline' onclick='closeModal("addCategoryModal")'>
                        <i class='fas fa-times'></i>
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type='submit' class='btn btn-success btn-lg'>
                        <i class='fas fa-save'></i>
                        –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function editCategory(id) {
            showNotification(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ #${id}`, 'info');
        }

        function viewCategoryProducts(id) {
            window.location.href = `admin.php?section=products&category=${id}`;
        }

        function duplicateCategory(id) {
            if (!confirm('–°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?')) return;
            showNotification(`–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ #${id}`, 'info');
        }

        function sortCategories() {
            showNotification('–§—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        }

        function exportCategories() {
            exportData('categories');
        }

        // –ü—Ä–µ–≤—å—é –∏–∫–æ–Ω–∫–∏
        document.querySelector('input[name="icon"]').addEventListener('input', function() {
            document.getElementById('iconPreview').textContent = this.value || 'üê†';
        });
    </script>
    <?php
}

// === –°–ö–õ–ê–î –ò –û–°–¢–ê–¢–ö–ò ===
function renderInventory($data) {
    $lowStockProducts = getLowStockProducts();
    ?>
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-danger'>
            <div class='stat-icon stat-danger'><i class='fas fa-exclamation-triangle'></i></div>
            <div class='stat-value'><?= count($lowStockProducts) ?></div>
            <div class='stat-label'>–ú–∞–ª–æ —Ç–æ–≤–∞—Ä–∞</div>
            <div class='stat-change negative'>
                <i class='fas fa-arrow-down'></i>
                –¢—Ä–µ–±—É–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            </div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-icon stat-warning'><i class='fas fa-boxes'></i></div>
            <div class='stat-value'><?= array_sum(array_column(getProducts(), 'stock')) ?></div>
            <div class='stat-label'>–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫</div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-icon stat-success'><i class='fas fa-truck-loading'></i></div>
            <div class='stat-value'><?= rand(5, 20) ?></div>
            <div class='stat-label'>–ü–æ—Å—Ç–∞–≤–∫–∏ –≤ –ø—É—Ç–∏</div>
        </div>
        <div class='stat-card stat-primary'>
            <div class='stat-icon'><i class='fas fa-calculator'></i></div>
            <div class='stat-value'><?= number_format(array_sum(array_map(fn($p) => $p['price'] * $p['stock'], getProducts())), 0, '', ' ') ?> ‚ÇΩ</div>
            <div class='stat-label'>–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤</div>
        </div>
    </div>

    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-bolt'></i>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;'>
                <button class='btn btn-success btn-lg' onclick='openModal("addSupplyModal")'>
                    <i class='fas fa-plus'></i>
                    –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É
                </button>
                <button class='btn btn-warning btn-lg' onclick='bulkUpdateStock()'>
                    <i class='fas fa-edit'></i>
                    –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                </button>
                <button class='btn btn-info btn-lg' onclick='generateInventoryReport()'>
                    <i class='fas fa-chart-bar'></i>
                    –û—Ç—á–µ—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
                </button>
                <button class='btn btn-outline btn-lg' onclick='openModal("lowStockAlertsModal")'>
                    <i class='fas fa-bell'></i>
                    –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                </button>
            </div>
        </div>
    </div>

    <!-- –¢–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-exclamation-triangle'></i>
                –¢–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É—é—â–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div class='content-card-actions'>
                <button class='btn btn-warning' onclick='orderLowStockProducts()'>
                    <i class='fas fa-shopping-cart'></i>
                    –ó–∞–∫–∞–∑–∞—Ç—å –≤—Å–µ
                </button>
            </div>
        </div>
        <div class='content-card-body'>
            <?php if (empty($lowStockProducts)): ?>
                <div class='empty-state'>
                    <div class='empty-state-icon'>‚úÖ</div>
                    <h3>–í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –¥–æ—Å—Ç–∞—Ç–∫–µ!</h3>
                    <p>–ù–∞ —Å–∫–ª–∞–¥–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤, –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–µ—Ç</p>
                </div>
            <?php else: ?>
                <div class='table-container'>
                    <table class='table'>
                        <thead>
                            <tr>
                                <th>–¢–æ–≤–∞—Ä</th>
                                <th>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                                <th>–¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫</th>
                                <th>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç</th>
                                <th>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∑–∞–∫–∞–∑</th>
                                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($lowStockProducts as $product): ?>
                                <tr>
                                    <td>
                                        <div style='font-weight: 600;'><?= htmlspecialchars($product['name']) ?></div>
                                        <div style='font-size: 12px; color: var(--text-muted);'>SKU: <?= $product['sku'] ?></div>
                                    </td>
                                    <td><?= htmlspecialchars($product['category']) ?></td>
                                    <td>
                                        <span class='status-badge status-danger'>
                                            <?= $product['stock'] ?> —à—Ç
                                        </span>
                                    </td>
                                    <td>5 —à—Ç</td>
                                    <td>
                                        <strong><?= max(20, $product['stock'] * 4) ?> —à—Ç</strong>
                                    </td>
                                    <td>
                                        <div style='display: flex; gap: 6px;'>
                                            <button class='btn btn-success btn-sm' onclick='addStock(<?= $product['id'] ?>)'>
                                                <i class='fas fa-plus'></i>
                                            </button>
                                            <button class='btn btn-primary btn-sm' onclick='orderStock(<?= $product['id'] ?>)'>
                                                <i class='fas fa-shopping-cart'></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
            <?php endif; ?>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏ -->
    <div class='modal' id='addSupplyModal'>
        <div class='modal-dialog modal-lg'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-truck'></i>
                    –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É —Ç–æ–≤–∞—Ä–æ–≤
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("addSupplyModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div class='form-row'>
                    <div class='form-group'>
                        <label class='form-label'>–ü–æ—Å—Ç–∞–≤—â–∏–∫</label>
                        <select class='form-select'>
                            <option>–û–û–û "–ê–∫–≤–∞–≠–ª–∏—Ç"</option>
                            <option>–ò–ü –ü–µ—Ç—Ä–æ–≤ –í.–í.</option>
                            <option>Tropical Fish Ltd</option>
                        </select>
                    </div>
                    <div class='form-group'>
                        <label class='form-label'>–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏</label>
                        <input type='date' class='form-input' value='<?= date('Y-m-d') ?>'>
                    </div>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–¢–æ–≤–∞—Ä—ã</label>
                    <div id='supplyProducts'>
                        <div style='display: flex; gap: 12px; align-items: center; margin-bottom: 12px;'>
                            <select class='form-select' style='flex: 2;'>
                                <option>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä</option>
                                <?php foreach (getProducts() as $product): ?>
                                    <option value='<?= $product['id'] ?>'><?= htmlspecialchars($product['name']) ?></option>
                                <?php endforeach; ?>
                            </select>
                            <input type='number' class='form-input' placeholder='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ' min='1' style='width: 120px;'>
                            <input type='number' class='form-input' placeholder='–¶–µ–Ω–∞ –∑–∞–∫—É–ø–∫–∏' min='0' step='0.01' style='width: 140px;'>
                            <button class='btn btn-danger btn-sm' onclick='removeSupplyRow(this)'>
                                <i class='fas fa-times'></i>
                            </button>
                        </div>
                    </div>
                    <button class='btn btn-outline btn-sm' onclick='addSupplyRow()'>
                        <i class='fas fa-plus'></i>
                        –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                    <textarea class='form-textarea' rows='3' placeholder='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤–∫–µ'></textarea>
                </div>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("addSupplyModal")'>–û—Ç–º–µ–Ω–∞</button>
                <button type='button' class='btn btn-success' onclick='saveSupply()'>
                    <i class='fas fa-save'></i>
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É
                </button>
            </div>
        </div>
    </div>

    <script>
        function addStock(productId) {
            const quantity = prompt('–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:');
            if (quantity && quantity > 0) {
                showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${quantity} —à—Ç –∫ —Ç–æ–≤–∞—Ä—É #${productId}`, 'success');
                setTimeout(() => location.reload(), 1000);
            }
        }

        function orderStock(productId) {
            showNotification(`–ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–∞ #${productId} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫—É`, 'info');
        }

        function bulkUpdateStock() {
            openModal('bulkUpdateModal');
        }

        function generateInventoryReport() {
            showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º...', 'info');
            setTimeout(() => {
                showNotification('–û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!', 'success');
            }, 2000);
        }

        function addSupplyRow() {
            // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Ç–æ–≤–∞—Ä–∞ –≤ –ø–æ—Å—Ç–∞–≤–∫—É
            showNotification('–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞', 'info');
        }

        function removeSupplyRow(btn) {
            btn.closest('div').remove();
        }

        function saveSupply() {
            showNotification('–ü–æ—Å—Ç–∞–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É!', 'success');
            closeModal('addSupplyModal');
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –¶–ï–ù–ê–ú–ò ===
function renderPricing($data) {
    ?>
    <div class='stats-grid' style='grid-template-columns: repeat(4, 1fr); margin-bottom: 32px;'>
        <div class='stat-card stat-success'>
            <div class='stat-icon stat-success'><i class='fas fa-percentage'></i></div>
            <div class='stat-value'><?= rand(15, 35) ?>%</div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω—è—è –Ω–∞—Ü–µ–Ω–∫–∞</div>
        </div>
        <div class='stat-card stat-primary'>
            <div class='stat-icon'><i class='fas fa-tags'></i></div>
            <div class='stat-value'><?= count(array_filter(getProducts(), fn($p) => $p['old_price'] > $p['price'])) ?></div>
            <div class='stat-label'>–¢–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π</div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-icon stat-warning'><i class='fas fa-chart-line'></i></div>
            <div class='stat-value'><?= number_format(array_sum(array_column(getProducts(), 'price')) / count(getProducts()), 0, '', ' ') ?> ‚ÇΩ</div>
            <div class='stat-label'>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
        </div>
        <div class='stat-card stat-info'>
            <div class='stat-icon'><i class='fas fa-robot'></i></div>
            <div class='stat-value'>AUTO</div>
            <div class='stat-label'>–ê–≤—Ç–æ—Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</div>
        </div>
    </div>

    <!-- –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-cogs'></i>
                –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px;'>
                <!-- –ù–∞—Ü–µ–Ω–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º -->
                <div class='feature-card'>
                    <div class='feature-icon'>üìä</div>
                    <h3>–ù–∞—Ü–µ–Ω–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h3>
                    <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Ü–µ–Ω–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞</p>
                    <button class='btn btn-primary' onclick='openModal("categoryPricingModal")'>
                        <i class='fas fa-cog'></i>
                        –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
                    </button>
                </div>

                <!-- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã -->
                <div class='feature-card'>
                    <div class='feature-icon'>‚ö°</div>
                    <h3>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</h3>
                    <p>–¶–µ–Ω—ã –º–µ–Ω—è—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Å–ø—Ä–æ—Å–∞</p>
                    <button class='btn btn-success' onclick='toggleDynamicPricing()'>
                        <i class='fas fa-toggle-on'></i>
                        –í–∫–ª—é—á–∏—Ç—å
                    </button>
                </div>

                <!-- –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏ -->
                <div class='feature-card'>
                    <div class='feature-icon'>üéØ</div>
                    <h3>–ú–∞—Å—Å–æ–≤—ã–µ —Å–∫–∏–¥–∫–∏</h3>
                    <p>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–æ–∫ –∫ –≥—Ä—É–ø–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤</p>
                    <button class='btn btn-warning' onclick='openModal("bulkDiscountModal")'>
                        <i class='fas fa-percentage'></i>
                        –°–æ–∑–¥–∞—Ç—å –∞–∫—Ü–∏—é
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω -->
    <div class='content-card'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-chart-bar'></i>
                –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            </h3>
            <div class='content-card-actions'>
                <select class='form-select' onchange='updatePriceAnalysis(this.value)'>
                    <option value='all'>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    <?php foreach (getCategories() as $category): ?>
                        <option value='<?= $category['id'] ?>'><?= htmlspecialchars($category['name']) ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
        </div>
        <div class='content-card-body'>
            <div class='chart-container'>
                <canvas id='priceAnalysisChart'></canvas>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞—Å—Å–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫ -->
    <div class='modal' id='bulkDiscountModal'>
        <div class='modal-dialog modal-lg'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-percentage'></i>
                    –ú–∞—Å—Å–æ–≤–∞—è —Å–∫–∏–¥–∫–∞
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("bulkDiscountModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div class='form-row'>
                    <div class='form-group'>
                        <label class='form-label'>–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏</label>
                        <input type='text' class='form-input' placeholder='–í–µ—Å–µ–Ω–Ω—è—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞'>
                    </div>
                    <div class='form-group'>
                        <label class='form-label'>–†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏ (%)</label>
                        <input type='number' class='form-input' min='1' max='90' placeholder='20'>
                    </div>
                </div>

                <div class='form-row'>
                    <div class='form-group'>
                        <label class='form-label'>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
                        <input type='datetime-local' class='form-input' value='<?= date('Y-m-d\TH:i') ?>'>
                    </div>
                    <div class='form-group'>
                        <label class='form-label'>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                        <input type='datetime-local' class='form-input' value='<?= date('Y-m-d\TH:i', strtotime('+7 days')) ?>'>
                    </div>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</label>
                    <div style='display: grid; grid-template-columns: repeat(2, 1fr); gap: 12px; max-height: 200px; overflow-y: auto; padding: 12px; border: 1px solid var(--border-color); border-radius: var(--border-radius);'>
                        <?php foreach (getCategories() as $category): ?>
                            <label class='form-checkbox'>
                                <input type='checkbox' value='<?= $category['id'] ?>'>
                                <span><?= $category['icon'] ?> <?= htmlspecialchars($category['name']) ?></span>
                            </label>
                        <?php endforeach; ?>
                    </div>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è</label>
                    <div style='display: flex; gap: 20px;'>
                        <label class='form-checkbox'>
                            <input type='checkbox'>
                            <span>–¢–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏</span>
                        </label>
                        <label class='form-checkbox'>
                            <input type='checkbox'>
                            <span>–ò—Å–∫–ª—é—á–∏—Ç—å —É–∂–µ —Å–æ —Å–∫–∏–¥–∫–æ–π</span>
                        </label>
                    </div>
                </div>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("bulkDiscountModal")'>–û—Ç–º–µ–Ω–∞</button>
                <button type='button' class='btn btn-warning' onclick='applyBulkDiscount()'>
                    <i class='fas fa-percentage'></i>
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∫–∏–¥–∫—É
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadChart('priceAnalysisChart', '30days', 'bar');
        });

        function toggleDynamicPricing() {
            showNotification('–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ!', 'success');
        }

        function updatePriceAnalysis(categoryId) {
            showNotification('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ü–µ–Ω...', 'info');
            loadChart('priceAnalysisChart', '30days', 'bar');
        }

        function applyBulkDiscount() {
            if (!confirm('–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∫–∏–¥–∫—É –∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–∞–º?')) return;
            showNotification('–ú–∞—Å—Å–æ–≤–∞—è —Å–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫ —Ç–æ–≤–∞—Ä–∞–º!', 'success');
            closeModal('bulkDiscountModal');
        }
    </script>
    <?php
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò –†–ê–°–®–ò–†–ï–ù–ù–û–ï ===
function renderOrdersSection($data) {
    $orders = $data['orders'];
    $stats = $data['stats'];
    ?>
    <!-- –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='stats-grid' style='margin-bottom: 40px;'>
        <div class='stat-card stat-primary'>
            <div class='stat-header'>
                <div class='stat-icon'><i class='fas fa-shopping-bag'></i></div>
            </div>
            <div class='stat-value'><?= $stats['total'] ?></div>
            <div class='stat-label'>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                +<?= rand(5, 15) ?>% –∑–∞ –º–µ—Å—è—Ü
            </div>
        </div>
        <div class='stat-card stat-danger'>
            <div class='stat-header'>
                <div class='stat-icon stat-danger'><i class='fas fa-exclamation-circle'></i></div>
            </div>
            <div class='stat-value'><?= $stats['new'] ?></div>
            <div class='stat-label'>–ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã</div>
            <div class='stat-change <?= $stats['new'] > 5 ? 'negative' : 'positive' ?>'>
                <i class='fas fa-<?= $stats['new'] > 5 ? 'arrow-up' : 'check' ?>'></i>
                <?= $stats['new'] > 5 ? '–¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '–ü–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º' ?>
            </div>
        </div>
        <div class='stat-card stat-warning'>
            <div class='stat-header'>
                <div class='stat-icon stat-warning'><i class='fas fa-clock'></i></div>
            </div>
            <div class='stat-value'><?= $stats['processing'] ?></div>
            <div class='stat-label'>–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</div>
            <div class='stat-change neutral'>
                <i class='fas fa-minus'></i>
                –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
            </div>
        </div>
        <div class='stat-card stat-success'>
            <div class='stat-header'>
                <div class='stat-icon stat-success'><i class='fas fa-check-circle'></i></div>
            </div>
            <div class='stat-value'><?= $stats['completed'] ?></div>
            <div class='stat-label'>–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã
            </div>
        </div>
        <div class='stat-card stat-success' style='grid-column: span 2;'>
            <div class='stat-header'>
                <div class='stat-icon stat-success'><i class='fas fa-ruble-sign'></i></div>
            </div>
            <div class='stat-value'><?= number_format($stats['total_amount'], 0, '', ' ') ?> ‚ÇΩ</div>
            <div class='stat-label'>–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤</div>
            <div class='stat-change positive'>
                <i class='fas fa-arrow-up'></i>
                –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: <?= number_format($stats['total_amount'] / max(1, $stats['total']), 0, '', ' ') ?> ‚ÇΩ
            </div>
        </div>
    </div>

    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='content-card mb-4'>
        <div class='content-card-header'>
            <h3 class='content-card-title'>
                <i class='fas fa-bolt'></i>
                –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            </h3>
        </div>
        <div class='content-card-body'>
            <div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;'>
                <button class='btn btn-success btn-lg' onclick='processAllNewOrders()'>
                    <i class='fas fa-play'></i>
                    –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–æ–≤—ã–µ (<?= $stats['new'] ?>)
                </button>
                <button class='btn btn-primary btn-lg' onclick='openModal("bulkStatusModal")'>
                    <i class='fas fa-edit'></i>
                    –ú–∞—Å—Å–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                </button>
                <button class='btn btn-info btn-lg' onclick='generateOrdersReport()'>
                    <i class='fas fa-chart-line'></i>
                    –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
                </button>
                <button class='btn btn-warning btn-lg' onclick='openModal("orderNotificationsModal")'>
                    <i class='fas fa-bell'></i>
                    –£–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
                </button>
                <button class='btn btn-outline btn-lg' onclick='exportData("orders")'>
                    <i class='fas fa-download'></i>
                    –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤
                </button>
            </div>
        </div>
    </div>

    <!-- –§–∏–ª—å—Ç—Ä—ã –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='content-card mb-4'>
        <div class='content-card-body'>
            <div style='display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 16px;'>
                <div style='display: flex; gap: 12px; align-items: center;'>
                    <select class='form-select' onchange='filterOrdersByStatus(this.value)' id='statusFilter'>
                        <option value=''>–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                        <option value='new'>üÜï –ù–æ–≤—ã–µ (<?= $stats['new'] ?>)</option>
                        <option value='processing'>‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ (<?= $stats['processing'] ?>)</option>
                        <option value='shipped'>üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã</option>
                        <option value='delivered'>‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã (<?= $stats['completed'] ?>)</option>
                        <option value='cancelled'>‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã</option>
                    </select>

                    <select class='form-select' onchange='filterOrdersByPayment(this.value)'>
                        <option value=''>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</option>
                        <option value='card'>üí≥ –ö–∞—Ä—Ç–æ–π</option>
                        <option value='cash'>üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏</option>
                        <option value='bank'>üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</option>
                    </select>

                    <input type='date' class='form-input' onchange='filterOrdersByDate(this.value)' style='width: 160px;'>
                </div>

                <div style='display: flex; gap: 12px; align-items: center;'>
                    <input type='text' placeholder='üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É, –∫–ª–∏–µ–Ω—Ç—É...' class='form-input' 
                           style='min-width: 250px;' onkeyup='searchOrders(this.value)' id='ordersSearch'>
                    <button class='btn btn-outline' onclick='clearAllFilters()'>
                        <i class='fas fa-times'></i>
                        –û—á–∏—Å—Ç–∏—Ç—å
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='bulk-actions' id='ordersBulkActions'>
        <div class='bulk-actions-text'>–í—ã–±—Ä–∞–Ω–æ: 0 –∑–∞–∫–∞–∑–æ–≤</div>
        <div class='bulk-actions-buttons'>
            <button class='btn btn-success btn-sm' onclick='bulkChangeStatus("processing")'>
                <i class='fas fa-play'></i>
                –í –æ–±—Ä–∞–±–æ—Ç–∫—É
            </button>
            <button class='btn btn-primary btn-sm' onclick='bulkChangeStatus("shipped")'>
                <i class='fas fa-truck'></i>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
            <button class='btn btn-outline btn-sm' onclick='bulkPrintOrders()'>
                <i class='fas fa-print'></i>
                –ü–µ—á–∞—Ç—å
            </button>
            <button class='btn btn-info btn-sm' onclick='bulkNotifyCustomers()'>
                <i class='fas fa-envelope'></i>
                –£–≤–µ–¥–æ–º–∏—Ç—å
            </button>
        </div>
    </div>

    <!-- –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ -->
    <div class='content-card'>
        <div class='table-container'>
            <table class='table' id='ordersTable'>
                <thead>
                    <tr>
                        <th style='width: 40px;'>
                            <input type='checkbox' class='table-checkbox' onchange='toggleAllOrdersCheckboxes(this)'>
                        </th>
                        <th>‚Ññ –ó–∞–∫–∞–∑–∞</th>
                        <th>–ö–ª–∏–µ–Ω—Ç</th>
                        <th>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</th>
                        <th>–¢–æ–≤–∞—Ä—ã</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–û–ø–ª–∞—Ç–∞</th>
                        <th>–î–æ—Å—Ç–∞–≤–∫–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($orders as $order): ?>
                        <tr data-status='<?= $order['status'] ?>' data-date='<?= date('Y-m-d', strtotime($order['created_at'])) ?>' 
                            data-payment='<?= $order['payment_method'] ?>' data-search='<?= strtolower($order['order_number'] . ' ' . $order['customer_name'] . ' ' . $order['customer_email']) ?>'>
                            <td>
                                <input type='checkbox' class='table-checkbox' data-id='<?= $order['id'] ?>' onchange='updateOrdersBulkActions()'>
                            </td>
                            <td>
                                <div style='font-weight: 700; color: var(--primary-color); font-size: 16px; cursor: pointer;' onclick='viewOrderDetails(<?= $order['id'] ?>)'>
                                    <?= $order['order_number'] ?>
                                </div>
                                <div style='font-size: 11px; color: var(--text-muted);'>
                                    ID: <?= $order['id'] ?>
                                </div>
                                <?php if ($order['notes']): ?>
                                    <div style='margin-top: 4px;'>
                                        <span class='status-badge' style='background: var(--info-color); color: white; font-size: 10px;'>
                                            <i class='fas fa-comment'></i>
                                        </span>
                                    </div>
                                <?php endif; ?>
                            </td>
                            <td>
                                <div style='font-weight: 600; margin-bottom: 4px;'><?= htmlspecialchars($order['customer_name']) ?></div>
                                <div style='font-size: 11px; color: var(--text-muted); margin-bottom: 2px;'>
                                    üìß <?= htmlspecialchars($order['customer_email']) ?>
                                </div>
                                <div style='font-size: 11px; color: var(--text-muted);'>
                                    üìû <?= htmlspecialchars($order['customer_phone']) ?>
                                </div>
                                <div style='margin-top: 4px;'>
                                    <button class='btn btn-outline btn-sm' onclick='viewCustomerOrders("<?= $order['customer_email'] ?>")' 
                                            title='–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞' style='padding: 2px 6px; font-size: 10px;'>
                                        <i class='fas fa-history'></i>
                                    </button>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600;'><?= date('d.m.Y', strtotime($order['created_at'])) ?></div>
                                <div style='font-size: 11px; color: var(--text-muted);'><?= date('H:i', strtotime($order['created_at'])) ?></div>
                                <div style='font-size: 10px; color: var(--text-muted); margin-top: 2px;'>
                                    <?php
                                    $daysSince = (time() - strtotime($order['created_at'])) / (24 * 3600);
                                    if ($daysSince < 1) {
                                        echo '–°–µ–≥–æ–¥–Ω—è';
                                    } elseif ($daysSince < 2) {
                                        echo '–í—á–µ—Ä–∞';
                                    } else {
                                        echo floor($daysSince) . ' –¥–Ω. –Ω–∞–∑–∞–¥';
                                    }
                                    ?>
                                </div>
                            </td>
                            <td>
                                <div style='font-weight: 600; margin-bottom: 4px;'><?= $order['items_count'] ?? rand(1, 5) ?> —Ç–æ–≤–∞—Ä–æ–≤</div>
                                <div style='font-size: 10px; color: var(--text-muted);'>
                                    –í–µ—Å: <?= rand(100, 2000) ?>–≥
                                </div>
                                <button class='btn btn-outline btn-sm' onclick='viewOrderItems(<?= $order['id'] ?>)' 
                                        style='margin-top: 4px; padding: 2px 6px; font-size: 10px;'>
                                    <i class='fas fa-list'></i> –°–æ—Å—Ç–∞–≤
                                </button>
                            </td>
                            <td>
                                <div style='font-weight: 700; color: var(--success-color); font-size: 18px; margin-bottom: 4px;'>
                                    <?= number_format($order['total_amount'], 0, '', ' ') ?> ‚ÇΩ
                                </div>
                                <div style='font-size: 11px; color: var(--text-muted);'>
                                    –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞: <?= number_format($stats['total_amount'] / max(1, $stats['total']), 0, '', ' ') ?> ‚ÇΩ
                                </div>
                            </td>
                            <td>
                                <select class='form-select' style='padding: 6px 8px; font-size: 12px; min-width: 120px; 
                                        border-color: var(--<?= $order['status'] === 'new' ? 'danger' : ($order['status'] === 'processing' ? 'warning' : 'success') ?>-color);'
                                        onchange='updateOrderStatus(<?= $order['id'] ?>, this.value)'>
                                    <option value='new' <?= $order['status'] === 'new' ? 'selected' : '' ?>>üÜï –ù–æ–≤—ã–π</option>
                                    <option value='processing' <?= $order['status'] === 'processing' ? 'selected' : '' ?>>‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞</option>
                                    <option value='shipped' <?= $order['status'] === 'shipped' ? 'selected' : '' ?>>üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                                    <option value='delivered' <?= $order['status'] === 'delivered' ? 'selected' : '' ?>>‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω</option>
                                    <option value='cancelled' <?= $order['status'] === 'cancelled' ? 'selected' : '' ?>>‚ùå –û—Ç–º–µ–Ω–µ–Ω</option>
                                </select>
                            </td>
                            <td>
                                <div class='status-badge <?= $order['payment_method'] === 'card' ? 'status-completed' : 'status-processing' ?>'>
                                    <?php
                                    switch($order['payment_method']) {
                                        case 'card': echo 'üí≥ –ö–∞—Ä—Ç–∞'; break;
                                        case 'cash': echo 'üíµ –ù–∞–ª–∏—á–Ω—ã–µ'; break;
                                        case 'bank': echo 'üè¶ –ü–µ—Ä–µ–≤–æ–¥'; break;
                                        default: echo '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                                    }
                                    ?>
                                </div>
                                <div style='font-size: 10px; color: var(--text-muted); margin-top: 4px;'>
                                    <?= $order['payment_method'] === 'card' ? '–û–ø–ª–∞—á–µ–Ω –æ–Ω–ª–∞–π–Ω' : '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏' ?>
                                </div>
                            </td>
                            <td>
                                <div class='status-badge status-new'>
                                    <?= $order['delivery_method'] === 'delivery' ? 'üöö –î–æ—Å—Ç–∞–≤–∫–∞' : 'üè™ –°–∞–º–æ–≤—ã–≤–æ–∑' ?>
                                </div>
                                <div style='font-size: 10px; color: var(--text-muted); margin-top: 4px; max-width: 120px; overflow: hidden; text-overflow: ellipsis;'>
                                    <?= htmlspecialchars(mb_substr($order['delivery_address'], 0, 30)) ?>
                                </div>
                            </td>
                            <td>
                                <div style='display: flex; gap: 4px; flex-wrap: wrap;'>
                                    <button class='btn btn-primary btn-sm' onclick='viewOrderDetails(<?= $order['id'] ?>)' title='–ü–æ–¥—Ä–æ–±–Ω–æ'>
                                        <i class='fas fa-eye'></i>
                                    </button>
                                    <button class='btn btn-success btn-sm' onclick='printOrder(<?= $order['id'] ?>)' title='–ü–µ—á–∞—Ç—å'>
                                        <i class='fas fa-print'></i>
                                    </button>
                                    <button class='btn btn-info btn-sm' onclick='notifyCustomer(<?= $order['id'] ?>)' title='–£–≤–µ–¥–æ–º–∏—Ç—å'>
                                        <i class='fas fa-envelope'></i>
                                    </button>
                                    <button class='btn btn-outline btn-sm' onclick='trackOrder(<?= $order['id'] ?>)' title='–û—Ç—Å–ª–µ–¥–∏—Ç—å'>
                                        <i class='fas fa-map-marker-alt'></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <!-- –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê -->

    <!-- –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ -->
    <div class='modal' id='orderDetailsModal'>
        <div class='modal-dialog modal-xl'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-shopping-bag'></i>
                    –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ #<span id='orderNumber'></span>
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("orderDetailsModal")'>&times;</button>
            </div>
            <div class='modal-body' id='orderDetailsContent'>
                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ AJAX -->
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("orderDetailsModal")'>–ó–∞–∫—Ä—ã—Ç—å</button>
                <button type='button' class='btn btn-primary' onclick='printCurrentOrder()'>
                    <i class='fas fa-print'></i>
                    –ü–µ—á–∞—Ç—å
                </button>
            </div>
        </div>
    </div>

    <!-- –ú–∞—Å—Å–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ -->
    <div class='modal' id='bulkStatusModal'>
        <div class='modal-dialog'>
            <div class='modal-header'>
                <h3 class='modal-title'>
                    <i class='fas fa-edit'></i>
                    –ú–∞—Å—Å–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                </h3>
                <button type='button' class='modal-close' onclick='closeModal("bulkStatusModal")'>&times;</button>
            </div>
            <div class='modal-body'>
                <div class='form-group'>
                    <label class='form-label'>–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è</label>
                    <select class='form-select' id='bulkStatusFilter'>
                        <option value='new'>–í—Å–µ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã (<?= $stats['new'] ?>)</option>
                        <option value='processing'>–í—Å–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ (<?= $stats['processing'] ?>)</option>
                        <option value='selected'>–¢–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ</option>
                    </select>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å</label>
                    <select class='form-select' id='newBulkStatus'>
                        <option value='processing'>‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫—É</option>
                        <option value='shipped'>üöö –û—Ç–ø—Ä–∞–≤–∏—Ç—å</option>
                        <option value='delivered'>‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ</option>
                        <option value='cancelled'>‚ùå –û—Ç–º–µ–Ω–∏—Ç—å</option>
                    </select>
                </div>

                <div class='form-group'>
                    <label class='form-label'>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <textarea class='form-textarea' rows='3' placeholder='–ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤'></textarea>
                </div>

                <div class='form-checkbox'>
                    <input type='checkbox' id='notifyCustomersCheck' checked>
                    <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º</span>
                </div>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-outline' onclick='closeModal("bulkStatusModal")'>–û—Ç–º–µ–Ω–∞</button>
                <button type='button' class='btn btn-success' onclick='executeBulkStatusChange()'>
                    <i class='fas fa-check'></i>
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </button>
            </div>
        </div>
    </div>

    <script>
        // === –§–£–ù–ö–¶–ò–ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò –ó–ê–ö–ê–ó–û–í ===

        function filterOrdersByStatus(status) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            rows.forEach(row => {
                const visible = !status || row.dataset.status === status;
                row.style.display = visible ? '' : 'none';
            });
            updateOrdersResultCount();
        }

        function filterOrdersByPayment(payment) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            rows.forEach(row => {
                const visible = !payment || row.dataset.payment === payment;
                row.style.display = visible ? '' : 'none';
            });
            updateOrdersResultCount();
        }

        function filterOrdersByDate(date) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            rows.forEach(row => {
                const visible = !date || row.dataset.date === date;
                row.style.display = visible ? '' : 'none';
            });
            updateOrdersResultCount();
        }

        function searchOrders(query) {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            const searchTerm = query.toLowerCase();

            rows.forEach(row => {
                const searchData = row.dataset.search;
                const visible = searchData.includes(searchTerm);
                row.style.display = visible ? '' : 'none';
            });
            updateOrdersResultCount();
        }

        function clearAllFilters() {
            document.getElementById('statusFilter').value = '';
            document.getElementById('ordersSearch').value = '';
            document.querySelectorAll('#ordersTable tbody tr').forEach(row => {
                row.style.display = '';
            });
            updateOrdersResultCount();
        }

        function updateOrdersResultCount() {
            const visibleRows = document.querySelectorAll('#ordersTable tbody tr[style=""], #ordersTable tbody tr:not([style*="none"])').length;
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        }

        // === –§–£–ù–ö–¶–ò–ò –ú–ê–°–°–û–í–´–• –û–ü–ï–†–ê–¶–ò–ô ===

        function toggleAllOrdersCheckboxes(masterCheckbox) {
            const checkboxes = document.querySelectorAll('#ordersTable .table-checkbox[data-id]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = masterCheckbox.checked;
            });
            updateOrdersBulkActions();
        }

        function updateOrdersBulkActions() {
            const selectedCheckboxes = document.querySelectorAll('#ordersTable .table-checkbox[data-id]:checked');
            const bulkActions = document.getElementById('ordersBulkActions');

            if (selectedCheckboxes.length > 0) {
                bulkActions.classList.add('show');
                document.querySelector('#ordersBulkActions .bulk-actions-text').textContent = 
                    `–í—ã–±—Ä–∞–Ω–æ: ${selectedCheckboxes.length} –∑–∞–∫–∞–∑–æ–≤`;
            } else {
                bulkActions.classList.remove('show');
            }
        }

        function bulkChangeStatus(status) {
            const selectedIds = Array.from(document.querySelectorAll('#ordersTable .table-checkbox[data-id]:checked'))
                .map(cb => cb.dataset.id);

            if (selectedIds.length === 0) {
                showNotification('–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞', 'warning');
                return;
            }

            const statusNames = {
                'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫—É',
                'shipped': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã',
                'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã',
                'cancelled': '–û—Ç–º–µ–Ω–µ–Ω—ã'
            };

            if (!confirm(`–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å ${selectedIds.length} –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ "${statusNames[status]}"?`)) return;

            showNotification(`–°—Ç–∞—Ç—É—Å ${selectedIds.length} –∑–∞–∫–∞–∑–æ–≤ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${statusNames[status]}"`, 'success');
            setTimeout(() => location.reload(), 1500);
        }

        // === –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ó–ê–ö–ê–ó–ê–ú–ò ===

        function viewOrderDetails(orderId) {
            document.getElementById('orderNumber').textContent = orderId;
            document.getElementById('orderDetailsContent').innerHTML = `
                <div style='text-align: center; padding: 40px;'>
                    <div class='spinner' style='margin: 0 auto;'></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞...</p>
                </div>
            `;
            openModal('orderDetailsModal');

            // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            setTimeout(() => {
                document.getElementById('orderDetailsContent').innerHTML = `
                    <div style='display: grid; grid-template-columns: 1fr 1fr; gap: 30px;'>
                        <div>
                            <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h4>
                            <p><strong>–ò–º—è:</strong> –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</p>
                            <p><strong>Email:</strong> ivan@example.com</p>
                            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (999) 123-45-67</p>
                        </div>
                        <div>
                            <h4>–î–æ—Å—Ç–∞–≤–∫–∞</h4>
                            <p><strong>–°–ø–æ—Å–æ–±:</strong> –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</p>
                            <p><strong>–ê–¥—Ä–µ—Å:</strong> –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123</p>
                        </div>
                    </div>
                    <div style='margin-top: 30px;'>
                        <h4>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</h4>
                        <div class='table-container'>
                            <table class='table'>
                                <tr><td>–ù–µ–æ–Ω –≥–æ–ª—É–±–æ–π —Å—Ç–∞–π–∫–∞</td><td>2 —à—Ç</td><td>900 ‚ÇΩ</td></tr>
                                <tr><td>–ê–Ω—É–±–∏–∞—Å –ë–∞—Ä—Ç–µ—Ä–∞</td><td>1 —à—Ç</td><td>350 ‚ÇΩ</td></tr>
                            </table>
                        </div>
                    </div>
                `;
            }, 1000);
        }

        function processAllNewOrders() {
            if (!confirm('–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –≤ —Å—Ç–∞—Ç—É—Å "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ"?')) return;
            showNotification('–í—Å–µ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É!', 'success');
            setTimeout(() => location.reload(), 1500);
        }

        function generateOrdersReport() {
            showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º...', 'info');
            setTimeout(() => {
                showNotification('–û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!', 'success');
            }, 2000);
        }

        function printOrder(orderId) {
            showNotification(`–ü–µ—á–∞—Ç—å –∑–∞–∫–∞–∑–∞ #${orderId}`, 'info');
            // –û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –ø–µ—á–∞—Ç–∏
        }

        function notifyCustomer(orderId) {
            showNotification(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É (–∑–∞–∫–∞–∑ #${orderId})`, 'success');
        }

        function trackOrder(orderId) {
            showNotification(`–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç—Ä–µ–∫–∏–Ω–≥–∞ –∑–∞–∫–∞–∑–∞ #${orderId}`, 'info');
        }

        function viewCustomerOrders(email) {
            window.open(`admin.php?section=customers&email=${encodeURIComponent(email)}`, '_blank');
        }

        function viewOrderItems(orderId) {
            showNotification(`–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ #${orderId}: 3 —Ç–æ–≤–∞—Ä–∞ –æ–±—â–∏–º –≤–µ—Å–æ–º 450–≥`, 'info');
        }

        function executeBulkStatusChange() {
            const filter = document.getElementById('bulkStatusFilter').value;
            const newStatus = document.getElementById('newBulkStatus').value;
            const notify = document.getElementById('notifyCustomersCheck').checked;

            closeModal('bulkStatusModal');
            showNotification('–ú–∞—Å—Å–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!', 'success');
            setTimeout(() => location.reload(), 1500);
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('#ordersTable .table-checkbox[data-id]').forEach(checkbox => {
                checkbox.addEventListener('change', updateOrdersBulkActions);
            });
        });
    </script>
    <?php
}

// –ü–†–û–î–û–õ–ñ–ï–ù–ò–ï –°–õ–ï–î–£–ï–¢ –° –û–°–¢–ê–õ–¨–ù–´–ú–ò –†–ê–ó–î–ï–õ–ê–ú–ò...–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏ (–ö–ª–∏–µ–Ω—Ç—ã, –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥, SEO, –ú–µ–¥–∏–∞, –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)?
?>
