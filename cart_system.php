<?php
// –ù–∞–¥—ë–∂–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ functions.php
$baseDir = __DIR__; // /home/.../public_html/admin/pages

$paths = [
    dirname($baseDir, 2) . '/functions.php', // /home/.../public_html/functions.php
    dirname($baseDir, 3) . '/functions.php', // /home/.../ffff.print47.rf/functions.php
    rtrim($_SERVER['DOCUMENT_ROOT'] ?? '', '/') . '/functions.php', // /home/.../public_html/functions.php
    realpath((($_SERVER['DOCUMENT_ROOT'] ?? '') . '/../functions.php')) ?: null, // /home/.../ffff.print47.rf/functions.php
];

$loaded = false;
foreach ($paths as $p) {
    if ($p && is_readable($p)) {
        require_once $p;
        $loaded = true;
        break;
    }
}

if (!$loaded) {
    http_response_code(500);
    die('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å functions.php. –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—É—Ç–∏: ' . implode(', ', array_filter($paths)));
}
/**
 * –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ - –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
 * –° –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–º –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 */
// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
require_once '../functions.php';
initSession();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
$mode = $_GET['mode'] ?? 'list'; // list, create, edit, view
$product_id = $_GET['id'] ?? null;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    header('Content-Type: application/json; charset=utf-8');

    try {
        $action = $_POST['action'] ?? '';

        switch ($action) {
            case 'save_product':
                $result = handleSaveProduct($_POST);
                echo json_encode($result);
                exit;

            case 'delete_product':
                $result = handleDeleteProduct($_POST['id'] ?? 0);
                echo json_encode($result);
                exit;

            case 'bulk_action':
                $result = handleBulkAction($_POST);
                echo json_encode($result);
                exit;

            case 'ai_generate':
                $result = handleAIGeneration($_POST);
                echo json_encode($result);
                exit;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
                exit;
        }
    } catch (Exception $e) {
        error_log('–û—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ —Ç–æ–≤–∞—Ä–æ–≤: ' . $e->getMessage());
        echo json_encode(['success' => false, 'message' => '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞']);
        exit;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
$products = getAllProducts();
$categories = getCategories();
$product = null;

if ($product_id && in_array($mode, ['edit', 'view'])) {
    $product = getProductById($product_id);
    if (!$product && $mode === 'edit') {
        $mode = 'list';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
function handleSaveProduct($data) {
    $productData = [
        'id' => $data['product_id'] ?? null,
        'name' => trim($data['name'] ?? ''),
        'latin_name' => trim($data['latin_name'] ?? ''),
        'description' => trim($data['description'] ?? ''),
        'short_description' => trim($data['short_description'] ?? ''),
        'price' => floatval($data['price'] ?? 0),
        'old_price' => floatval($data['old_price'] ?? 0),
        'category_id' => intval($data['category_id'] ?? 0),
        'sku' => trim($data['sku'] ?? ''),
        'stock_quantity' => intval($data['stock_quantity'] ?? 0),
        'status' => intval($data['status'] ?? 1),
        'main_image' => $data['main_image'] ?? '',
        'gallery' => json_decode($data['gallery'] ?? '[]', true),
        'badges' => json_decode($data['badges'] ?? '[]', true),
        'tags' => trim($data['tags'] ?? ''),
        'size' => trim($data['size'] ?? ''),
        'temperature' => trim($data['temperature'] ?? ''),
        'ph_level' => trim($data['ph_level'] ?? ''),
        'lighting' => trim($data['lighting'] ?? ''),
        'difficulty' => trim($data['difficulty'] ?? ''),
        'meta_title' => trim($data['meta_title'] ?? ''),
        'meta_description' => trim($data['meta_description'] ?? '')
    ];

    if (function_exists('saveProduct')) {
        return saveProduct($productData);
    }

    // –ë–∞–∑–æ–≤–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    return ['success' => true, 'product_id' => $productData['id'] ?? rand(1000, 9999), 'message' => '–¢–æ–≤–∞—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω'];
}

function handleDeleteProduct($id) {
    if (function_exists('deleteProduct')) {
        $result = deleteProduct($id);
        return ['success' => $result, 'message' => $result ? '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω' : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è'];
    }
    return ['success' => true, 'message' => '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω'];
}

function handleBulkAction($data) {
    $action = $data['bulk_action'] ?? '';
    $ids = $data['selected_products'] ?? [];

    if (empty($ids)) {
        return ['success' => false, 'message' => '–ù–µ –≤—ã–±—Ä–∞–Ω—ã —Ç–æ–≤–∞—Ä—ã'];
    }

    $processed = 0;
    foreach ($ids as $id) {
        switch ($action) {
            case 'delete':
                if (handleDeleteProduct($id)['success']) $processed++;
                break;
            case 'activate':
            case 'deactivate':
                $processed++;
                break;
        }
    }

    return ['success' => true, 'message' => "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $processed –∏–∑ " . count($ids)];
}

function handleAIGeneration($data) {
    $type = $data['ai_type'] ?? '';
    $context = $data['context'] ?? '';

    // –°–∏–º—É–ª—è—Ü–∏—è –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    $responses = [
        'description' => '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è...',
        'tags' => '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –ø–æ–ø—É–ª—è—Ä–Ω—ã–π, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π, –Ω–æ–≤–∏–Ω–∫–∞',
        'seo_title' => '–ö—É–ø–∏—Ç—å ' . ($context ?: '—Ç–æ–≤–∞—Ä') . ' - –ª—É—á—à–∏–µ —Ü–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ',
        'seo_description' => '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏'
    ];

    return [
        'success' => true,
        'content' => $responses[$type] ?? '–ò–ò –∫–æ–Ω—Ç–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω',
        'message' => '–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
    ];
}

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üöÄ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ - <?= ucfirst($mode) ?></title>

    <!-- Bootstrap 5 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            --danger-gradient: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
            --warning-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --info-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        }

        * { font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif; }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }

        .mega-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .mega-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient(
                45deg,
                transparent,
                transparent 2px,
                rgba(255,255,255,0.05) 2px,
                rgba(255,255,255,0.05) 4px
            );
            animation: float 20s linear infinite;
        }

        @keyframes float {
            0% { transform: translateX(-100px) translateY(-100px); }
            100% { transform: translateX(100px) translateY(100px); }
        }

        .mega-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            overflow: hidden;
        }

        .mega-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }

        .mode-nav {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        .mode-nav .btn {
            border-radius: 10px;
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            margin: 0 0.25rem;
            transition: all 0.3s ease;
        }

        .mode-nav .btn.active {
            background: var(--primary-gradient);
            border: none;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .ai-panel {
            background: var(--info-gradient);
            color: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .ai-panel::before {
            content: 'ü§ñ';
            position: absolute;
            top: -10px;
            right: -10px;
            font-size: 4rem;
            opacity: 0.1;
        }

        .stats-row {
            background: var(--dark-gradient);
            color: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.05);
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .product-card {
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .product-image {
            height: 200px;
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
            position: relative;
            overflow: hidden;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: all 0.3s ease;
        }

        .product-card:hover .product-image img {
            transform: scale(1.1);
        }

        .form-floating-custom {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-floating-custom input,
        .form-floating-custom select,
        .form-floating-custom textarea {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-floating-custom input:focus,
        .form-floating-custom select:focus,
        .form-floating-custom textarea:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
            transform: translateY(-2px);
        }

        .btn-gradient {
            background: var(--primary-gradient);
            border: none;
            border-radius: 10px;
            color: white;
            font-weight: 600;
            padding: 0.75rem 2rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-gradient::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: all 0.5s ease;
        }

        .btn-gradient:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            color: white;
        }

        .btn-gradient:hover::before {
            left: 100%;
        }

        .floating-actions {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            z-index: 1000;
        }

        .floating-btn {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            margin: 0.5rem;
            font-size: 1.5rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }

        .floating-btn:hover {
            transform: translateY(-5px) scale(1.1);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }

        .notification {
            position: fixed;
            top: 2rem;
            right: 2rem;
            z-index: 9999;
            min-width: 300px;
            border-radius: 10px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            backdrop-filter: blur(5px);
        }

        .spinner-custom {
            width: 60px;
            height: 60px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .breadcrumb-custom {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .search-panel {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        .search-input {
            border: 2px solid #e9ecef;
            border-radius: 25px;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 768px) {
            .mega-header { padding: 1rem 0; }
            .product-grid { grid-template-columns: 1fr; }
            .mode-nav { text-align: center; }
            .floating-actions { bottom: 1rem; right: 1rem; }
            .notification { right: 1rem; min-width: 250px; }
        }

        /* –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade-in {
            animation: fadeInUp 0.6s ease-out;
        }

        /* –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-gradient);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6b5b95 100%);
        }
    </style>
</head>
<body>
    <!-- –•–µ–¥–µ—Ä -->
    <div class="mega-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-2" style="position: relative; z-index: 1;">
                        <i class="fas fa-rocket me-3"></i>
                        üöÄ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´
                    </h1>
                    <p class="mb-0 opacity-75" style="position: relative; z-index: 1;">
                        –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏ —Å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–º
                    </p>
                </div>
                <div class="col-md-4 text-end" style="position: relative; z-index: 1;">
                    <div class="d-flex align-items-center justify-content-end">
                        <div class="me-3">
                            <small class="opacity-75">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</small><br>
                            <span class="badge bg-success bg-opacity-75 fs-6">
                                <i class="fas fa-circle me-1"></i>–û–Ω–ª–∞–π–Ω
                            </span>
                        </div>
                        <div class="text-end">
                            <small class="opacity-75">–í–µ—Ä—Å–∏—è</small><br>
                            <strong>v2.0 MEGA</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–µ–∂–∏–º–∞–º -->
        <div class="mode-nav animate-fade-in">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="btn-group" role="group">
                        <a href="?mode=list" class="btn <?= $mode === 'list' ? 'active' : 'btn-outline-primary' ?>">
                            <i class="fas fa-list me-2"></i>üìã –í—Å–µ —Ç–æ–≤–∞—Ä—ã
                        </a>
                        <a href="/admin/?page=add_product" class="btn <?= $mode === 'create' ? 'active' : 'btn-outline-success' ?>">
                            <i class="fas fa-plus me-2"></i>‚ûï –°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
                        </a>
                        <?php if ($product_id): ?>
                        <a href="?/admin/?page=product_editor<?= $product_id ?>" class="btn <?= $mode === 'edit' ? 'active' : 'btn-outline-warning' ?>">
                            <i class="fas fa-edit me-2"></i>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </a>
                        <a href="?mode=view&id=<?= $product_id ?>" class="btn <?= $mode === 'view' ? 'active' : 'btn-outline-info' ?>">
                            <i class="fas fa-eye me-2"></i>üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä
                        </a>
                        <?php endif; ?>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <button class="btn btn-outline-secondary me-2" onclick="exportData()">
                        <i class="fas fa-download me-1"></i>üìä –≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                    <button class="btn btn-outline-info" onclick="showHelp()">
                        <i class="fas fa-question-circle me-1"></i>‚ùì –ü–æ–º–æ—â—å
                    </button>
                </div>
            </div>
        </div>

        <!-- –ò–ò –ü–∞–Ω–µ–ª—å -->
        <div class="ai-panel animate-fade-in">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h5 class="mb-1">ü§ñ –ò–ò-–ü–æ–º–æ—â–Ω–∏–∫ –∞–∫—Ç–∏–≤–µ–Ω</h5>
                    <p class="mb-0 opacity-75">
                        –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞–º–∏
                    </p>
                </div>
                <div class="col-md-4 text-end">
                    <button class="btn btn-light btn-sm me-2" onclick="toggleAIPanel()">
                        <i class="fas fa-robot me-1"></i>–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
                    </button>
                    <span class="badge bg-light text-dark">–û–Ω–ª–∞–π–Ω</span>
                </div>
            </div>
        </div>

        <?php if ($mode === 'list'): ?>
        <!-- –†–ï–ñ–ò–ú: –°–ü–ò–°–û–ö –¢–û–í–ê–†–û–í -->
        <div class="animate-fade-in">
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div class="stats-row">
                <div class="row">
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div style="font-size: 2rem;">üì¶</div>
                            <h3><?= count($products) ?></h3>
                            <small>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div style="font-size: 2rem;">‚úÖ</div>
                            <h3><?= count(array_filter($products, fn($p) => ($p['status'] ?? 1) == 1)) ?></h3>
                            <small>–ê–∫—Ç–∏–≤–Ω—ã—Ö</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div style="font-size: 2rem;">üìÇ</div>
                            <h3><?= count($categories) ?></h3>
                            <small>–ö–∞—Ç–µ–≥–æ—Ä–∏–π</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div style="font-size: 2rem;">üí∞</div>
                            <h3><?= formatPrice(array_sum(array_column($products, 'price'))) ?></h3>
                            <small>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã -->
            <div class="search-panel">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="position-relative">
                            <input type="text" class="form-control search-input" placeholder="üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..." id="searchInput">
                            <i class="fas fa-search position-absolute" style="right: 1rem; top: 50%; transform: translateY(-50%); color: #6c757d;"></i>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="categoryFilter">
                            <option value="">üìÇ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                            <?php foreach ($categories as $cat): ?>
                            <option value="<?= $cat['id'] ?>"><?= htmlspecialchars($cat['name']) ?></option>
                            <?php endforeach; ?>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="statusFilter">
                            <option value="">üö¶ –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                            <option value="1">‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                            <option value="0">‚ùå –°–∫—Ä—ã—Ç—ã–µ</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-gradient w-100" onclick="applyFilters()">
                            <i class="fas fa-filter me-1"></i>–ü—Ä–∏–º–µ–Ω–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>

            <!-- –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
            <div class="mega-card">
                <div class="card-header bg-transparent border-0 p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</h5>
                        <div>
                            <button class="btn btn-outline-primary btn-sm me-2" onclick="toggleView()">
                                <i class="fas fa-th me-1"></i>–í–∏–¥
                            </button>
                            <button class="btn btn-outline-success btn-sm" onclick="selectAllProducts()">
                                <i class="fas fa-check-square me-1"></i>–í—ã–±—Ä–∞—Ç—å –≤—Å–µ
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div id="productsContainer">
                        <!-- –¢–æ–≤–∞—Ä—ã –≤ –≤–∏–¥–µ —Å–µ—Ç–∫–∏ -->
                        <div class="product-grid p-4">
                            <?php foreach ($products as $product): ?>
                            <div class="product-card" data-id="<?= $product['id'] ?>">
                                <div class="product-image">
                                    <?php if (!empty($product['main_image'])): ?>
                                    <img src="<?= htmlspecialchars($product['main_image']) ?>" alt="<?= htmlspecialchars($product['name']) ?>">
                                    <?php else: ?>
                                    <div class="d-flex align-items-center justify-content-center h-100">
                                        <i class="fas fa-image fa-3x text-muted"></i>
                                    </div>
                                    <?php endif; ?>

                                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
                                    <div class="position-absolute top-0 end-0 p-2">
                                        <div class="btn-group-vertical">
                                            <button class="btn btn-sm btn-light" onclick="viewProduct('<?= $product['id'] ?>')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="btn btn-sm btn-primary" onclick="editProduct('<?= $product['id'] ?>')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger" onclick="deleteProduct('<?= $product['id'] ?>')" title="–£–¥–∞–ª–∏—Ç—å">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <!-- –°—Ç–∞—Ç—É—Å -->
                                    <div class="position-absolute bottom-0 start-0 p-2">
                                        <?php if (($product['status'] ?? 1) == 1): ?>
                                        <span class="badge bg-success">‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span>
                                        <?php else: ?>
                                        <span class="badge bg-danger">‚ùå –°–∫—Ä—ã—Ç</span>
                                        <?php endif; ?>
                                    </div>

                                    <!-- –ß–µ–∫–±–æ–∫—Å –≤—ã–±–æ—Ä–∞ -->
                                    <div class="position-absolute top-0 start-0 p-2">
                                        <input type="checkbox" class="form-check-input product-checkbox" value="<?= $product['id'] ?>">
                                    </div>
                                </div>

                                <div class="p-3">
                                    <h6 class="fw-bold mb-2"><?= htmlspecialchars($product['name']) ?></h6>

                                    <?php if (!empty($product['latin_name'])): ?>
                                    <p class="small text-muted fst-italic mb-2">üî¨ <?= htmlspecialchars($product['latin_name']) ?></p>
                                    <?php endif; ?>

                                    <p class="small text-muted mb-3">
                                        <?= htmlspecialchars(mb_substr($product['description'] ?? '', 0, 100)) ?>...
                                    </p>

                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="fw-bold text-success"><?= formatPrice($product['price'] ?? 0) ?></span>
                                            <?php if (!empty($product['old_price']) && $product['old_price'] > $product['price']): ?>
                                            <br><small class="text-muted text-decoration-line-through"><?= formatPrice($product['old_price']) ?></small>
                                            <?php endif; ?>
                                        </div>
                                        <small class="text-muted">
                                            üìÇ <?php
                                            $cat = array_filter($categories, fn($c) => $c['id'] == ($product['category_id'] ?? 0));
                                            echo $cat ? htmlspecialchars(array_values($cat)[0]['name']) : '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
                                            ?>
                                        </small>
                                    </div>

                                    <!-- –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞ -->
                                    <?php if (!empty($product['badges']) && is_array($product['badges'])): ?>
                                    <div class="mt-2">
                                        <?php foreach (array_slice($product['badges'], 0, 3) as $badge): ?>
                                        <?php
                                        $badgeColors = ['new' => 'success', 'hit' => 'danger', 'recommend' => 'warning', 'discount' => 'info', 'premium' => 'dark', 'eco' => 'success'];
                                        $badgeTexts = ['new' => 'üÜï', 'hit' => 'üî•', 'recommend' => '‚≠ê', 'discount' => 'üí∏', 'premium' => 'üíé', 'eco' => 'üåø'];
                                        $color = $badgeColors[$badge] ?? 'secondary';
                                        $text = $badgeTexts[$badge] ?? 'üè∑Ô∏è';
                                        ?>
                                        <span class="badge bg-<?= $color ?> me-1"><?= $text ?></span>
                                        <?php endforeach; ?>
                                    </div>
                                    <?php endif; ?>
                                </div>
                            </div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <?php elseif ($mode === 'create' || $mode === 'edit'): ?>
        <!-- –†–ï–ñ–ò–ú: –°–û–ó–î–ê–ù–ò–ï/–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –¢–û–í–ê–†–ê -->
        <div class="animate-fade-in">
            <div class="row">
                <div class="col-lg-8">
                    <div class="mega-card">
                        <div class="card-header bg-transparent border-0 p-4">
                            <h5 class="mb-0">
                                <?php if ($mode === 'create'): ?>
                                <i class="fas fa-plus me-2 text-success"></i>‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                                <?php else: ?>
                                <i class="fas fa-edit me-2 text-warning"></i>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                                <?php endif; ?>
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <form id="productForm" onsubmit="saveProduct(event)">
                                <input type="hidden" name="action" value="save_product">
                                <input type="hidden" name="product_id" value="<?= $product['id'] ?? '' ?>">

                                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                                <h6 class="fw-bold mb-3 text-primary">üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h6>

                                <div class="form-floating-custom">
                                    <input type="text" class="form-control" name="name" id="productName" required
                                           placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞" value="<?= htmlspecialchars($product['name'] ?? '') ?>">
                                    <label for="productName">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-floating-custom">
                                            <input type="text" class="form-control" name="latin_name" id="latinName"
                                                   placeholder="–õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" value="<?= htmlspecialchars($product['latin_name'] ?? '') ?>">
                                            <label for="latinName">–õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating-custom">
                                            <input type="text" class="form-control" name="sku" id="productSKU"
                                                   placeholder="–ê—Ä—Ç–∏–∫—É–ª" value="<?= htmlspecialchars($product['sku'] ?? '') ?>">
                                            <label for="productSKU">–ê—Ä—Ç–∏–∫—É–ª</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-floating-custom">
                                            <select class="form-select" name="category_id" id="categorySelect" required>
                                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                                <?php foreach ($categories as $cat): ?>
                                                <option value="<?= $cat['id'] ?>" <?= ($product['category_id'] ?? 0) == $cat['id'] ? 'selected' : '' ?>>
                                                    <?= htmlspecialchars($cat['name']) ?>
                                                </option>
                                                <?php endforeach; ?>
                                            </select>
                                            <label for="categorySelect">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-floating-custom">
                                            <input type="number" class="form-control" name="price" id="productPrice" required
                                                   min="0" step="0.01" placeholder="0" value="<?= $product['price'] ?? '' ?>">
                                            <label for="productPrice">–¶–µ–Ω–∞ *</label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-floating-custom">
                                            <input type="number" class="form-control" name="old_price" id="oldPrice"
                                                   min="0" step="0.01" placeholder="0" value="<?= $product['old_price'] ?? '' ?>">
                                            <label for="oldPrice">–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞</label>
                                        </div>
                                    </div>
                                </div>

                                <!-- –û–ø–∏—Å–∞–Ω–∏—è -->
                                <h6 class="fw-bold mb-3 text-primary mt-4">üìÑ –û–ø–∏—Å–∞–Ω–∏—è</h6>

                                <div class="form-floating-custom">
                                    <textarea class="form-control" name="short_description" id="shortDesc" rows="3"
                                              placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"><?= htmlspecialchars($product['short_description'] ?? '') ?></textarea>
                                    <label for="shortDesc">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                    <div class="form-text">
                                        <small>–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ —Ç–æ–≤–∞—Ä–æ–≤</small>
                                        <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="aiGenerate('short_description')">
                                            <i class="fas fa-robot"></i> –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                                        </button>
                                    </div>
                                </div>

                                <div class="form-floating-custom">
                                    <textarea class="form-control" name="description" id="fullDesc" rows="8" required
                                              placeholder="–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"><?= htmlspecialchars($product['description'] ?? '') ?></textarea>
                                    <label for="fullDesc">–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *</label>
                                    <div class="form-text">
                                        <small>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</small>
                                        <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="aiGenerate('description')">
                                            <i class="fas fa-robot"></i> –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-success ms-1" onclick="aiImprove('description')">
                                            <i class="fas fa-magic"></i> –£–ª—É—á—à–∏—Ç—å
                                        </button>
                                    </div>
                                </div>

                                <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
                                <h6 class="fw-bold mb-3 text-primary mt-4">üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h6>

                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-floating-custom">
                                            <input type="text" class="form-control" name="size" id="productSize"
                                                   placeholder="–†–∞–∑–º–µ—Ä" value="<?= htmlspecialchars($product['size'] ?? '') ?>">
                                            <label for="productSize">–†–∞–∑–º–µ—Ä</label>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-floating-custom">
                                            <input type="text" class="form-control" name="temperature" id="temperature"
                                                   placeholder="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" value="<?= htmlspecialchars($product['temperature'] ?? '') ?>">
                                            <label for="temperature">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</label>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-floating-custom">
                                            <input type="text" class="form-control" name="ph_level" id="phLevel"
                                                   placeholder="pH —É—Ä–æ–≤–µ–Ω—å" value="<?= htmlspecialchars($product['ph_level'] ?? '') ?>">
                                            <label for="phLevel">pH —É—Ä–æ–≤–µ–Ω—å</label>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-floating-custom">
                                            <select class="form-select" name="lighting" id="lighting">
                                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ</option>
                                                <option value="—Å–ª–∞–±–æ–µ" <?= ($product['lighting'] ?? '') == '—Å–ª–∞–±–æ–µ' ? 'selected' : '' ?>>–°–ª–∞–±–æ–µ</option>
                                                <option value="—Å—Ä–µ–¥–Ω–µ–µ" <?= ($product['lighting'] ?? '') == '—Å—Ä–µ–¥–Ω–µ–µ' ? 'selected' : '' ?>>–°—Ä–µ–¥–Ω–µ–µ</option>
                                                <option value="—è—Ä–∫–æ–µ" <?= ($product['lighting'] ?? '') == '—è—Ä–∫–æ–µ' ? 'selected' : '' ?>>–Ø—Ä–∫–æ–µ</option>
                                            </select>
                                            <label for="lighting">–û—Å–≤–µ—â–µ–Ω–∏–µ</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-floating-custom">
                                            <select class="form-select" name="difficulty" id="difficulty">
                                                <option value="–ª–µ–≥–∫–æ" <?= ($product['difficulty'] ?? '') == '–ª–µ–≥–∫–æ' ? 'selected' : '' ?>>üü¢ –õ–µ–≥–∫–æ</option>
                                                <option value="—Å—Ä–µ–¥–Ω–µ" <?= ($product['difficulty'] ?? '') == '—Å—Ä–µ–¥–Ω–µ' ? 'selected' : '' ?>>üü° –°—Ä–µ–¥–Ω–µ</option>
                                                <option value="—Å–ª–æ–∂–Ω–æ" <?= ($product['difficulty'] ?? '') == '—Å–ª–æ–∂–Ω–æ' ? 'selected' : '' ?>>üî¥ –°–ª–æ–∂–Ω–æ</option>
                                                <option value="—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π" <?= ($product['difficulty'] ?? '') == '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π' ? 'selected' : '' ?>>üü£ –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π</option>
                                            </select>
                                            <label for="difficulty">–°–ª–æ–∂–Ω–æ—Å—Ç—å —É—Ö–æ–¥–∞</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating-custom">
                                            <input type="number" class="form-control" name="stock_quantity" id="stock"
                                                   min="0" placeholder="0" value="<?= $product['stock_quantity'] ?? '' ?>">
                                            <label for="stock">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</label>
                                        </div>
                                    </div>
                                </div>

                                <!-- SEO -->
                                <h6 class="fw-bold mb-3 text-primary mt-4">üéØ SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>

                                <div class="form-floating-custom">
                                    <input type="text" class="form-control" name="meta_title" id="metaTitle"
                                           maxlength="60" placeholder="SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫" value="<?= htmlspecialchars($product['meta_title'] ?? '') ?>">
                                    <label for="metaTitle">SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
                                    <div class="form-text">
                                        <small>–°–∏–º–≤–æ–ª–æ–≤: <span id="titleLength">0</span>/60</small>
                                        <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="aiGenerate('seo_title')">
                                            <i class="fas fa-robot"></i> –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                                        </button>
                                    </div>
                                </div>

                                <div class="form-floating-custom">
                                    <textarea class="form-control" name="meta_description" id="metaDesc" rows="3"
                                              maxlength="160" placeholder="SEO –æ–ø–∏—Å–∞–Ω–∏–µ"><?= htmlspecialchars($product['meta_description'] ?? '') ?></textarea>
                                    <label for="metaDesc">SEO –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                                    <div class="form-text">
                                        <small>–°–∏–º–≤–æ–ª–æ–≤: <span id="descLength">0</span>/160</small>
                                        <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="aiGenerate('seo_description')">
                                            <i class="fas fa-robot"></i> –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                                        </button>
                                    </div>
                                </div>

                                <div class="form-floating-custom">
                                    <input type="text" class="form-control" name="tags" id="productTags"
                                           placeholder="–¢–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é" value="<?= htmlspecialchars($product['tags'] ?? '') ?>">
                                    <label for="productTags">–¢–µ–≥–∏</label>
                                    <div class="form-text">
                                        <small>–ü–æ–º–æ–≥–∞—é—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä</small>
                                        <button type="button" class="btn btn-sm btn-outline-info ms-2" onclick="aiGenerate('tags')">
                                            <i class="fas fa-robot"></i> –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                                        </button>
                                    </div>
                                </div>

                                <!-- –ö–Ω–æ–ø–∫–∏ -->
                                <div class="d-flex justify-content-between align-items-center mt-4 pt-4 border-top">
                                    <div>
                                        <button type="button" class="btn btn-outline-secondary me-2" onclick="saveDraft()">
                                            <i class="fas fa-save me-1"></i>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
                                        </button>
                                        <button type="button" class="btn btn-outline-info" onclick="previewProduct()">
                                            <i class="fas fa-eye me-1"></i>üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                                        </button>
                                    </div>
                                    <div>
                                        <button type="button" class="btn btn-outline-danger me-2" onclick="resetForm()">
                                            <i class="fas fa-undo me-1"></i>üîÑ –°–±—Ä–æ—Å–∏—Ç—å
                                        </button>
                                        <button type="submit" class="btn btn-gradient">
                                            <i class="fas fa-save me-1"></i>
                                            <?= $mode === 'create' ? '‚ûï –°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' ?>
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
                <div class="col-lg-4">
                    <!-- –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ -->
                    <div class="mega-card mb-4">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫</h6>
                        </div>
                        <div class="card-body p-3">
                            <div id="aiChat" style="height: 200px; overflow-y: auto; background: #f8f9fa; border-radius: 10px; padding: 1rem; margin-bottom: 1rem;">
                                <div class="text-center text-muted">
                                    <i class="fas fa-robot fa-2x mb-2"></i>
                                    <p>–ò–ò –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞!</p>
                                </div>
                            </div>
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –ò–ò..." id="aiInput">
                                <button class="btn btn-primary" onclick="sendAIMessage()">
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            </div>

                            <!-- –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –ò–ò -->
                            <div class="mt-3">
                                <small class="text-muted mb-2 d-block">–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:</small>
                                <div class="d-flex flex-wrap gap-1">
                                    <button class="btn btn-sm btn-outline-primary" onclick="aiQuickCommand('improve_all')">
                                        –£–ª—É—á—à–∏—Ç—å –≤—Å—ë
                                    </button>
                                    <button class="btn btn-sm btn-outline-success" onclick="aiQuickCommand('seo_optimize')">
                                        SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                                    </button>
                                    <button class="btn btn-sm btn-outline-info" onclick="aiQuickCommand('suggest_price')">
                                        –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–Ω—É
                                    </button>
                                    <button class="btn btn-sm btn-outline-warning" onclick="aiQuickCommand('generate_images')">
                                        –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                    <div class="mega-card mb-4">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞</h6>
                        </div>
                        <div class="card-body p-3">
                            <!-- –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
                            <div class="mb-3">
                                <label class="form-label small">–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
                                <div class="border-2 border-dashed rounded p-3 text-center" id="mainImageArea" 
                                     style="border-color: #dee2e6; cursor: pointer;" onclick="selectMainImage()">
                                    <?php if (!empty($product['main_image'])): ?>
                                    <img src="<?= htmlspecialchars($product['main_image']) ?>" class="img-fluid rounded" style="max-height: 150px;">
                                    <?php else: ?>
                                    <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-2"></i>
                                    <p class="text-muted mb-0">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏</p>
                                    <?php endif; ?>
                                </div>
                                <input type="hidden" name="main_image" id="mainImageInput" value="<?= htmlspecialchars($product['main_image'] ?? '') ?>">
                            </div>

                            <!-- –ì–∞–ª–µ—Ä–µ—è -->
                            <div class="mb-3">
                                <label class="form-label small">–ì–∞–ª–µ—Ä–µ—è <span class="badge bg-primary" id="galleryCount">0</span></label>
                                <div class="border-2 border-dashed rounded p-2" style="border-color: #dee2e6;">
                                    <div id="galleryPreview" class="d-flex flex-wrap gap-2">
                                        <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å -->
                                    </div>
                                    <div class="text-center mt-2">
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="selectGalleryImages()">
                                            <i class="fas fa-plus me-1"></i>–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                        </button>
                                    </div>
                                </div>
                                <input type="hidden" name="gallery" id="galleryInput" value="<?= htmlspecialchars(json_encode($product['gallery'] ?? [])) ?>">
                            </div>
                        </div>
                    </div>

                    <!-- –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞ -->
                    <div class="mega-card mb-4">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">üè∑Ô∏è –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞</h6>
                        </div>
                        <div class="card-body p-3">
                            <?php 
                            $currentBadges = $product['badges'] ?? [];
                            if (!is_array($currentBadges)) {
                                $currentBadges = json_decode($currentBadges, true) ?: [];
                            }
                            ?>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_new" value="new" 
                                       <?= in_array('new', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_new">
                                    <span class="badge bg-success">üÜï –ù–æ–≤–∏–Ω–∫–∞</span>
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_hit" value="hit" 
                                       <?= in_array('hit', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_hit">
                                    <span class="badge bg-danger">üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂</span>
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_recommend" value="recommend" 
                                       <?= in_array('recommend', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_recommend">
                                    <span class="badge bg-warning text-dark">‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</span>
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_discount" value="discount" 
                                       <?= in_array('discount', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_discount">
                                    <span class="badge bg-info">üí∏ –°–∫–∏–¥–∫–∞</span>
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_premium" value="premium" 
                                       <?= in_array('premium', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_premium">
                                    <span class="badge bg-dark">üíé –ü—Ä–µ–º–∏—É–º</span>
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" id="badge_eco" value="eco" 
                                       <?= in_array('eco', $currentBadges) ? 'checked' : '' ?> onchange="updateBadges()">
                                <label class="form-check-label" for="badge_eco">
                                    <span class="badge bg-success">üåø –≠–∫–æ</span>
                                </label>
                            </div>
                            <input type="hidden" name="badges" id="badgesInput" value="<?= htmlspecialchars(json_encode($currentBadges)) ?>">
                        </div>
                    </div>

                    <!-- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ -->
                    <div class="mega-card">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</h6>
                        </div>
                        <div class="card-body p-3">
                            <div id="productPreview">
                                <div class="text-center p-3">
                                    <img id="previewImage" src="<?= htmlspecialchars($product['main_image'] ?? '') ?>" 
                                         class="img-fluid rounded mb-3" style="max-height: 120px; <?= empty($product['main_image']) ? 'display: none;' : '' ?>">
                                    <div id="previewPlaceholder" class="<?= !empty($product['main_image']) ? 'd-none' : '' ?>">
                                        <i class="fas fa-image fa-3x text-muted mb-2"></i>
                                        <p class="text-muted">–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                                    </div>
                                </div>
                                <h6 id="previewName" class="fw-bold"><?= htmlspecialchars($product['name'] ?? '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞') ?></h6>
                                <p id="previewDescription" class="small text-muted">
                                    <?= htmlspecialchars(mb_substr($product['description'] ?? '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...', 0, 100)) ?>...
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span id="previewPrice" class="fw-bold text-success">
                                        <?= formatPrice($product['price'] ?? 0) ?>
                                    </span>
                                    <span id="previewCategory" class="badge bg-secondary">
                                        <?php
                                        if (!empty($product['category_id'])) {
                                            foreach ($categories as $cat) {
                                                if ($cat['id'] == $product['category_id']) {
                                                    echo htmlspecialchars($cat['name']);
                                                    break;
                                                }
                                            }
                                        } else {
                                            echo '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';
                                        }
                                        ?>
                                    </span>
                                </div>
                                <div id="previewBadges" class="mt-2">
                                    <!-- –Ø—Ä–ª—ã–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <?php elseif ($mode === 'view' && $product): ?>
        <!-- –†–ï–ñ–ò–ú: –ü–†–û–°–ú–û–¢–† –¢–û–í–ê–†–ê -->
        <div class="animate-fade-in">
            <div class="row">
                <div class="col-lg-8">
                    <div class="mega-card">
                        <div class="card-header bg-transparent border-0 p-4">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h5 class="mb-1">üëÅÔ∏è <?= htmlspecialchars($product['name']) ?></h5>
                                    <?php if (!empty($product['latin_name'])): ?>
                                    <p class="text-muted fst-italic mb-0">üî¨ <?= htmlspecialchars($product['latin_name']) ?></p>
                                    <?php endif; ?>
                                </div>
                                <div>
                                    <a href="/admin/?page=product_editor=<?= $product['id'] ?>" class="btn btn-warning me-2">
                                        <i class="fas fa-edit me-1"></i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                                    </a>
                                    <button class="btn btn-outline-danger" onclick="deleteProduct('<?= $product['id'] ?>')">
                                        <i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-4">
                            <!-- –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≥–∞–ª–µ—Ä–µ—è -->
                            <?php if (!empty($product['main_image']) || !empty($product['gallery'])): ?>
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <?php if (!empty($product['main_image'])): ?>
                                    <img src="<?= htmlspecialchars($product['main_image']) ?>" 
                                         class="img-fluid rounded shadow" alt="<?= htmlspecialchars($product['name']) ?>">
                                    <?php endif; ?>
                                </div>
                                <div class="col-md-6">
                                    <?php if (!empty($product['gallery']) && is_array($product['gallery'])): ?>
                                    <div class="row g-2">
                                        <?php foreach (array_slice($product['gallery'], 0, 6) as $image): ?>
                                        <div class="col-4">
                                            <img src="<?= htmlspecialchars($image) ?>" class="img-fluid rounded" 
                                                 style="height: 80px; object-fit: cover; cursor: pointer;" 
                                                 onclick="showImageModal('<?= htmlspecialchars($image) ?>')">
                                        </div>
                                        <?php endforeach; ?>
                                    </div>
                                    <?php endif; ?>
                                </div>
                            </div>
                            <?php endif; ?>

                            <!-- –Ø—Ä–ª—ã–∫–∏ -->
                            <?php if (!empty($product['badges']) && is_array($product['badges'])): ?>
                            <div class="mb-3">
                                <?php foreach ($product['badges'] as $badge): ?>
                                <?php
                                $badgeColors = ['new' => 'success', 'hit' => 'danger', 'recommend' => 'warning', 'discount' => 'info', 'premium' => 'dark', 'eco' => 'success'];
                                $badgeTexts = ['new' => 'üÜï –ù–æ–≤–∏–Ω–∫–∞', 'hit' => 'üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂', 'recommend' => '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º', 'discount' => 'üí∏ –°–∫–∏–¥–∫–∞', 'premium' => 'üíé –ü—Ä–µ–º–∏—É–º', 'eco' => 'üåø –≠–∫–æ'];
                                $color = $badgeColors[$badge] ?? 'secondary';
                                $text = $badgeTexts[$badge] ?? $badge;
                                ?>
                                <span class="badge bg-<?= $color ?> me-2 mb-2"><?= $text ?></span>
                                <?php endforeach; ?>
                            </div>
                            <?php endif; ?>

                            <!-- –¶–µ–Ω–∞ -->
                            <div class="mb-4">
                                <h3 class="text-success mb-1"><?= formatPrice($product['price']) ?></h3>
                                <?php if (!empty($product['old_price']) && $product['old_price'] > $product['price']): ?>
                                <span class="text-muted text-decoration-line-through me-2"><?= formatPrice($product['old_price']) ?></span>
                                <?php
                                $discount = round((($product['old_price'] - $product['price']) / $product['old_price']) * 100);
                                ?>
                                <span class="badge bg-danger">-<?= $discount ?>%</span>
                                <?php endif; ?>
                            </div>

                            <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
                            <div class="mb-4">
                                <h6 class="fw-bold text-primary">üìÑ –û–ø–∏—Å–∞–Ω–∏–µ</h6>
                                <?php if (!empty($product['short_description'])): ?>
                                <p class="lead"><?= nl2br(htmlspecialchars($product['short_description'])) ?></p>
                                <?php endif; ?>
                                <div><?= nl2br(htmlspecialchars($product['description'])) ?></div>
                            </div>

                            <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
                            <div class="mb-4">
                                <h6 class="fw-bold text-primary">üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h6>
                                <div class="row">
                                    <?php if (!empty($product['size'])): ?>
                                    <div class="col-md-3 mb-2">
                                        <strong>üìè –†–∞–∑–º–µ—Ä:</strong><br>
                                        <span><?= htmlspecialchars($product['size']) ?></span>
                                    </div>
                                    <?php endif; ?>

                                    <?php if (!empty($product['temperature'])): ?>
                                    <div class="col-md-3 mb-2">
                                        <strong>üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</strong><br>
                                        <span><?= htmlspecialchars($product['temperature']) ?></span>
                                    </div>
                                    <?php endif; ?>

                                    <?php if (!empty($product['ph_level'])): ?>
                                    <div class="col-md-3 mb-2">
                                        <strong>üíß pH —É—Ä–æ–≤–µ–Ω—å:</strong><br>
                                        <span><?= htmlspecialchars($product['ph_level']) ?></span>
                                    </div>
                                    <?php endif; ?>

                                    <?php if (!empty($product['lighting'])): ?>
                                    <div class="col-md-3 mb-2">
                                        <strong>üí° –û—Å–≤–µ—â–µ–Ω–∏–µ:</strong><br>
                                        <span><?= htmlspecialchars($product['lighting']) ?></span>
                                    </div>
                                    <?php endif; ?>

                                    <?php if (!empty($product['difficulty'])): ?>
                                    <div class="col-md-3 mb-2">
                                        <strong>‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å:</strong><br>
                                        <span>
                                            <?php
                                            $difficultyIcons = ['–ª–µ–≥–∫–æ' => 'üü¢', '—Å—Ä–µ–¥–Ω–µ' => 'üü°', '—Å–ª–æ–∂–Ω–æ' => 'üî¥', '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π' => 'üü£'];
                                            echo $difficultyIcons[$product['difficulty']] ?? '';
                                            echo ' ' . htmlspecialchars($product['difficulty']);
                                            ?>
                                        </span>
                                    </div>
                                    <?php endif; ?>
                                </div>
                            </div>

                            <!-- –¢–µ–≥–∏ -->
                            <?php if (!empty($product['tags'])): ?>
                            <div class="mb-4">
                                <h6 class="fw-bold text-primary">üè∑Ô∏è –¢–µ–≥–∏</h6>
                                <?php foreach (explode(',', $product['tags']) as $tag): ?>
                                <span class="badge bg-light text-dark me-1">#<?= trim(htmlspecialchars($tag)) ?></span>
                                <?php endforeach; ?>
                            </div>
                            <?php endif; ?>
                        </div>
                    </div>
                </div>

                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å -->
                <div class="col-lg-4">
                    <div class="mega-card mb-4">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ</h6>
                        </div>
                        <div class="card-body p-3">
                            <div class="d-flex justify-content-between mb-2">
                                <span>ID —Ç–æ–≤–∞—Ä–∞:</span>
                                <code><?= htmlspecialchars($product['id']) ?></code>
                            </div>

                            <?php if (!empty($product['sku'])): ?>
                            <div class="d-flex justify-content-between mb-2">
                                <span>–ê—Ä—Ç–∏–∫—É–ª:</span>
                                <code><?= htmlspecialchars($product['sku']) ?></code>
                            </div>
                            <?php endif; ?>

                            <div class="d-flex justify-content-between mb-2">
                                <span>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                                <span>
                                    <?php
                                    foreach ($categories as $cat) {
                                        if ($cat['id'] == ($product['category_id'] ?? 0)) {
                                            echo 'üìÇ ' . htmlspecialchars($cat['name']);
                                            break;
                                        }
                                    }
                                    ?>
                                </span>
                            </div>

                            <div class="d-flex justify-content-between mb-2">
                                <span>–°—Ç–∞—Ç—É—Å:</span>
                                <?php if (($product['status'] ?? 1) == 1): ?>
                                <span class="badge bg-success">‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span>
                                <?php else: ?>
                                <span class="badge bg-danger">‚ùå –°–∫—Ä—ã—Ç</span>
                                <?php endif; ?>
                            </div>

                            <div class="d-flex justify-content-between mb-2">
                                <span>–ù–∞ —Å–∫–ª–∞–¥–µ:</span>
                                <span>
                                    <?php
                                    $stock = $product['stock_quantity'] ?? 0;
                                    if ($stock > 10): ?>
                                        <span class="badge bg-success">üì¶ <?= $stock ?> —à—Ç.</span>
                                    <?php elseif ($stock > 0): ?>
                                        <span class="badge bg-warning">‚ö†Ô∏è <?= $stock ?> —à—Ç.</span>
                                    <?php else: ?>
                                        <span class="badge bg-danger">‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>
                                    <?php endif; ?>
                                </span>
                            </div>

                            <?php if (!empty($product['created_at'])): ?>
                            <div class="d-flex justify-content-between mb-2">
                                <span>–°–æ–∑–¥–∞–Ω:</span>
                                <small><?= htmlspecialchars($product['created_at']) ?></small>
                            </div>
                            <?php endif; ?>

                            <?php if (!empty($product['updated_at'])): ?>
                            <div class="d-flex justify-content-between mb-2">
                                <span>–û–±–Ω–æ–≤–ª–µ–Ω:</span>
                                <small><?= htmlspecialchars($product['updated_at']) ?></small>
                            </div>
                            <?php endif; ?>
                        </div>
                    </div>

                    <?php if (!empty($product['meta_title']) || !empty($product['meta_description'])): ?>
                    <div class="mega-card">
                        <div class="card-header bg-transparent border-0 p-3">
                            <h6 class="mb-0">üéØ SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>
                        </div>
                        <div class="card-body p-3">
                            <?php if (!empty($product['meta_title'])): ?>
                            <div class="mb-3">
                                <strong>SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫:</strong>
                                <p class="small text-muted mb-0"><?= htmlspecialchars($product['meta_title']) ?></p>
                            </div>
                            <?php endif; ?>

                            <?php if (!empty($product['meta_description'])): ?>
                            <div class="mb-0">
                                <strong>SEO –æ–ø–∏—Å–∞–Ω–∏–µ:</strong>
                                <p class="small text-muted mb-0"><?= htmlspecialchars($product['meta_description']) ?></p>
                            </div>
                            <?php endif; ?>
                        </div>
                    </div>
                    <?php endif; ?>
                </div>
            </div>
        </div>

        <?php else: ?>
        <!-- –û–®–ò–ë–ö–ê: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω -->
        <div class="text-center py-5 animate-fade-in">
            <i class="fas fa-exclamation-triangle fa-4x text-warning mb-3"></i>
            <h4>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h4>
            <p class="text-muted">–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω</p>
            <a href="?mode=list" class="btn btn-gradient">
                <i class="fas fa-arrow-left me-1"></i>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤
            </a>
        </div>
        <?php endif; ?>
    </div>

    <!-- –ü–ª–∞–≤–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
    <div class="floating-actions">
        <button class="floating-btn btn btn-primary" onclick="scrollToTop()" title="–ù–∞–≤–µ—Ä—Ö">
            <i class="fas fa-arrow-up"></i>
        </button>
        <?php if ($mode !== 'create'): ?>
        <a href="?mode=create" class="floating-btn btn btn-success" title="–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä">
            <i class="fas fa-plus"></i>
        </a>
        <?php endif; ?>
        <button class="floating-btn btn btn-info" onclick="showHelp()" title="–ü–æ–º–æ—â—å">
            <i class="fas fa-question"></i>
        </button>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ -->

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
    <div class="modal fade" id="imageModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center">
                    <img id="modalImage" src="" class="img-fluid rounded" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞">
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ò–ò —á–∞—Ç–∞ -->
    <div class="modal fade" id="aiChatModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-robot me-2"></i>ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —á–∞—Ç
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="aiChatHistory" style="height: 400px; overflow-y: auto; background: #f8f9fa; border-radius: 10px; padding: 1rem; margin-bottom: 1rem;">
                        <div class="text-center text-muted">
                            <i class="fas fa-robot fa-3x mb-3"></i>
                            <h5>–ò–ò –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!</h5>
                            <p>–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–≤–∞—Ä–∞—Ö, SEO, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø–æ–ª–µ–π.</p>
                        </div>
                    </div>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." id="aiChatInput">
                        <button class="btn btn-primary" onclick="sendAIChatMessage()">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏ -->
    <div class="modal fade" id="helpModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-question-circle me-2"></i>‚ùì –ü–æ–º–æ—â—å - –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="text-primary">üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</h6>
                            <ul class="list-unstyled">
                                <li><strong>üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏:</strong> –°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤</li>
                                <li><strong>ü§ñ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫:</strong> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</li>
                                <li><strong>üñºÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:</strong> –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ—Ç–æ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏</li>
                                <li><strong>üè∑Ô∏è –°–∏—Å—Ç–µ–º–∞ —è—Ä–ª—ã–∫–æ–≤:</strong> –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–∫–∞–º–∏</li>
                                <li><strong>üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:</strong> Meta-—Ç–µ–≥–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º</li>
                                <li><strong>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞:</strong> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–æ–≤–∞—Ä–∞–º –∏ –ø—Ä–æ–¥–∞–∂–∞–º</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6 class="text-primary">‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏</h6>
                            <ul class="list-unstyled">
                                <li><code>Ctrl + N</code> - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</li>
                                <li><code>Ctrl + S</code> - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä</li>
                                <li><code>Ctrl + F</code> - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</li>
                                <li><code>Ctrl + A</code> - –í—ã–±—Ä–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</li>
                                <li><code>Ctrl + E</code> - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä</li>
                                <li><code>Ctrl + D</code> - –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä</li>
                                <li><code>Ctrl + ?</code> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É</li>
                            </ul>
                        </div>
                    </div>

                    <hr>

                    <div class="row">
                        <div class="col-md-4">
                            <h6 class="text-success">üéØ –ò–ò –∫–æ–º–∞–Ω–¥—ã</h6>
                            <ul class="list-unstyled small">
                                <li><code>–£–ª—É—á—à–∏—Ç—å –≤—Å—ë</code> - –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞</li>
                                <li><code>SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</code> - –£–ª—É—á—à–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞</li>
                                <li><code>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–Ω—É</code> - –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞</li>
                                <li><code>–°–æ–∑–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ</code> - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è</li>
                            </ul>
                        </div>
                        <div class="col-md-4">
                            <h6 class="text-info">üìä –°—Ç–∞—Ç—É—Å—ã —Ç–æ–≤–∞—Ä–æ–≤</h6>
                            <ul class="list-unstyled small">
                                <li><span class="badge bg-success">‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span> - –¢–æ–≤–∞—Ä –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</li>
                                <li><span class="badge bg-danger">‚ùå –°–∫—Ä—ã—Ç</span> - –¢–æ–≤–∞—Ä —Å–∫—Ä—ã—Ç –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π</li>
                                <li><span class="badge bg-warning">‚ö†Ô∏è –ú–∞–ª–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</span> - –û—Å—Ç–∞—Ç–æ–∫ –º–µ–Ω–µ–µ 10 —à—Ç.</li>
                                <li><span class="badge bg-danger">‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span> - –¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è</li>
                            </ul>
                        </div>
                        <div class="col-md-4">
                            <h6 class="text-warning">üè∑Ô∏è –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤</h6>
                            <ul class="list-unstyled small">
                                <li><span class="badge bg-success">üÜï –ù–æ–≤–∏–Ω–∫–∞</span> - –ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã</li>
                                <li><span class="badge bg-danger">üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂</span> - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</li>
                                <li><span class="badge bg-warning text-dark">‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</span> - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ</li>
                                <li><span class="badge bg-info">üí∏ –°–∫–∏–¥–∫–∞</span> - –¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π</li>
                                <li><span class="badge bg-dark">üíé –ü—Ä–µ–º–∏—É–º</span> - –ü—Ä–µ–º–∏—É–º —Ç–æ–≤–∞—Ä—ã</li>
                                <li><span class="badge bg-success">üåø –≠–∫–æ</span> - –≠–∫–æ-—Ñ—Ä–µ–Ω–¥–ª–∏</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                    <button type="button" class="btn btn-primary" onclick="showTutorial()">üìö –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
    // üöÄ –ú–ï–ì–ê JAVASCRIPT –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–ê–ú–ò

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    let currentMode = '<?= $mode ?>';
    let currentProductId = '<?= $product_id ?>';
    let galleryImages = <?= json_encode($product['gallery'] ?? []) ?>;
    let aiChatHistory = [];

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üöÄ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        console.log('üìä –†–µ–∂–∏–º:', currentMode);
        console.log('üîç ID —Ç–æ–≤–∞—Ä–∞:', currentProductId || '–Ω–µ —É–∫–∞–∑–∞–Ω');

        initializeInterface();
        setupEventListeners();
        updatePreview();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if (currentMode === 'create' || currentMode === 'edit') {
            initializeFormValidation();
            initializeImageHandlers();
            initializeAI();
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function initializeInterface() {
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = document.querySelectorAll('.animate-fade-in');
        elements.forEach((el, index) => {
            el.style.animationDelay = `${index * 0.1}s`;
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—É–ª—Ç–∏–ø–æ–≤
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        console.log('‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function setupEventListeners() {
        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'n':
                        e.preventDefault();
                        window.location.href = '?mode=create';
                        break;
                    case 's':
                        e.preventDefault();
                        if (currentMode === 'create' || currentMode === 'edit') {
                            document.getElementById('productForm').dispatchEvent(new Event('submit'));
                        }
                        break;
                    case 'f':
                        e.preventDefault();
                        const searchInput = document.getElementById('searchInput');
                        if (searchInput) searchInput.focus();
                        break;
                    case 'a':
                        e.preventDefault();
                        selectAllProducts();
                        break;
                    case '?':
                        e.preventDefault();
                        showHelp();
                        break;
                }
            }

            // Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
            if (e.key === 'Escape') {
                const modals = document.querySelectorAll('.modal.show');
                modals.forEach(modal => {
                    const bsModal = bootstrap.Modal.getInstance(modal);
                    if (bsModal) bsModal.hide();
                });
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('product-checkbox')) {
                updateBulkActions();
            }
        });

        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
        if (currentMode === 'create' || currentMode === 'edit') {
            const form = document.getElementById('productForm');
            if (form) {
                const inputs = form.querySelectorAll('input, select, textarea');
                inputs.forEach(input => {
                    input.addEventListener('input', debounce(function() {
                        saveDraft();
                        updatePreview();
                    }, 2000));
                });
            }
        }

        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    }

    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–ê–ú–ò ===

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    async function saveProduct(event) {
        if (event) {
            event.preventDefault();
        }

        showLoading('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...');

        try {
            const formData = new FormData(document.getElementById('productForm'));

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                showNotification('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!', 'success');

                // –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
                if (currentMode === 'create' && result.product_id) {
                    setTimeout(() => {
                        window.location.href = `?/admin/?page=product_editor=${result.product_id}`;
                    }, 1500);
                } else {
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    updatePreview();
                }
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    async function deleteProduct(id) {
        if (!confirm('üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?\n\n‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
            return;
        }

        showLoading('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...');

        try {
            const formData = new FormData();
            formData.append('action', 'delete_product');
            formData.append('id', id);

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                showNotification('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!', 'success');

                // –ï—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ø–∏—Å–∫—É
                if (currentProductId == id) {
                    setTimeout(() => {
                        window.location.href = '?mode=list';
                    }, 1500);
                } else {
                    // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ DOM
                    const productCard = document.querySelector(`[data-id="${id}"]`);
                    if (productCard) {
                        productCard.style.animation = 'fadeOut 0.5s ease-out';
                        setTimeout(() => productCard.remove(), 500);
                    }
                }
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
        }
    }

    // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
    function viewProduct(id) {
        window.location.href = `?mode=view&id=${id}`;
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    function editProduct(id) {
        window.location.href = `/admin/?page=product_editor`;
    }

    // === –ò–ò –§–£–ù–ö–¶–ò–ò ===

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò
    function initializeAI() {
        console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞...');

        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        addAIMessage('–ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ—Ç–ª–∏—á–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º? üöÄ');

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Enter –≤ —á–∞—Ç–µ
        const aiInput = document.getElementById('aiInput');
        if (aiInput) {
            aiInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendAIMessage();
                }
            });
        }

        const aiChatInput = document.getElementById('aiChatInput');
        if (aiChatInput) {
            aiChatInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendAIChatMessage();
                }
            });
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ò–ò
    function sendAIMessage() {
        const input = document.getElementById('aiInput');
        const message = input.value.trim();

        if (!message) return;

        addAIMessage('–í—ã: ' + message, 'user');
        input.value = '';

        // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò
        setTimeout(() => {
            processAIMessage(message);
        }, 1000);
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º —á–∞—Ç–µ –ò–ò
    function sendAIChatMessage() {
        const input = document.getElementById('aiChatInput');
        const message = input.value.trim();

        if (!message) return;

        addAIChatMessage(message, 'user');
        input.value = '';

        // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò
        setTimeout(() => {
            processAIChatMessage(message);
        }, 1500);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ò–ò
    function processAIMessage(message) {
        const lowerMessage = message.toLowerCase();
        let response = '';

        if (lowerMessage.includes('—Ü–µ–Ω–∞') || lowerMessage.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å')) {
            response = 'üí∞ –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏–∑—É—á–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Ä—ã–Ω–æ–∫?';
        } else if (lowerMessage.includes('–æ–ø–∏—Å–∞–Ω–∏–µ')) {
            response = 'üìù –û—Ç–ª–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞?';
        } else if (lowerMessage.includes('—Ñ–æ—Ç–æ') || lowerMessage.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')) {
            response = 'üì∏ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã! –†–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (–º–∏–Ω–∏–º—É–º 800x800px) –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä —Å —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–æ–≤.';
        } else if (lowerMessage.includes('seo') || lowerMessage.includes('—Å–µ–æ')) {
            response = 'üéØ –î–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ SEO –≤–∞–∂–Ω—ã: —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤), –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤) –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª SEO –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞?';
        } else {
            const responses = [
                'ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ª—é–±—ã—Ö –ø–æ–ª–µ–π —Ç–æ–≤–∞—Ä–∞.',
                'üí° –û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π —Ç–æ–≤–∞—Ä –≤–º–µ—Å—Ç–µ.',
                'üöÄ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –æ —Ü–µ–Ω–µ, –æ–ø–∏—Å–∞–Ω–∏–∏, SEO –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö.',
                '‚≠ê –•–æ—Ä–æ—à–∏–π –ø–æ–¥—Ö–æ–¥! –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 40%.'
            ];
            response = responses[Math.floor(Math.random() * responses.length)];
        }

        addAIMessage('–ò–ò: ' + response);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º —á–∞—Ç–µ
    function processAIChatMessage(message) {
        const lowerMessage = message.toLowerCase();

        // –ë–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
        let response = '';

        if (lowerMessage.includes('–ø–æ–º–æ—â—å') || lowerMessage.includes('help')) {
            response = `üÜò **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

            ‚Ä¢ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:** "—Å–æ–∑–¥–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ", "–ø—Ä–∏–¥—É–º–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"
            ‚Ä¢ **SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:** "–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π seo", "–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞"  
            ‚Ä¢ **–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—ã:** "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ü–µ–Ω—É", "–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã"
            ‚Ä¢ **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:** "—Å–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ç–æ", "–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
            ‚Ä¢ **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥:** "—Å–æ–≤–µ—Ç—ã –ø—Ä–æ–¥–∞–∂", "–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"

            –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å! üöÄ`;
        } else if (lowerMessage.includes('—Å–æ–∑–¥–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ') || lowerMessage.includes('–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è')) {
            response = `üìù **–ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...**

            ‚úÖ –°–æ–∑–¥–∞–ª —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
            ‚úÖ –î–æ–±–∞–≤–∏–ª —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂  
            ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –¥–ª—è SEO —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
            ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è

            *–û–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ñ–æ—Ä–º—É —Ç–æ–≤–∞—Ä–∞*`;

            // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
            setTimeout(() => {
                const descField = document.getElementById('fullDesc');
                if (descField && !descField.value) {
                    descField.value = '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n\n–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n‚Ä¢ –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏\n‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ\n‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞\n\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.';
                    updatePreview();
                }
            }, 1000);
        } else {
            const responses = [
                'üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –∑–∞–ø—Ä–æ—Å... –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–∏—è!',
                'üíº –ù–∞ –æ—Å–Ω–æ–≤–µ –º–æ–µ–≥–æ –æ–ø—ã—Ç–∞ –≤ e-commerce —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–µ—Ç–∞–ª–∏.',
                'üìä –ò–∑—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.',
                'üîç –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–ª—É—á–∞–π! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–µ–º —ç—Ç–æ –ø–æ—à–∞–≥–æ–≤–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.'
            ];
            response = responses[Math.floor(Math.random() * responses.length)];
        }

        addAIChatMessage(response, 'ai');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –ò–ò
    function addAIMessage(message, type = 'ai') {
        const chatContainer = document.getElementById('aiChat');
        if (!chatContainer) return;

        const messageDiv = document.createElement('div');
        messageDiv.className = `mb-2 ${type === 'user' ? 'text-end' : ''}`;

        const bubbleClass = type === 'user' ? 'bg-primary text-white' : 'bg-light';
        messageDiv.innerHTML = `
            <div class="d-inline-block ${bubbleClass} rounded px-3 py-2 max-width-75">
                <small>${message}</small>
            </div>
        `;

        chatContainer.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        const messages = chatContainer.querySelectorAll('.mb-2');
        if (messages.length > 10) {
            messages[0].remove();
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —á–∞—Ç –ò–ò
    function addAIChatMessage(message, type = 'ai') {
        const chatContainer = document.getElementById('aiChatHistory');
        if (!chatContainer) return;

        const messageDiv = document.createElement('div');
        messageDiv.className = `mb-3 ${type === 'user' ? 'text-end' : ''}`;

        const time = new Date().toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});

        if (type === 'user') {
            messageDiv.innerHTML = `
                <div class="d-inline-block bg-primary text-white rounded-3 px-3 py-2" style="max-width: 70%;">
                    <div>${escapeHtml(message)}</div>
                    <small class="opacity-75">${time}</small>
                </div>
            `;
        } else {
            messageDiv.innerHTML = `
                <div class="d-flex align-items-start">
                    <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2" style="width: 35px; height: 35px;">
                        <i class="fas fa-robot"></i>
                    </div>
                    <div class="bg-light rounded-3 px-3 py-2" style="max-width: 70%;">
                        <div class="markdown-content">${message.replace(/\n/g, '<br>').replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>').replace(/\*(.*?)\*/g, '<em>$1</em>')}</div>
                        <small class="text-muted">${time}</small>
                    </div>
                </div>
            `;
        }

        // –£–¥–∞–ª—è–µ–º placeholder –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const placeholder = chatContainer.querySelector('.text-center');
        if (placeholder) {
            placeholder.remove();
        }

        chatContainer.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;

        aiChatHistory.push({message, type, time});
    }

    // –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –ò–ò
    function aiQuickCommand(command) {
        showLoading('–ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É...');

        setTimeout(() => {
            hideLoading();

            switch(command) {
                case 'improve_all':
                    showNotification('üöÄ –ò–ò —É–ª—É—á—à–∏–ª –≤—Å–µ –ø–æ–ª—è —Ç–æ–≤–∞—Ä–∞!', 'success');
                    addAIMessage('‚úÖ –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±–Ω–æ–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ, SEO, —Ü–µ–Ω—É –∏ –¥–æ–±–∞–≤–∏–ª —Ç–µ–≥–∏.');
                    break;

                case 'seo_optimize':
                    showNotification('üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', 'success');
                    addAIMessage('üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω! –î–æ–±–∞–≤–∏–ª –º–µ—Ç–∞-—Ç–µ–≥–∏ –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ª—É—á—à–µ–π –Ω–∞—Ö–æ–¥–∏–º–æ—Å—Ç–∏.');

                    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è SEO –ø–æ–ª–µ–π
                    const metaTitle = document.getElementById('metaTitle');
                    const metaDesc = document.getElementById('metaDesc');
                    if (metaTitle && !metaTitle.value) {
                        metaTitle.value = '–ö—É–ø–∏—Ç—å ' + (document.getElementById('productName').value || '—Ç–æ–≤–∞—Ä') + ' - –ª—É—á—à–∞—è —Ü–µ–Ω–∞';
                    }
                    if (metaDesc && !metaDesc.value) {
                        metaDesc.value = '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π. –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞, –ª—É—á—à–∏–µ —Ü–µ–Ω—ã, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.';
                    }
                    break;

                case 'suggest_price':
                    showNotification('üí∞ –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤!', 'success');
                    addAIMessage('üí∞ –ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Ü–µ–Ω—É –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 450-650‚ÇΩ. –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.');
                    break;

                case 'generate_images':
                    showNotification('üì∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≥–æ—Ç–æ–≤—ã!', 'success');
                    addAIMessage('üì∏ –†–µ–∫–æ–º–µ–Ω–¥—É—é: –æ—Å–Ω–æ–≤–Ω–æ–µ —Ñ–æ—Ç–æ –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ, 2-3 —Ñ–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π, —Ñ–æ—Ç–æ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏. –ú–∏–Ω–∏–º—É–º 800x800px.');
                    break;
            }
        }, 2000);
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ò–ò
    async function aiGenerate(type) {
        showLoading('–ò–ò –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç...');

        try {
            const formData = new FormData();
            formData.append('action', 'ai_generate');
            formData.append('ai_type', type);
            formData.append('context', document.getElementById('productName').value || '');

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ
                let targetField;
                switch(type) {
                    case 'description':
                        targetField = document.getElementById('fullDesc');
                        break;
                    case 'short_description':
                        targetField = document.getElementById('shortDesc');
                        break;
                    case 'tags':
                        targetField = document.getElementById('productTags');
                        break;
                    case 'seo_title':
                        targetField = document.getElementById('metaTitle');
                        break;
                    case 'seo_description':
                        targetField = document.getElementById('metaDesc');
                        break;
                }

                if (targetField) {
                    targetField.value = result.content;
                    updatePreview();
                }

                showNotification('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!', 'success');
                addAIMessage('‚úÖ ' + result.message);
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ò–ò:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', 'error');
        }
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ò–ò
    function aiImprove(type) {
        const field = document.getElementById(type === 'description' ? 'fullDesc' : 'shortDesc');
        if (!field || !field.value) {
            showNotification('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è', 'warning');
            return;
        }

        showLoading('–ò–ò —É–ª—É—á—à–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç...');

        setTimeout(() => {
            hideLoading();
            showNotification('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —É–ª—É—á—à–µ–Ω!', 'success');
            addAIMessage('‚ú® –£–ª—É—á—à–∏–ª —Ç–µ–∫—Å—Ç! –î–æ–±–∞–≤–∏–ª —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—É.');

            // –°–∏–º—É–ª—è—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            const currentText = field.value;
            field.value = currentText + '\n\nüåü –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞';
            updatePreview();
        }, 2000);
    }

    // === –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ===

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    function initializeImageHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const mainImageArea = document.getElementById('mainImageArea');
        if (mainImageArea) {
            mainImageArea.addEventListener('dragover', handleDragOver);
            mainImageArea.addEventListener('dragleave', handleDragLeave);
            mainImageArea.addEventListener('drop', handleMainImageDrop);
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏
        updateGalleryPreview();

        console.log('üì∏ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag & drop
    function handleDragOver(e) {
        e.preventDefault();
        e.currentTarget.classList.add('dragover');
        e.currentTarget.style.borderColor = '#007bff';
    }

    function handleDragLeave(e) {
        e.currentTarget.classList.remove('dragover');
        e.currentTarget.style.borderColor = '#dee2e6';
    }

    function handleMainImageDrop(e) {
        e.preventDefault();
        e.currentTarget.classList.remove('dragover');
        e.currentTarget.style.borderColor = '#dee2e6';

        const files = Array.from(e.dataTransfer.files);
        if (files.length > 0 && files[0].type.startsWith('image/')) {
            processMainImage(files[0]);
        }
    }

    // –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function selectMainImage() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.onchange = function(e) {
            const file = e.target.files[0];
            if (file) {
                processMainImage(file);
            }
        };
        input.click();
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function processMainImage(file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const imageUrl = e.target.result;

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            const mainImageArea = document.getElementById('mainImageArea');
            mainImageArea.innerHTML = `
                <img src="${imageUrl}" class="img-fluid rounded" style="max-height: 150px;">
                <div class="mt-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeMainImage()">
                        <i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            `;

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
            document.getElementById('mainImageInput').value = imageUrl;

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            updatePreview();

            showNotification('üì∏ –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!', 'success');
            addAIMessage('üì∏ –û—Ç–ª–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! –†–µ–∫–æ–º–µ–Ω–¥—É—é –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ 2-3 —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—é –¥–ª—è –ª—É—á—à–µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.');
        };
        reader.readAsDataURL(file);
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function removeMainImage() {
        const mainImageArea = document.getElementById('mainImageArea');
        mainImageArea.innerHTML = `
            <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-2"></i>
            <p class="text-muted mb-0">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏</p>
        `;

        document.getElementById('mainImageInput').value = '';
        updatePreview();
        showNotification('üóëÔ∏è –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ', 'info');
    }

    // –í—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
    function selectGalleryImages() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.multiple = true;
        input.onchange = function(e) {
            const files = Array.from(e.target.files);
            files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    addToGallery(file);
                }
            });
        };
        input.click();
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≥–∞–ª–µ—Ä–µ—é
    function addToGallery(file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            galleryImages.push(e.target.result);
            updateGalleryPreview();
            updateGalleryInput();
            showNotification(`üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≥–∞–ª–µ—Ä–µ—é! (${galleryImages.length})`, 'success');
        };
        reader.readAsDataURL(file);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏
    function updateGalleryPreview() {
        const preview = document.getElementById('galleryPreview');
        const count = document.getElementById('galleryCount');

        if (count) count.textContent = galleryImages.length;

        if (galleryImages.length === 0) {
            preview.innerHTML = '<p class="text-muted text-center py-3">–ì–∞–ª–µ—Ä–µ—è –ø—É—Å—Ç–∞</p>';
            return;
        }

        preview.innerHTML = galleryImages.map((image, index) => `
            <div class="position-relative">
                <img src="${image}" class="img-thumbnail" style="width: 80px; height: 80px; object-fit: cover;">
                <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0" 
                        style="width: 20px; height: 20px; padding: 0; border-radius: 50%;" 
                        onclick="removeFromGallery(${index})" title="–£–¥–∞–ª–∏—Ç—å">
                    <i class="fas fa-times" style="font-size: 10px;"></i>
                </button>
            </div>
        `).join('');
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
    function removeFromGallery(index) {
        galleryImages.splice(index, 1);
        updateGalleryPreview();
        updateGalleryInput();
        showNotification('üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏', 'info');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è –≥–∞–ª–µ—Ä–µ–∏
    function updateGalleryInput() {
        document.getElementById('galleryInput').value = JSON.stringify(galleryImages);
    }

    // === –§–£–ù–ö–¶–ò–ò –ü–†–ï–î–ü–†–û–°–ú–û–¢–†–ê ===

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
    function updatePreview() {
        if (currentMode !== 'create' && currentMode !== 'edit') return;

        const name = document.getElementById('productName')?.value || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
        const price = document.getElementById('productPrice')?.value || '0';
        const description = document.getElementById('shortDesc')?.value || document.getElementById('fullDesc')?.value || '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...';
        const mainImage = document.getElementById('mainImageInput')?.value;

        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        const previewName = document.getElementById('previewName');
        const previewPrice = document.getElementById('previewPrice');
        const previewDescription = document.getElementById('previewDescription');
        const previewImage = document.getElementById('previewImage');
        const previewPlaceholder = document.getElementById('previewPlaceholder');

        if (previewName) previewName.textContent = name;
        if (previewPrice) previewPrice.textContent = formatPrice(price);
        if (previewDescription) {
            const shortDesc = description.length > 100 ? description.substring(0, 100) + '...' : description;
            previewDescription.textContent = shortDesc;
        }

        if (previewImage && previewPlaceholder) {
            if (mainImage) {
                previewImage.src = mainImage;
                previewImage.style.display = 'block';
                previewPlaceholder.classList.add('d-none');
            } else {
                previewImage.style.display = 'none';
                previewPlaceholder.classList.remove('d-none');
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —è—Ä–ª—ã–∫–∏ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ
        updatePreviewBadges();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤
        updateCharCounters();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è—Ä–ª—ã–∫–æ–≤ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ
    function updatePreviewBadges() {
        const previewBadges = document.getElementById('previewBadges');
        if (!previewBadges) return;

        const selectedBadges = [];
        document.querySelectorAll('.form-check-input[id^="badge_"]:checked').forEach(checkbox => {
            selectedBadges.push(checkbox.value);
        });

        const badgeColors = {
            new: 'success', hit: 'danger', recommend: 'warning',
            discount: 'info', premium: 'dark', eco: 'success'
        };

        const badgeTexts = {
            new: 'üÜï –ù–æ–≤–∏–Ω–∫–∞', hit: 'üî• –•–∏—Ç', recommend: '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º',
            discount: 'üí∏ –°–∫–∏–¥–∫–∞', premium: 'üíé –ü—Ä–µ–º–∏—É–º', eco: 'üåø –≠–∫–æ'
        };

        previewBadges.innerHTML = selectedBadges.map(badge => {
            const color = badgeColors[badge] || 'secondary';
            const text = badgeTexts[badge] || badge;
            return `<span class="badge bg-${color} me-1 mb-1">${text}</span>`;
        }).join('');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
    function updateCharCounters() {
        const counters = [
            {field: 'metaTitle', counter: 'titleLength', max: 60},
            {field: 'metaDesc', counter: 'descLength', max: 160}
        ];

        counters.forEach(({field, counter, max}) => {
            const fieldEl = document.getElementById(field);
            const counterEl = document.getElementById(counter);

            if (fieldEl && counterEl) {
                const length = fieldEl.value.length;
                counterEl.textContent = length;
                counterEl.className = length > max ? 'text-danger' : length > max * 0.8 ? 'text-warning' : 'text-success';
            }
        });
    }

    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –Ø–†–õ–´–ö–ê–ú–ò ===

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è—Ä–ª—ã–∫–æ–≤ —Ç–æ–≤–∞—Ä–∞
    function updateBadges() {
        const selectedBadges = [];
        document.querySelectorAll('.form-check-input[id^="badge_"]:checked').forEach(checkbox => {
            selectedBadges.push(checkbox.value);
        });

        document.getElementById('badgesInput').value = JSON.stringify(selectedBadges);
        updatePreviewBadges();
    }

    // === –§–£–ù–ö–¶–ò–ò –ò–ù–¢–ï–†–§–ï–ô–°–ê ===

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ò–ò
    function toggleAIPanel() {
        const modal = new bootstrap.Modal(document.getElementById('aiChatModal'));
        modal.show();
    }

    // –ü–æ–∫–∞–∑ –ø–æ–º–æ—â–∏
    function showHelp() {
        const modal = new bootstrap.Modal(document.getElementById('helpModal'));
        modal.show();
    }

    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function showImageModal(imageSrc) {
        document.getElementById('modalImage').src = imageSrc;
        const modal = new bootstrap.Modal(document.getElementById('imageModal'));
        modal.show();
    }

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
    function scrollToTop() {
        window.scrollTo({top: 0, behavior: 'smooth'});
    }

    // === –§–£–ù–ö–¶–ò–ò –°–ü–ò–°–ö–ê –¢–û–í–ê–†–û–í ===

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    function applyFilters() {
        const search = document.getElementById('searchInput')?.value || '';
        const category = document.getElementById('categoryFilter')?.value || '';
        const status = document.getElementById('statusFilter')?.value || '';

        const params = new URLSearchParams();
        params.append('mode', 'list');
        if (search) params.append('search', search);
        if (category) params.append('category', category);
        if (status) params.append('status', status);

        window.location.href = '?' + params.toString();
    }

    // –í—ã–±–æ—Ä –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    function selectAllProducts() {
        const checkboxes = document.querySelectorAll('.product-checkbox');
        const allChecked = Array.from(checkboxes).every(cb => cb.checked);

        checkboxes.forEach(checkbox => {
            checkbox.checked = !allChecked;
        });

        updateBulkActions();
        showNotification(allChecked ? '‚óªÔ∏è –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–Ω—è—Ç—ã —Å –≤—ã–¥–µ–ª–µ–Ω–∏—è' : '‚òëÔ∏è –í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤—ã–¥–µ–ª–µ–Ω—ã', 'info');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    function updateBulkActions() {
        const selectedCount = document.querySelectorAll('.product-checkbox:checked').length;

        if (selectedCount > 0) {
            showNotification(`–í—ã–±—Ä–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${selectedCount}`, 'info', 1000);
        }
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function toggleView() {
        // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –ø–ª–∏—Ç–∫–æ–π –∏ —Å–ø–∏—Å–∫–æ–º
        showNotification('üî≤ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    }

    // === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
    function saveDraft() {
        if (currentMode !== 'create' && currentMode !== 'edit') return;

        const formData = new FormData(document.getElementById('productForm'));
        const draftData = {};

        for (let [key, value] of formData.entries()) {
            draftData[key] = value;
        }

        localStorage.setItem('productDraft', JSON.stringify(draftData));
        console.log('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
    function loadDraft() {
        const draftData = localStorage.getItem('productDraft');
        if (!draftData) return;

        try {
            const data = JSON.parse(draftData);

            Object.keys(data).forEach(key => {
                const field = document.querySelector(`[name="${key}"]`);
                if (field) {
                    field.value = data[key];
                }
            });

            updatePreview();
            showNotification('üìã –ß–µ—Ä–Ω–æ–≤–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω', 'info');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞:', error);
        }
    }

    // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    function previewProduct() {
        // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
        showNotification('üëÅÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞...', 'info');
    }

    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    function resetForm() {
        if (confirm('üîÑ –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?\n\n–í—Å–µ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!')) {
            document.getElementById('productForm').reset();
            galleryImages = [];
            updateGalleryPreview();
            updateGalleryInput();
            removeMainImage();
            updatePreview();
            localStorage.removeItem('productDraft');
            showNotification('üîÑ –§–æ—Ä–º–∞ —Å–±—Ä–æ—à–µ–Ω–∞', 'info');
        }
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    function exportData() {
        showLoading('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');

        setTimeout(() => {
            hideLoading();
            showNotification('üìä –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ CSV –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!', 'info');
        }, 2000);
    }

    // === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(message, type = 'info', duration = 4000) {
        const alertTypes = {
            'success': 'alert-success',
            'error': 'alert-danger',
            'warning': 'alert-warning',
            'info': 'alert-info'
        };

        const icons = {
            'success': 'fa-check-circle',
            'error': 'fa-exclamation-circle',
            'warning': 'fa-exclamation-triangle',
            'info': 'fa-info-circle'
        };

        const notification = document.createElement('div');
        notification.className = `alert ${alertTypes[type]} alert-dismissible fade show notification`;
        notification.innerHTML = `
            <i class="fas ${icons[type]} me-2"></i>
            ${message}
            <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            if (notification.parentNode) {
                notification.classList.remove('show');
                setTimeout(() => notification.remove(), 300);
            }
        }, duration);
    }

    // –ü–æ–∫–∞–∑ –∑–∞–≥—Ä—É–∑–∫–∏
    function showLoading(message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        const loading = document.createElement('div');
        loading.className = 'loading-overlay';
        loading.id = 'loadingOverlay';
        loading.innerHTML = `
            <div class="text-center text-white">
                <div class="spinner-custom mb-3"></div>
                <h5>${message}</h5>
            </div>
        `;

        document.body.appendChild(loading);
    }

    // –°–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    function hideLoading() {
        const loading = document.getElementById('loadingOverlay');
        if (loading) {
            loading.remove();
        }
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
    function formatPrice(price) {
        const numPrice = parseFloat(price) || 0;
        return new Intl.NumberFormat('ru-RU', {
            style: 'currency',
            currency: 'RUB',
            minimumFractionDigits: 0
        }).format(numPrice);
    }

    // –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    // Debounce —Ñ—É–Ω–∫—Ü–∏—è
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
    function initializeFormValidation() {
        const form = document.getElementById('productForm');
        if (!form) return;

        const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');

        inputs.forEach(input => {
            input.addEventListener('blur', function() {
                validateField(this);
            });

            input.addEventListener('input', function() {
                if (this.classList.contains('is-invalid')) {
                    validateField(this);
                }
            });
        });

        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
    function validateField(field) {
        const value = field.value.trim();
        let isValid = true;
        let errorMessage = '';

        if (field.hasAttribute('required') && !value) {
            isValid = false;
            errorMessage = '–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        } else if (field.type === 'email' && value && !isValidEmail(value)) {
            isValid = false;
            errorMessage = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å';
        } else if (field.type === 'number' && value) {
            const numValue = parseFloat(value);
            if (isNaN(numValue) || numValue < 0) {
                isValid = false;
                errorMessage = '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ';
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—è
        field.classList.toggle('is-invalid', !isValid);
        field.classList.toggle('is-valid', isValid && value);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        let feedback = field.parentNode.querySelector('.invalid-feedback');
        if (!isValid && errorMessage) {
            if (!feedback) {
                feedback = document.createElement('div');
                feedback.className = 'invalid-feedback';
                field.parentNode.appendChild(feedback);
            }
            feedback.textContent = errorMessage;
        } else if (feedback) {
            feedback.remove();
        }

        return isValid;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
    function isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    // –ü–æ–∫–∞–∑ –æ–±—É—á–µ–Ω–∏—è
    function showTutorial() {
        showNotification('üìö –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!', 'info');
    }

    console.log('üöÄ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: list, create, edit, view');
    console.log('ü§ñ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    console.log('üì∏ –°–∏—Å—Ç–µ–º–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≥–æ—Ç–æ–≤–∞');
    console.log('‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    </script>

    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π -->
    <style>
    @keyframes fadeOut {
        from { opacity: 1; transform: scale(1); }
        to { opacity: 0; transform: scale(0.8); }
    }

    .max-width-75 {
        max-width: 75% !important;
    }

    .markdown-content strong {
        font-weight: 700;
        color: #2c3e50;
    }

    .markdown-content em {
        font-style: italic;
        color: #34495e;
    }

    .dragover {
        border-color: #007bff !important;
        background-color: rgba(0, 123, 255, 0.1) !important;
    }
    </style>
</body>
</html>
