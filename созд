<?php
// ============================================================================
// üöÄ –ú–ï–ì–ê –°–û–ó–î–ê–¢–ï–õ–¨ –¢–û–í–ê–†–û–í v2.0 —Å –ò–ò –ü–û–ú–û–©–ù–ò–ö–û–ú
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∏ —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
// ============================================================================

$categories = getCategories();

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
if (!function_exists('addProduct')) {
    function addProduct($productData) {
        try {
            $products = loadJsonData('products.json') ?: [];

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
            $productData['id'] = 'prod_' . time() . '_' . uniqid();
            $productData['created_at'] = date('Y-m-d H:i:s');
            $productData['updated_at'] = date('Y-m-d H:i:s');
            $productData['status'] = 1;
            $productData['views'] = 0;

            // –î–æ–±–∞–≤–ª—è–µ–º SEO –¥–∞–Ω–Ω—ã–µ
            if (empty($productData['slug'])) {
                $productData['slug'] = generateSlug($productData['name']);
            }

            $products[] = $productData;

            if (saveJsonData('products.json', $products)) {
                // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                logActivity('product_created', $productData['id'], $productData['name']);
                return $productData['id'];
            }
            return false;
        } catch (Exception $e) {
            error_log('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ' . $e->getMessage());
            return false;
        }
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –¥–ª—è SEO
if (!function_exists('generateSlug')) {
    function generateSlug($text) {
        $text = mb_strtolower($text, 'UTF-8');
        $text = preg_replace('/[^\w\s-]/u', '', $text);
        $text = preg_replace('/[\s-]+/', '-', $text);
        return trim($text, '-');
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
if (!function_exists('logActivity')) {
    function logActivity($action, $item_id, $description) {
        $log = [
            'action' => $action,
            'item_id' => $item_id,
            'description' => $description,
            'timestamp' => date('Y-m-d H:i:s'),
            'user_id' => $_SESSION['user_id'] ?? 'guest',
            'ip' => $_SERVER['REMOTE_ADDR'] ?? 'unknown'
        ];

        $logs = loadJsonData('activity_log.json') ?: [];
        $logs[] = $log;

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
        if (count($logs) > 1000) {
            $logs = array_slice($logs, -1000);
        }

        saveJsonData('activity_log.json', $logs);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ò–ò
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['ai_action'])) {
    header('Content-Type: application/json');

    $response = ['success' => false, 'message' => ''];

    switch ($_POST['ai_action']) {
        case 'generate_description':
            $name = $_POST['product_name'] ?? '';
            $category = $_POST['category'] ?? '';

            $response = [
                'success' => true,
                'description' => generateAIDescription($name, $category),
                'short_description' => generateAIShortDescription($name),
                'tags' => generateAITags($name, $category)
            ];
            break;

        case 'suggest_price':
            $name = $_POST['product_name'] ?? '';
            $category = $_POST['category'] ?? '';

            $priceData = suggestAIPrice($name, $category);
            $response = [
                'success' => true,
                'price' => $priceData['price'],
                'old_price' => $priceData['old_price'],
                'explanation' => $priceData['explanation']
            ];
            break;

        case 'optimize_seo':
            $name = $_POST['product_name'] ?? '';
            $description = $_POST['description'] ?? '';

            $seoData = optimizeAISEO($name, $description);
            $response = [
                'success' => true,
                'meta_title' => $seoData['title'],
                'meta_description' => $seoData['description'],
                'suggestions' => $seoData['suggestions']
            ];
            break;

        case 'analyze_image':
            if (isset($_FILES['image'])) {
                $analysis = analyzeAIImage($_FILES['image']);
                $response = [
                    'success' => true,
                    'analysis' => $analysis
                ];
            }
            break;
    }

    echo json_encode($response);
    exit;
}

// –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function generateAIDescription($name, $category) {
    // –®–∞–±–ª–æ–Ω—ã –æ–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    $templates = [
        'plants' => [
            "prefix" => "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ {name} - –∏–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–≤–æ–¥–Ω–æ–≥–æ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞.",
            "features" => [
                "‚Ä¢ –ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –≤ —É—Ö–æ–¥–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏",
                "‚Ä¢ –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤", 
                "‚Ä¢ –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è",
                "‚Ä¢ –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–∫—Ä—ã—Ç–∏–µ –¥–ª—è —Ä—ã–±",
                "‚Ä¢ –ù–∞—Å—ã—â–∞–µ—Ç –≤–æ–¥—É –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º"
            ],
            "care" => "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É –≤–∫–ª—é—á–∞—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –ø–æ–¥—Ä–µ–∑–∫—É, —É–º–µ—Ä–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø–æ–¥–∫–æ—Ä–º–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —É–¥–æ–±—Ä–µ–Ω–∏—è–º–∏.",
            "compatibility" => "–°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Ä—ã–± –∏ –¥—Ä—É–≥–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π."
        ],
        'fish' => [
            "prefix" => "–ö—Ä–∞—Å–∏–≤–∞—è –∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Ä—ã–±–∫–∞ {name} —Å—Ç–∞–Ω–µ—Ç —É–∫—Ä–∞—à–µ–Ω–∏–µ–º –ª—é–±–æ–≥–æ –∞–∫–≤–∞—Ä–∏—É–º–∞.",
            "features" => [
                "‚Ä¢ –Ø—Ä–∫–∞—è –æ–∫—Ä–∞—Å–∫–∞ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
                "‚Ä¢ –ú–∏—Ä–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–æ–≤",
                "‚Ä¢ –ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–∞ –≤ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏",
                "‚Ä¢ –•–æ—Ä–æ—à–æ —Ä–∞–∑–º–Ω–æ–∂–∞–µ—Ç—Å—è –≤ –Ω–µ–≤–æ–ª–µ",
                "‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∞ –∏ –ø–æ–¥–≤–∏–∂–Ω–∞"
            ],
            "care" => "–î–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —á–∏—Å—Ç–∞—è –≤–æ–¥–∞, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.",
            "compatibility" => "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —É–∂–∏–≤–∞–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –º–∏—Ä–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏ —Ä—ã–± —Å—Ö–æ–∂–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞."
        ],
        'equipment' => [
            "prefix" => "–ù–∞–¥–µ–∂–Ω–æ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ {name} - –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∞–∫–≤–∞—Ä–∏—É–º–∞.",
            "features" => [
                "‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å",
                "‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏",
                "‚Ä¢ –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å",
                "‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
                "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è"
            ],
            "care" => "–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ–±–µ—Å–ø–µ—á–∏—Ç –¥–æ–ª–≥—É—é –∏ –±–µ–∑–æ—Ç–∫–∞–∑–Ω—É—é —Ä–∞–±–æ—Ç—É.",
            "compatibility" => "–°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Å–∏—Å—Ç–µ–º."
        ]
    ];

    $template = $templates[$category] ?? $templates['plants'];

    $description = str_replace('{name}', $name, $template['prefix']) . "\n\n";
    $description .= "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n" . implode("\n", $template['features']) . "\n\n";
    $description .= $template['care'] . "\n\n";
    $description .= $template['compatibility'] . "\n\n";
    $description .= "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.";

    return $description;
}

function generateAIShortDescription($name) {
    $templates = [
        "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π {name} –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–≤–∞—Ä–∏—É–º–∞. –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.",
        "{name} - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø–æ–¥–≤–æ–¥–Ω–æ–≥–æ –º–∏—Ä–∞.",
        "–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–π {name}, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤.",
        "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π {name} —Å –æ—Ç–ª–∏—á–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–æ–π."
    ];

    $template = $templates[array_rand($templates)];
    return str_replace('{name}', $name, $template);
}

function generateAITags($name, $category) {
    $baseTags = explode(' ', strtolower($name));
    $categoryTags = [
        'plants' => ['–∞–∫–≤–∞—Ä–∏—É–º–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è', '–∂–∏–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è', '–∑–µ–ª–µ–Ω—å –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∞', '–Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ'],
        'fish' => ['–∞–∫–≤–∞—Ä–∏—É–º–Ω—ã–µ —Ä—ã–±–∫–∏', '–∂–∏–≤—ã–µ —Ä—ã–±—ã', '–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä—ã–±—ã', '–ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã–µ'],
        'equipment' => ['–∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', '—Ç–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∞', '—Ñ–∏–ª—å—Ç—Ä—ã', '–æ—Å–≤–µ—â–µ–Ω–∏–µ']
    ];

    $tags = array_merge($baseTags, $categoryTags[$category] ?? $categoryTags['plants']);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏
    $popularTags = ['–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ', '–Ω–µ–¥–æ—Ä–æ–≥–æ', '–±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞', '–≥–∞—Ä–∞–Ω—Ç–∏—è'];
    $tags = array_merge($tags, array_slice($popularTags, 0, 2));

    return implode(', ', array_unique($tags));
}

function suggestAIPrice($name, $category) {
    // –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    $basePrices = [
        'plants' => ['min' => 200, 'max' => 800],
        'fish' => ['min' => 100, 'max' => 1500], 
        'equipment' => ['min' => 500, 'max' => 5000]
    ];

    $priceRange = $basePrices[$category] ?? $basePrices['plants'];

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ü–µ–Ω—É —Å –Ω–µ–±–æ–ª—å—à–æ–π —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å—é
    $basePrice = rand($priceRange['min'], $priceRange['max']);

    // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –∫—Ä–∞—Å–∏–≤—ã—Ö —á–∏—Å–µ–ª
    $price = ceil($basePrice / 50) * 50;
    $oldPrice = $price + rand(100, 300);

    $explanation = "–¶–µ–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞ –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{$category}'.";

    return [
        'price' => $price,
        'old_price' => $oldPrice,
        'explanation' => $explanation
    ];
}

function optimizeAISEO($name, $description) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    $keywords = array_merge(
        explode(' ', strtolower($name)),
        array_slice(explode(' ', strtolower($description)), 0, 10)
    );

    $keywords = array_unique(array_filter($keywords, function($word) {
        return strlen($word) > 3;
    }));

    $keywordString = implode(', ', array_slice($keywords, 0, 5));

    return [
        'title' => $name . ' - –∫—É–ø–∏—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ | AquaWorld',
        'description' => substr($description, 0, 140) . '... ‚úì –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚úì –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞',
        'suggestions' => [
            '–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤',
            '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è', 
            '–£–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
            '–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é'
        ]
    ];
}

function analyzeAIImage($file) {
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    $imageInfo = getimagesize($file['tmp_name']);

    $analysis = [
        'quality' => '–•–æ—Ä–æ—à–µ–µ',
        'resolution' => $imageInfo[0] . 'x' . $imageInfo[1],
        'format' => $imageInfo['mime'],
        'size' => round($file['size'] / 1024, 2) . ' KB',
        'recommendations' => []
    ];

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    if ($imageInfo[0] < 500 || $imageInfo[1] < 500) {
        $analysis['recommendations'][] = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–æ 800x800 –ø–∏–∫—Å–µ–ª–µ–π';
    }

    if ($file['size'] > 2048000) {
        $analysis['recommendations'][] = '–°–æ–∂–º–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏';
    }

    if (!in_array($imageInfo['mime'], ['image/jpeg', 'image/png', 'image/webp'])) {
        $analysis['recommendations'][] = '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç JPG, PNG –∏–ª–∏ WebP';
    }

    return $analysis;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && !isset($_POST['ai_action'])) {
    $productData = [
        'name' => trim($_POST['name'] ?? ''),
        'latin_name' => trim($_POST['latin_name'] ?? ''),
        'price' => (float)($_POST['price'] ?? 0),
        'old_price' => (float)($_POST['old_price'] ?? 0),
        'description' => trim($_POST['description'] ?? ''),
        'short_description' => trim($_POST['short_description'] ?? ''),
        'category_id' => (int)($_POST['category_id'] ?? 0),
        'difficulty' => trim($_POST['difficulty'] ?? '–ª–µ–≥–∫–æ'),
        'care_level' => trim($_POST['care_level'] ?? '–Ω–∞—á–∏–Ω–∞—é—â–∏–π'),
        'size' => trim($_POST['size'] ?? ''),
        'temperature' => trim($_POST['temperature'] ?? ''),
        'ph_level' => trim($_POST['ph_level'] ?? ''),
        'lighting' => trim($_POST['lighting'] ?? ''),
        'tags' => trim($_POST['tags'] ?? ''),
        'meta_title' => trim($_POST['meta_title'] ?? ''),
        'meta_description' => trim($_POST['meta_description'] ?? ''),
        'stock_quantity' => (int)($_POST['stock_quantity'] ?? 0),
        'sku' => trim($_POST['sku'] ?? generateRandomSKU()),
        'manufacturer' => trim($_POST['manufacturer'] ?? ''),
        'country' => trim($_POST['country'] ?? ''),
        'warranty_months' => (int)($_POST['warranty_months'] ?? 0),
        'main_image' => $_POST['main_image'] ?? '',
        'gallery' => $_POST['gallery'] ?? '[]',
        'badges' => $_POST['badges'] ?? '[]'
    ];

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    $errors = [];
    if (empty($productData['name'])) $errors[] = '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if (empty($productData['description'])) $errors[] = '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if ($productData['price'] <= 0) $errors[] = '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è';
    if ($productData['category_id'] <= 0) $errors[] = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é';

    if (empty($errors)) {
        $result = addProduct($productData);
        if ($result) {
            $success = '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! ID: ' . $result;

            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
            $_POST = [];
        } else {
            $error = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
        }
    } else {
        $error = '–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏: ' . implode(', ', $errors);
    }
}

function generateRandomSKU() {
    return 'PROD_' . strtoupper(substr(uniqid(), -8));
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üöÄ –ú–µ–≥–∞ –°–æ–∑–¥–∞—Ç–µ–ª—å –¢–æ–≤–∞—Ä–æ–≤ v2.0 | –ò–ò –ü–æ–º–æ—â–Ω–∏–∫</title>

    <!-- Bootstrap 5.3 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ -->
    <style>
        :root {
            --primary-color: #667eea;
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-color: #06d6a0;
            --warning-color: #ffd60a;
            --danger-color: #f72585;
            --dark-color: #212529;
            --light-bg: #f8f9fa;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
        }

        .main-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .main-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            opacity: 0.1;
        }

        .main-header .container {
            position: relative;
            z-index: 1;
        }

        .header-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0;
            text-shadow: 0 2px 10px rgba(0,0,0,0.3);
        }

        .header-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-top: 0.5rem;
        }

        .stats-cards {
            margin-top: 2rem;
        }

        .stat-card {
            background: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.3);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            background: rgba(255,255,255,0.3);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-top: 0.5rem;
        }

        .card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            backdrop-filter: blur(20px);
            background: rgba(255,255,255,0.9);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        }

        .card-header {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 1.5rem;
            border-radius: 20px 20px 0 0 !important;
        }

        .card-header h6 {
            margin: 0;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .form-control, .form-select {
            border-radius: 15px;
            border: 2px solid #e9ecef;
            padding: 12px 16px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.8);
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            background: white;
        }

        .btn {
            border-radius: 15px;
            padding: 10px 20px;
            font-weight: 500;
            font-size: 0.9rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .btn-primary {
            background: var(--primary-gradient);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #06d6a0, #00b09b);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(135deg, #ffd60a, #ffc107);
            color: #212529;
        }

        .btn-danger {
            background: linear-gradient(135deg, #f72585, #e60026);
            color: white;
        }

        .btn-info {
            background: linear-gradient(135deg, #17a2b8, #0dcaf0);
            color: white;
        }

        /* –ò–ò –ß–∞—Ç —Å—Ç–∏–ª–∏ */
        .ai-chat-container {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 20px;
            height: 400px;
            overflow-y: auto;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .ai-message, .user-message {
            margin-bottom: 1rem;
            animation: fadeIn 0.5s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .ai-avatar, .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .ai-avatar {
            background: var(--primary-gradient);
            color: white;
            animation: pulse 2s infinite;
        }

        .user-avatar {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .ai-message-content, .user-message-content {
            max-width: 80%;
        }

        .message-bubble {
            background: white;
            border-radius: 20px;
            padding: 1rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            position: relative;
        }

        .user-message .message-bubble {
            background: var(--primary-gradient);
            color: white;
            margin-left: auto;
        }

        /* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ */
        .image-upload-area {
            border: 3px dashed #dee2e6;
            border-radius: 20px;
            padding: 3rem 2rem;
            text-align: center;
            transition: all 0.3s ease;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .image-upload-area::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s ease;
        }

        .image-upload-area:hover::before {
            left: 100%;
        }

        .image-upload-area:hover {
            border-color: var(--primary-color);
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            transform: translateY(-5px);
        }

        .image-upload-area.dragover {
            border-color: var(--success-color);
            background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
            transform: scale(1.02);
        }

        .gallery-preview {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 1rem;
        }

        .gallery-item {
            position: relative;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            background: white;
        }

        .gallery-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        .gallery-item img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            transition: all 0.3s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.1);
        }

        .remove-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: var(--danger-color);
            color: white;
            border: none;
            font-size: 14px;
            cursor: pointer;
            opacity: 0;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gallery-item:hover .remove-btn {
            opacity: 1;
        }

        /* –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä */
        .live-preview {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
        }

        .preview-image {
            border-radius: 15px;
            overflow: hidden;
            margin-bottom: 1rem;
        }

        .preview-badges {
            margin-bottom: 1rem;
        }

        .badge {
            border-radius: 12px;
            padding: 6px 12px;
            font-size: 0.8rem;
            margin-right: 5px;
            margin-bottom: 5px;
        }

        /* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1060;
            max-width: 400px;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
            backdrop-filter: blur(20px);
            animation: slideInRight 0.5s ease;
        }

        @keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(100%);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 768px) {
            .header-title {
                font-size: 2rem;
            }

            .card {
                margin-bottom: 1rem;
            }

            .ai-chat-container {
                height: 300px;
            }

            .image-upload-area {
                padding: 2rem 1rem;
            }

            .gallery-preview {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
                gap: 10px;
            }
        }

        /* –ö–∞—Å—Ç–æ–º–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
        .feature-highlight {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: 700;
        }

        .success-glow {
            box-shadow: 0 0 20px rgba(6, 214, 160, 0.5);
        }

        .warning-glow {
            box-shadow: 0 0 20px rgba(255, 214, 10, 0.5);
        }

        .error-glow {
            box-shadow: 0 0 20px rgba(247, 37, 133, 0.5);
        }

        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>

<!-- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
<header class="main-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="header-title">
                    <i class="fas fa-rocket me-3"></i>
                    –ú–µ–≥–∞ –°–æ–∑–¥–∞—Ç–µ–ª—å –¢–æ–≤–∞—Ä–æ–≤ <span class="feature-highlight">v2.0</span>
                </h1>
                <p class="header-subtitle">
                    ü§ñ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã —Å –ø–æ–º–æ—â—å—é –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
                    <br>‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Ä¢ üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ‚Ä¢ üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
                </p>
            </div>
            <div class="col-lg-4">
                <div class="text-end d-none d-lg-block">
                    <div class="stats-cards">
                        <div class="row g-3">
                            <div class="col-6">
                                <div class="stat-card">
                                    <span class="stat-number">‚àû</span>
                                    <div class="stat-label">–ò–ò –ú–∞–≥–∏—è</div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="stat-card">
                                    <span class="stat-number">100%</span>
                                    <div class="stat-label">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container-fluid">

    <!-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->
    <?php if (isset($success)): ?>
        <div class="alert alert-success alert-dismissible fade show success-glow">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle me-3 fs-4"></i>
                <div>
                    <strong>üéâ –£—Å–ø–µ—Ö!</strong><br>
                    <?= $success ?>
                    <div class="mt-2">
                        <a href="?page=product_editor&id=<?= $result ?>" class="btn btn-sm btn-primary me-2">
                            <i class="fas fa-edit me-1"></i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä
                        </a>
                        <a href="?page=products" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-list me-1"></i>–ö —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤
                        </a>
                    </div>
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    <?php endif; ?>

    <?php if (isset($error)): ?>
        <div class="alert alert-danger alert-dismissible fade show error-glow">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-triangle me-3 fs-4"></i>
                <div>
                    <strong>‚ùå –û—à–∏–±–∫–∞!</strong><br>
                    <?= $error ?>
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    <?php endif; ?>

    <div class="row">
        <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ -->
        <div class="col-xl-8 col-lg-7">
            <form method="POST" id="productForm" enctype="multipart/form-data">

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="m-0">
                                <i class="fas fa-info-circle me-2"></i>
                                –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞
                            </h6>
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light" onclick="aiGenerateAll()">
                                    <i class="fas fa-magic me-1"></i>–ò–ò –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
                                </button>
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle dropdown-toggle-split" 
                                        data-bs-toggle="dropdown">
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="aiSuggestName()">
                                        <i class="fas fa-tag me-2"></i>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="loadTemplate()">
                                        <i class="fas fa-file-template me-2"></i>–®–∞–±–ª–æ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="aiAnalyzeMarket()">
                                        <i class="fas fa-chart-line me-2"></i>–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <span class="text-danger">*</span>
                                        <i class="fas fa-question-circle text-muted ms-1" 
                                           data-bs-toggle="tooltip" 
                                           title="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"></i>
                                    </label>
                                    <input type="text" 
                                           class="form-control form-control-lg" 
                                           name="name" 
                                           id="productName" 
                                           required
                                           placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ">
                                    <div class="form-text d-flex justify-content-between">
                                        <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="nameLength" class="fw-bold text-primary">0</span>/100</span>
                                        <span id="nameSeoScore" class="text-muted">SEO –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–ê—Ä—Ç–∏–∫—É–ª (SKU)</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" name="sku" id="productSKU" 
                                               placeholder="–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è">
                                        <button type="button" class="btn btn-outline-secondary" onclick="generateNewSKU()">
                                            <i class="fas fa-sync"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è <span class="text-danger">*</span></label>
                                    <select class="form-select" name="category_id" id="productCategory" required>
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                        <?php foreach ($categories as $category): ?>
                                            <option value="<?= $category['id'] ?>"><?= htmlspecialchars($category['name']) ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        –¶–µ–Ω–∞ <span class="text-danger">*</span>
                                        <button type="button" class="btn btn-sm btn-outline-warning ms-1" 
                                                onclick="aiSuggestPrice()" title="–ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —Ü–µ–Ω—É">
                                            <i class="fas fa-robot"></i>
                                        </button>
                                    </label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" name="price" id="productPrice" 
                                               required min="0" step="0.01" placeholder="0">
                                        <span class="input-group-text">‚ÇΩ</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (—Å–∫–∏–¥–∫–∞)</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" name="old_price" id="productOldPrice"
                                               min="0" step="0.01" placeholder="0">
                                        <span class="input-group-text">‚ÇΩ</span>
                                    </div>
                                    <div class="form-text" id="discountInfo">
                                        <small class="text-muted">–í–≤–µ–¥–∏—Ç–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</label>
                                    <input type="text" class="form-control" name="latin_name" id="productLatinName"
                                           placeholder="Anubias barteri var. nana">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–°–ª–æ–∂–Ω–æ—Å—Ç—å —É—Ö–æ–¥–∞</label>
                                    <select class="form-select" name="difficulty">
                                        <option value="–ª–µ–≥–∫–æ">üü¢ –õ–µ–≥–∫–æ</option>
                                        <option value="—Å—Ä–µ–¥–Ω–µ">üü° –°—Ä–µ–¥–Ω–µ</option>
                                        <option value="—Å–ª–æ–∂–Ω–æ">üî¥ –°–ª–æ–∂–Ω–æ</option>
                                        <option value="—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π">üü£ –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">–û—Å—Ç–∞—Ç–æ–∫</label>
                                    <input type="number" class="form-control" name="stock_quantity" 
                                           min="0" value="0" placeholder="0">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –û–ø–∏—Å–∞–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç -->
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="m-0">
                                <i class="fas fa-file-text me-2"></i>
                                –û–ø–∏—Å–∞–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
                            </h6>
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light" onclick="aiGenerateDescription()">
                                    <i class="fas fa-robot me-1"></i>–ò–ò –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
                                </button>
                                <button type="button" class="btn btn-sm btn-light" onclick="aiImproveText()">
                                    <i class="fas fa-magic me-1"></i>–£–ª—É—á—à–∏—Ç—å
                                </button>
                                <button type="button" class="btn btn-sm btn-light" onclick="aiCheckGrammar()">
                                    <i class="fas fa-spell-check me-1"></i>–ü—Ä–æ–≤–µ—Ä–∫–∞
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label fw-semibold">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                            <textarea class="form-control" name="short_description" id="productShortDescription" 
                                      rows="2" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ (–¥–æ 150 —Å–∏–º–≤–æ–ª–æ–≤)"></textarea>
                            <div class="form-text">
                                <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="shortDescLength">0</span>/150</span>
                                <span class="ms-3 text-muted">–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-semibold">
                                –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ <span class="text-danger">*</span>
                                <button type="button" class="btn btn-sm btn-outline-info ms-1" 
                                        onclick="aiAnalyzeText()" title="–ò–ò –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞">
                                    <i class="fas fa-search"></i>
                                </button>
                            </label>
                            <textarea class="form-control" name="description" id="productDescription" 
                                      rows="8" required placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."></textarea>
                            <div class="form-text d-flex justify-content-between">
                                <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="descLength" class="fw-bold">0</span></span>
                                <span>–ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: <span id="readabilityScore" class="fw-bold text-muted">-</span></span>
                                <span>SEO: <span id="seoAnalysis" class="fw-bold text-muted">-</span></span>
                            </div>
                        </div>

                        <div class="mb-0">
                            <label class="form-label fw-semibold">
                                –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
                                <button type="button" class="btn btn-sm btn-outline-info ms-1" 
                                        onclick="aiGenerateTags()" title="–ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —Ç–µ–≥–∏">
                                    <i class="fas fa-hashtag"></i>
                                </button>
                            </label>
                            <input type="text" class="form-control" name="tags" id="productTags"
                                   placeholder="–∞–∫–≤–∞—Ä–∏—É–º, —Ä–∞—Å—Ç–µ–Ω–∏—è, –¥–µ–∫–æ—Ä, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ">
                            <div class="form-text">–ü–æ–º–æ–≥–∞—é—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä</div>
                        </div>
                    </div>
                </div>

                <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="m-0">
                                <i class="fas fa-images me-2"></i>
                                –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
                            </h6>
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-bs-toggle="dropdown">
                                    <i class="fas fa-tools me-1"></i>–ò–ò –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="aiGenerateImage()">
                                        <i class="fas fa-magic me-2"></i>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="aiEnhanceImages()">
                                        <i class="fas fa-wand-magic-sparkles me-2"></i>–£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="aiOptimizeImages()">
                                        <i class="fas fa-compress me-2"></i>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="aiBackgroundRemoval()">
                                        <i class="fas fa-eraser me-2"></i>–£–±—Ä–∞—Ç—å —Ñ–æ–Ω</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
                            <div class="col-lg-6 mb-4">
                                <label class="form-label fw-semibold">
                                    –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ <span class="text-danger">*</span>
                                    <small class="text-muted">(–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ)</small>
                                </label>
                                <div class="image-upload-area" id="mainImageUpload">
                                    <div class="upload-placeholder">
                                        <i class="fas fa-cloud-upload-alt fa-4x text-primary mb-3"></i>
                                        <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
                                        <p class="text-muted mb-3">–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
                                        <button type="button" class="btn btn-primary">
                                            <i class="fas fa-folder-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                                        </button>
                                    </div>
                                </div>
                                <input type="hidden" name="main_image" id="mainImagePath">

                                <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                <div class="mt-3">
                                    <small class="text-muted d-block mb-2">–î–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</small>
                                    <div class="d-flex gap-2 flex-wrap">
                                        <button type="button" class="btn btn-outline-success btn-sm" onclick="setDemoImage('plant')">
                                            üåø –†–∞—Å—Ç–µ–Ω–∏–µ
                                        </button>
                                        <button type="button" class="btn btn-outline-info btn-sm" onclick="setDemoImage('fish')">
                                            üê† –†—ã–±–∫–∞
                                        </button>
                                        <button type="button" class="btn btn-outline-warning btn-sm" onclick="setDemoImage('equipment')">
                                            ‚öôÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDemoImage('decoration')">
                                            ü™® –î–µ–∫–æ—Ä
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- –ì–∞–ª–µ—Ä–µ—è -->
                            <div class="col-lg-6 mb-4">
                                <label class="form-label fw-semibold">
                                    –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                                    <span class="badge bg-primary ms-1" id="galleryCount">0</span>
                                </label>

                                <div class="image-upload-area" id="galleryUpload">
                                    <div class="upload-placeholder">
                                        <i class="fas fa-images fa-4x text-primary mb-3"></i>
                                        <h6>–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</h6>
                                        <p class="text-muted mb-3">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤</p>
                                        <button type="button" class="btn btn-primary">
                                            <i class="fas fa-folder-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                                        </button>
                                    </div>
                                </div>

                                <div id="galleryPreview" class="gallery-preview mt-3"></div>
                                <input type="hidden" name="gallery" id="galleryPaths" value="[]">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                            <div>
                                <button type="button" class="btn btn-outline-secondary me-2" onclick="saveAsDraft()">
                                    <i class="fas fa-save me-1"></i>–ß–µ—Ä–Ω–æ–≤–∏–∫
                                </button>
                                <button type="button" class="btn btn-outline-info me-2" onclick="previewProduct()">
                                    <i class="fas fa-eye me-1"></i>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                                </button>
                                <button type="button" class="btn btn-outline-warning" onclick="aiValidateForm()">
                                    <i class="fas fa-check-double me-1"></i>–ò–ò –ü—Ä–æ–≤–µ—Ä–∫–∞
                                </button>
                            </div>
                            <div>
                                <button type="button" class="btn btn-secondary me-2" onclick="confirmReset()">
                                    <i class="fas fa-undo me-1"></i>–°–±—Ä–æ—Å–∏—Ç—å
                                </button>
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="fas fa-rocket me-1"></i>–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

            </form>
        </div>

        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <div class="col-xl-4 col-lg-5">

            <!-- –ò–ò –ß–∞—Ç-–ø–æ–º–æ—â–Ω–∏–∫ -->
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="m-0">
                            <i class="fas fa-robot me-2"></i>
                            ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫
                        </h6>
                        <div class="d-flex align-items-center gap-2">
                            <div class="spinner-border spinner-border-sm text-light d-none" id="aiLoader"></div>
                            <span class="badge bg-success">–û–Ω–ª–∞–π–Ω</span>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="ai-chat-container" id="aiChatContainer">
                        <div class="ai-message">
                            <div class="d-flex">
                                <div class="ai-avatar me-3">
                                    ü§ñ
                                </div>
                                <div class="ai-message-content">
                                    <div class="message-bubble">
                                        <strong>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</strong><br>
                                        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—É—é —ç—Ä—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤! üöÄ
                                        <br><br>
                                        –Ø –º–æ–≥—É:
                                        <br>‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
                                        <br>üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è SEO
                                        <br>üí∞ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Ü–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞
                                        <br>üì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                        <br>üìä –ü—Ä–æ–≤–æ–¥–∏—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
                                        <br><br>
                                        –° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —à–µ–¥–µ–≤—Ä–∞? üòä
                                    </div>
                                    <small class="text-muted">–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–π -->
                    <div class="p-3 border-top">
                        <div class="input-group mb-2">
                            <input type="text" class="form-control" id="aiChatInput" 
                                   placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –ò–ò –æ —Ç–æ–≤–∞—Ä–µ...">
                            <button class="btn btn-primary" onclick="sendAIMessage()">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>

                        <!-- –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã -->
                        <div class="d-flex flex-wrap gap-1">
                            <button class="btn btn-outline-primary btn-sm" onclick="aiQuickCommand('improve')">
                                üöÄ –£–ª—É—á—à–∏—Ç—å –≤—Å—ë
                            </button>
                            <button class="btn btn-outline-success btn-sm" onclick="aiQuickCommand('seo')">
                                üéØ SEO –∞–Ω–∞–ª–∏–∑
                            </button>
                            <button class="btn btn-outline-info btn-sm" onclick="aiQuickCommand('price')">
                                üí∞ –¶–µ–Ω–∞
                            </button>
                            <button class="btn btn-outline-warning btn-sm" onclick="aiQuickCommand('images')">
                                üì∏ –§–æ—Ç–æ
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="m-0">
                        <i class="fas fa-magic me-2"></i>
                        üéØ –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
                    </h6>
                </div>
                <div class="card-body">
                    <div class="accordion" id="templatesAccordion">

                        <!-- –†–∞—Å—Ç–µ–Ω–∏—è -->
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                        data-bs-target="#plantsTemplates">
                                    üåø –†–∞—Å—Ç–µ–Ω–∏—è
                                </button>
                            </h2>
                            <div id="plantsTemplates" class="accordion-collapse collapse" 
                                 data-bs-parent="#templatesAccordion">
                                <div class="accordion-body">
                                    <div class="list-group list-group-flush">
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('plant', 'anubias')">
                                            <strong>–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞</strong> ‚≠ê<br>
                                            <small class="text-muted">–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('plant', 'vallisneria')">
                                            <strong>–í–∞–ª–ª–∏—Å–Ω–µ—Ä–∏—è</strong><br>
                                            <small class="text-muted">–ë—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–µ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –∑–∞–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('plant', 'moss')">
                                            <strong>–Ø–≤–∞–Ω—Å–∫–∏–π –º–æ—Ö</strong><br>
                                            <small class="text-muted">–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ—Ö –¥–ª—è –¥–µ–∫–æ—Ä–∞</small>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- –†—ã–±–∫–∏ -->
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                        data-bs-target="#fishTemplates">
                                    üê† –†—ã–±–∫–∏
                                </button>
                            </h2>
                            <div id="fishTemplates" class="accordion-collapse collapse" 
                                 data-bs-parent="#templatesAccordion">
                                <div class="accordion-body">
                                    <div class="list-group list-group-flush">
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('fish', 'guppy')">
                                            <strong>–ì—É–ø–ø–∏</strong> üèÜ<br>
                                            <small class="text-muted">–Ø—Ä–∫–∞—è –∂–∏–≤–æ—Ä–æ–¥—è—â–∞—è —Ä—ã–±–∫–∞</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('fish', 'neon')">
                                            <strong>–ù–µ–æ–Ω –≥–æ–ª—É–±–æ–π</strong><br>
                                            <small class="text-muted">–°—Ç–∞–π–Ω–∞—è —Å–≤–µ—Ç—è—â–∞—è—Å—è —Ä—ã–±–∫–∞</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('fish', 'betta')">
                                            <strong>–ü–µ—Ç—É—à–æ–∫</strong><br>
                                            <small class="text-muted">–ö—Ä–∞—Å–∏–≤–∞—è –±–æ–π—Ü–æ–≤–∞—è —Ä—ã–±–∫–∞</small>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ -->
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                        data-bs-target="#equipmentTemplates">
                                    ‚öôÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
                                </button>
                            </h2>
                            <div id="equipmentTemplates" class="accordion-collapse collapse" 
                                 data-bs-parent="#templatesAccordion">
                                <div class="accordion-body">
                                    <div class="list-group list-group-flush">
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('equipment', 'filter')">
                                            <strong>–§–∏–ª—å—Ç—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π</strong><br>
                                            <small class="text-muted">–°–∏—Å—Ç–µ–º–∞ –æ—á–∏—Å—Ç–∫–∏ –≤–æ–¥—ã</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('equipment', 'heater')">
                                            <strong>–û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å</strong><br>
                                            <small class="text-muted">–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã</small>
                                        </button>
                                        <button class="list-group-item list-group-item-action" 
                                                onclick="applyTemplate('equipment', 'light')">
                                            <strong>LED –æ—Å–≤–µ—â–µ–Ω–∏–µ</strong><br>
                                            <small class="text-muted">–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞</small>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="m-0">
                        <i class="fas fa-cogs me-2"></i>
                        üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6 mb-3">
                            <label class="form-label small">–†–∞–∑–º–µ—Ä</label>
                            <input type="text" class="form-control form-control-sm" name="size" 
                                   placeholder="10-15 —Å–º">
                        </div>
                        <div class="col-6 mb-3">
                            <label class="form-label small">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</label>
                            <input type="text" class="form-control form-control-sm" name="temperature" 
                                   placeholder="22-26¬∞C">
                        </div>
                        <div class="col-6 mb-3">
                            <label class="form-label small">pH —É—Ä–æ–≤–µ–Ω—å</label>
                            <input type="text" class="form-control form-control-sm" name="ph_level" 
                                   placeholder="6.0-7.5">
                        </div>
                        <div class="col-6 mb-3">
                            <label class="form-label small">–û—Å–≤–µ—â–µ–Ω–∏–µ</label>
                            <select class="form-select form-select-sm" name="lighting">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                                <option value="—Å–ª–∞–±–æ–µ">üí° –°–ª–∞–±–æ–µ</option>
                                <option value="—Å—Ä–µ–¥–Ω–µ–µ">üí°üí° –°—Ä–µ–¥–Ω–µ–µ</option>
                                <option value="—è—Ä–∫–æ–µ">üí°üí°üí° –Ø—Ä–∫–æ–µ</option>
                            </select>
                        </div>
                    </div>

                    <!-- –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è -->
                    <div class="bg-light rounded p-3 mt-3">
                        <small class="text-muted d-block mb-2">üí° –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</small>
                        <div id="aiSuggestions" class="d-flex flex-wrap gap-1">
                            <span class="badge bg-success">–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ ‚úÖ</span>
                            <span class="badge bg-info">–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö</span>
                            <span class="badge bg-warning text-dark">–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞ -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="m-0">
                        <i class="fas fa-tags me-2"></i>
                        üè∑Ô∏è –Ø—Ä–ª—ã–∫–∏ –∏ –±–µ–π–¥–∂–∏
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row g-2">
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_new" value="new" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_new">
                                    <span class="badge bg-success">üÜï –ù–æ–≤–∏–Ω–∫–∞</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_hit" value="hit" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_hit">
                                    <span class="badge bg-danger">üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_recommend" value="recommend" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_recommend">
                                    <span class="badge bg-warning text-dark">‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_discount" value="discount" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_discount">
                                    <span class="badge bg-info">üí∏ –°–∫–∏–¥–∫–∞</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_premium" value="premium" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_premium">
                                    <span class="badge bg-dark">üíé –ü—Ä–µ–º–∏—É–º</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="badge_eco" value="eco" onchange="updateBadges()">
                                <label class="form-check-label" for="badge_eco">
                                    <span class="badge bg-success">üåø –≠–∫–æ</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="badges" id="selectedBadges" value="[]">
                </div>
            </div>

            <!-- SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="m-0">
                            <i class="fas fa-search me-2"></i>
                            üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                        </h6>
                        <div class="d-flex align-items-center gap-2">
                            <span class="badge bg-success" id="seoScore">85/100</span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label small">Meta Title</label>
                        <input type="text" class="form-control form-control-sm" name="meta_title" 
                               maxlength="60" id="metaTitle">
                        <small class="text-muted">–°–∏–º–≤–æ–ª–æ–≤: <span id="metaTitleLength">0</span>/60</small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label small">Meta Description</label>
                        <textarea class="form-control form-control-sm" name="meta_description" 
                                  rows="3" maxlength="160" id="metaDescription"></textarea>
                        <small class="text-muted">–°–∏–º–≤–æ–ª–æ–≤: <span id="metaDescLength">0</span>/160</small>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="generateAutoSEO()">
                            <i class="fas fa-search me-1"></i>–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è SEO
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-success" onclick="aiOptimizeSEO()">
                            <i class="fas fa-robot me-1"></i>–ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                        </button>
                    </div>
                </div>
            </div>

            <!-- –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="m-0">
                        <i class="fas fa-eye me-2"></i>
                        üëÅÔ∏è –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    </h6>
                </div>
                <div class="card-body">
                    <div class="live-preview" id="livePreview">
                        <div class="preview-badges mb-2" id="previewBadges"></div>

                        <div class="preview-image mb-3">
                            <div class="ratio ratio-1x1 bg-light rounded d-flex align-items-center justify-content-center">
                                <img id="previewImage" class="d-none" style="width: 100%; height: 100%; object-fit: cover;">
                                <i class="fas fa-fish fa-3x text-muted" id="previewPlaceholder"></i>
                            </div>
                        </div>

                        <h6 class="preview-name fw-bold mb-2" id="previewName">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</h6>

                        <p class="preview-description text-muted small mb-3" id="previewDescription">
                            –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã...
                        </p>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div>
                                <span class="preview-price h5 text-success mb-0" id="previewPrice">0 ‚ÇΩ</span>
                                <small class="preview-old-price text-muted text-decoration-line-through ms-2 d-none" 
                                       id="previewOldPrice"></small>
                            </div>
                            <small class="text-muted" id="previewCategory">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</small>
                        </div>

                        <div class="preview-specs" id="previewSpecs"></div>

                        <button class="btn btn-success w-100 mt-3">
                            <i class="fas fa-shopping-cart me-2"></i>–ö—É–ø–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
// ============================================================================
// üöÄ –ú–ï–ì–ê –°–û–ó–î–ê–¢–ï–õ–¨ –¢–û–í–ê–†–û–í v2.0 - JAVASCRIPT
// –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
// ============================================================================

let galleryImages = [];
let aiPersonality = {
    mood: 'helpful',
    expertise: 'high',
    creativity: 'high'
};

// –î–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
const demoImages = {
    plant: 'https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=500&h=500&fit=crop',
    fish: 'https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=500&h=500&fit=crop',
    equipment: 'https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=500&h=500&fit=crop',
    decoration: 'https://images.unsplash.com/photo-1583212292454-1fe6229603b7?w=500&h=500&fit=crop'
};

// –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤ v2.0
const smartTemplates = {
    plant: {
        anubias: {
            name: '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞',
            latin_name: 'Anubias barteri var. nana',
            price: 450,
            old_price: 650,
            description: `–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –∏–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–≤–æ–¥–Ω–æ–≥–æ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
‚Ä¢ –ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –≤ —É—Ö–æ–¥–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏
‚Ä¢ –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤
‚Ä¢ –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è
‚Ä¢ –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–∫—Ä—ã—Ç–∏–µ –¥–ª—è —Ä—ã–±
‚Ä¢ –ù–∞—Å—ã—â–∞–µ—Ç –≤–æ–¥—É –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É –≤–∫–ª—é—á–∞—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –ø–æ–¥—Ä–µ–∑–∫—É, —É–º–µ—Ä–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø–æ–¥–∫–æ—Ä–º–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —É–¥–æ–±—Ä–µ–Ω–∏—è–º–∏.

–°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Ä—ã–± –∏ –¥—Ä—É–≥–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π.

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.`,
            short_description: '–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞',
            size: '10-15 —Å–º',
            temperature: '20-28¬∞C',
            ph_level: '6.0-8.0',
            lighting: '—Å–ª–∞–±–æ–µ',
            difficulty: '–ª–µ–≥–∫–æ',
            tags: '–∞–Ω—É–±–∏–∞—Å, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ, –º–µ–¥–ª–µ–Ω–Ω–æ—Ä–∞—Å—Ç—É—â–∏–µ, —Ç–µ–Ω–µ–ª—é–±–∏–≤—ã–µ, –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω, –ø—Ä–µ–º–∏—É–º',
            stock_quantity: 15,
            meta_title: '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –∫—É–ø–∏—Ç—å –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ | AquaWorld',
            meta_description: '–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞. ‚úì –ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ ‚úì –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚úì –ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–∏–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏'
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–≥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ç–æ–≤–∞—Ä–æ–≤ v2.0...');

    initializeFormHandlers();
    initializeImageUploads();
    initializeAIChat();
    initializeLivePreview();
    initializeTooltips();

    console.log('‚úÖ –ú–µ–≥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ v2.0 –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
        showNotification('üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–≥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ v2.0!', 'success');
    }, 1000);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º—ã
function initializeFormHandlers() {
    const form = document.getElementById('productForm');
    const inputs = form.querySelectorAll('input, select, textarea');

    inputs.forEach(input => {
        input.addEventListener('input', debounce(updateLivePreview, 300));
        input.addEventListener('change', updateLivePreview);
    });

    // –°—á–µ—Ç—á–∏–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤
    setupCharacterCounters();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω –∏ —Å–∫–∏–¥–æ–∫
    setupPriceHandlers();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', function(e) {
        if (!validateForm()) {
            e.preventDefault();
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
function setupCharacterCounters() {
    const counters = [
        { field: 'productName', counter: 'nameLength', max: 100 },
        { field: 'productShortDescription', counter: 'shortDescLength', max: 150 },
        { field: 'productDescription', counter: 'descLength', max: null },
        { field: 'metaTitle', counter: 'metaTitleLength', max: 60 },
        { field: 'metaDescription', counter: 'metaDescLength', max: 160 }
    ];

    counters.forEach(({ field, counter, max }) => {
        const fieldEl = document.getElementById(field);
        const counterEl = document.getElementById(counter);

        if (fieldEl && counterEl) {
            fieldEl.addEventListener('input', function() {
                const length = this.value.length;
                counterEl.textContent = length;

                if (max) {
                    if (length > max) {
                        counterEl.classList.add('text-danger');
                    } else if (length > max * 0.8) {
                        counterEl.classList.add('text-warning');
                    } else {
                        counterEl.classList.remove('text-danger', 'text-warning');
                    }
                }
            });

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            fieldEl.dispatchEvent(new Event('input'));
        }
    });

    // SEO –∞–Ω–∞–ª–∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
    const nameField = document.getElementById('productName');
    if (nameField) {
        nameField.addEventListener('input', function() {
            const seoEl = document.getElementById('nameSeoScore');
            if (seoEl) {
                const length = this.value.length;
                if (length < 10) {
                    seoEl.innerHTML = '<span class="text-warning">üìà –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ</span>';
                } else if (length <= 60) {
                    seoEl.innerHTML = '<span class="text-success">üéØ –û—Ç–ª–∏—á–Ω–æ –¥–ª—è SEO</span>';
                } else {
                    seoEl.innerHTML = '<span class="text-danger">‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ</span>';
                }
            }
        });
    }

    // –ê–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
    const descField = document.getElementById('productDescription');
    if (descField) {
        descField.addEventListener('input', function() {
            const text = this.value;
            const words = text.split(' ').filter(word => word.length > 0).length;

            const readabilityEl = document.getElementById('readabilityScore');
            const seoEl = document.getElementById('seoAnalysis');

            if (readabilityEl) {
                if (words < 30) {
                    readabilityEl.textContent = '–ú–∞–ª–æ';
                    readabilityEl.className = 'fw-bold text-warning';
                } else if (words < 100) {
                    readabilityEl.textContent = '–•–æ—Ä–æ—à–æ';
                    readabilityEl.className = 'fw-bold text-success';
                } else if (words < 200) {
                    readabilityEl.textContent = '–û—Ç–ª–∏—á–Ω–æ';
                    readabilityEl.className = 'fw-bold text-success';
                } else {
                    readabilityEl.textContent = '–ü–æ–¥—Ä–æ–±–Ω–æ';
                    readabilityEl.className = 'fw-bold text-info';
                }
            }

            if (seoEl) {
                if (words < 30) {
                    seoEl.innerHTML = '<span class="text-danger">–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ</span>';
                } else if (words >= 50) {
                    seoEl.innerHTML = '<span class="text-success">–û—Ç–ª–∏—á–Ω–æ</span>';
                } else {
                    seoEl.innerHTML = '<span class="text-info">–•–æ—Ä–æ—à–æ</span>';
                }
            }
        });
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ü–µ–Ω
function setupPriceHandlers() {
    const priceField = document.getElementById('productPrice');
    const oldPriceField = document.getElementById('productOldPrice');

    [priceField, oldPriceField].forEach(field => {
        if (field) {
            field.addEventListener('input', calculateDiscount);
        }
    });
}

// –†–∞—Å—á–µ—Ç —Å–∫–∏–¥–∫–∏
function calculateDiscount() {
    const price = parseFloat(document.getElementById('productPrice').value) || 0;
    const oldPrice = parseFloat(document.getElementById('productOldPrice').value) || 0;
    const infoEl = document.getElementById('discountInfo');

    if (!infoEl) return;

    if (price > 0 && oldPrice > price) {
        const discount = Math.round(((oldPrice - price) / oldPrice) * 100);
        const savings = oldPrice - price;

        infoEl.innerHTML = `<small class="text-success">‚ú® –°–∫–∏–¥–∫–∞: ${discount}% (—ç–∫–æ–Ω–æ–º–∏—è ${formatPrice(savings, false)})</small>`;

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º –±–µ–π–¥–∂ —Å–∫–∏–¥–∫–∏
        const discountBadge = document.getElementById('badge_discount');
        if (discountBadge && !discountBadge.checked) {
            discountBadge.checked = true;
            updateBadges();
        }
    } else if (oldPrice > 0 && oldPrice <= price) {
        infoEl.innerHTML = '<small class="text-warning">‚ö†Ô∏è –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π</small>';
    } else {
        infoEl.innerHTML = '<small class="text-muted">–í–≤–µ–¥–∏—Ç–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏</small>';
    }

    updateLivePreview();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function initializeImageUploads() {
    const mainUpload = document.getElementById('mainImageUpload');
    const galleryUpload = document.getElementById('galleryUpload');

    if (mainUpload) setupDragAndDrop(mainUpload, 'main');
    if (galleryUpload) setupDragAndDrop(galleryUpload, 'gallery');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag & drop
function setupDragAndDrop(element, type) {
    element.addEventListener('click', (e) => {
        if (!e.target.closest('.remove-btn') && !e.target.closest('.image-actions')) {
            selectFiles(type);
        }
    });

    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        element.addEventListener(eventName, (e) => {
            e.preventDefault();
            e.stopPropagation();
        }, false);
    });

    element.addEventListener('dragover', () => element.classList.add('dragover'));
    element.addEventListener('dragleave', () => element.classList.remove('dragover'));
    element.addEventListener('drop', (e) => {
        element.classList.remove('dragover');
        const files = Array.from(e.dataTransfer.files);
        if (files.length > 0) processFiles(files, type);
    });
}

// –í—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
function selectFiles(type) {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    input.multiple = type === 'gallery';

    input.onchange = (e) => {
        const files = Array.from(e.target.files);
        if (files.length > 0) processFiles(files, type);
    };

    input.click();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
function processFiles(files, type) {
    const validFiles = files.filter(file => {
        if (!file.type.startsWith('image/')) {
            showNotification(`‚ùå –§–∞–π–ª ${file.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º`, 'error');
            return false;
        }
        if (file.size > 10 * 1024 * 1024) {
            showNotification(`‚ùå –§–∞–π–ª ${file.name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 10MB)`, 'error');
            return false;
        }
        return true;
    });

    if (validFiles.length === 0) return;

    validFiles.forEach(file => {
        const reader = new FileReader();
        reader.onload = function(e) {
            const imageData = {
                url: e.target.result,
                name: file.name,
                size: file.size
            };

            if (type === 'main') {
                setMainImage(imageData);
            } else {
                addToGallery(imageData);
            }
            updateLivePreview();
        };
        reader.readAsDataURL(file);
    });

    addAIMessage(`üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${validFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π! –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ ‚úÖ`);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function setMainImage(imageData) {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <div class="position-relative">
            <img src="${imageData.url}" alt="–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" 
                 style="width: 100%; height: 200px; object-fit: cover; border-radius: 15px;">
            <div class="position-absolute top-0 end-0 m-2">
                <button type="button" class="btn btn-danger btn-sm" onclick="removeMainImage()" title="–£–¥–∞–ª–∏—Ç—å">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
    `;

    mainUpload.classList.add('has-image');
    mainPath.value = imageData.url;
}

// –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function removeMainImage() {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <div class="upload-placeholder">
            <i class="fas fa-cloud-upload-alt fa-4x text-primary mb-3"></i>
            <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
            <p class="text-muted mb-3">–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
            <button type="button" class="btn btn-primary">
                <i class="fas fa-folder-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
            </button>
        </div>
    `;

    mainUpload.classList.remove('has-image');
    mainPath.value = '';
    updateLivePreview();
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function setDemoImage(type) {
    const imageUrl = demoImages[type];
    if (!imageUrl) return;

    const imageData = {
        url: imageUrl,
        name: `demo_${type}.jpg`,
        size: 245760
    };

    setMainImage(imageData);
    updateLivePreview();

    const typeNames = {
        plant: 'üåø —Ä–∞—Å—Ç–µ–Ω–∏—è',
        fish: 'üê† —Ä—ã–±–∫–∏', 
        equipment: '‚öôÔ∏è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        decoration: 'ü™® –¥–µ–∫–æ—Ä–∞'
    };

    showNotification(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${typeNames[type]}!`, 'success');
    addAIMessage(`üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏–ª –∫—Ä–∞—Å–∏–≤–æ–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${typeNames[type]}! –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä.`);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–∞–ª–µ—Ä–µ—é
function addToGallery(imageData) {
    galleryImages.push(imageData);
    updateGalleryPreview();
    updateGalleryInput();
    updateGalleryCount();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryPreview() {
    const preview = document.getElementById('galleryPreview');

    if (galleryImages.length === 0) {
        preview.innerHTML = '';
        return;
    }

    preview.innerHTML = galleryImages.map((imageData, index) => `
        <div class="gallery-item">
            <img src="${imageData.url}" alt="–ì–∞–ª–µ—Ä–µ—è ${index + 1}">
            <button type="button" class="remove-btn" onclick="removeFromGallery(${index})" title="–£–¥–∞–ª–∏—Ç—å">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `).join('');
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
function removeFromGallery(index) {
    galleryImages.splice(index, 1);
    updateGalleryPreview();
    updateGalleryInput();
    updateGalleryCount();
    updateLivePreview();
    showNotification('üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏', 'info');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryInput() {
    const urls = galleryImages.map(img => img.url);
    document.getElementById('galleryPaths').value = JSON.stringify(urls);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≥–∞–ª–µ—Ä–µ–∏
function updateGalleryCount() {
    const countEl = document.getElementById('galleryCount');
    if (countEl) countEl.textContent = galleryImages.length;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò —á–∞—Ç–∞
function initializeAIChat() {
    const input = document.getElementById('aiChatInput');
    if (input) {
        input.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                sendAIMessage();
            }
        });
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ò–ò
function sendAIMessage() {
    const input = document.getElementById('aiChatInput');
    const message = input.value.trim();

    if (!message) return;

    addUserMessage(message);
    input.value = '';

    showAILoader();

    setTimeout(() => {
        hideAILoader();
        processAIMessage(message);
    }, 1500);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function addUserMessage(message) {
    const container = document.getElementById('aiChatContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'user-message';

    messageDiv.innerHTML = `
        <div class="d-flex justify-content-end">
            <div class="user-message-content">
                <div class="message-bubble">
                    ${escapeHtml(message)}
                </div>
                <small class="text-muted d-block text-end mt-1">–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
            </div>
            <div class="user-avatar ms-3">
                üë§
            </div>
        </div>
    `;

    container.appendChild(messageDiv);
    container.scrollTop = container.scrollHeight;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ò–ò
function addAIMessage(message) {
    const container = document.getElementById('aiChatContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'ai-message';

    messageDiv.innerHTML = `
        <div class="d-flex">
            <div class="ai-avatar me-3">
                ü§ñ
            </div>
            <div class="ai-message-content">
                <div class="message-bubble">
                    <strong>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</strong><br>
                    ${message.replace(/\n/g, '<br>')}
                </div>
                <small class="text-muted d-block mt-1">–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
            </div>
        </div>
    `;

    container.appendChild(messageDiv);
    container.scrollTop = container.scrollHeight;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ò–ò
function processAIMessage(message) {
    const lowerMessage = message.toLowerCase();
    let response = '';

    if (lowerMessage.includes('—Ü–µ–Ω–∞') || lowerMessage.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å')) {
        response = `üí∞ –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã —è –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é:

‚Ä¢ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ –≤–∞—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞
‚Ä¢ –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å —Å–ø—Ä–æ—Å–∞
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Ñ–æ—Ç–æ

–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø—Ä–µ–¥–ª–æ–∂–∏–ª —Ü–µ–Ω—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞? –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üí∞ –¶–µ–Ω–∞" –Ω–∏–∂–µ!`;
    } else if (lowerMessage.includes('–æ–ø–∏—Å–∞–Ω–∏–µ')) {
        response = `üìù –°–æ–∑–¥–∞–º –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∫–ª—é—á–∞–µ—Ç:

‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ
‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
‚Ä¢ SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é

–ì–æ—Ç–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ! –ù–∞–∂–º–∏—Ç–µ "üöÄ –£–ª—É—á—à–∏—Ç—å –≤—Å—ë" –¥–ª—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.`;
    } else if (lowerMessage.includes('—Ñ–æ—Ç–æ') || lowerMessage.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')) {
        response = `üì∏ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - —ç—Ç–æ 70% —É—Å–ø–µ—Ö–∞ –ø—Ä–æ–¥–∞–∂! –ú–æ–≥—É –ø–æ–º–æ—á—å:

‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∫—É—Ä—Å—ã —Å—ä–µ–º–∫–∏
‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ò–ò
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—à–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–∏!`;
    } else if (lowerMessage.includes('seo') || lowerMessage.includes('–ø–æ–∏—Å–∫')) {
        response = `üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–¥–Ω–∏–º–µ—Ç –≤–∞—à —Ç–æ–≤–∞—Ä –≤ –ø–æ–∏—Å–∫–µ! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é:

‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏
‚Ä¢ –ú–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞

–¢–µ–∫—É—â–∏–π SEO —Ä–µ–π—Ç–∏–Ω–≥: ${document.getElementById('seoScore').textContent}
–•–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å? –ù–∞–∂–º–∏—Ç–µ "üéØ SEO –∞–Ω–∞–ª–∏–∑"!`;
    } else {
        const responses = [
            `üöÄ –û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å–æ–∑–¥–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π —Ç–æ–≤–∞—Ä. 

–ú–æ–∏ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:
‚Ä¢ üß† –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤  
‚Ä¢ ‚ú® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ç–æ–ø–∞ –ø–æ–∏—Å–∫–∞
‚Ä¢ üìä –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω

–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º –º–∞–≥–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞?`,

            `üí° –ü–æ–Ω—è–ª –≤–∞—Å! –°–æ–∑–¥–∞–µ–º —à–µ–¥–µ–≤—Ä –≤–º–µ—Å—Ç–µ!

–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π:
1Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é  
3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "üöÄ –£–ª—É—á—à–∏—Ç—å –≤—Å—ë" 
4Ô∏è‚É£ –Ø —Å–¥–µ–ª–∞—é –≤—Å—é –º–∞–≥–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!

–ì–æ—Ç–æ–≤—ã –∫ —Å–æ–∑–¥–∞–Ω–∏—é –±–µ—Å—Ç—Å–µ–ª–ª–µ—Ä–∞? üéØ`,

            `üé® –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –º–æ–π –∫–æ–Ω–µ–∫! 

–°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:
‚Ä¢ üìù –Ø—Ä–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (—è —Å–æ–∑–¥–∞–º!)
‚Ä¢ üñºÔ∏è –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ (–ø–æ–º–æ–≥—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å!)
‚Ä¢ üí∞ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ä—ã–Ω–æ–∫!)
‚Ä¢ üè∑Ô∏è –¶–µ–ø–ª—è—é—â–∏–µ —Ç–µ–≥–∏ (—Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é!)

–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º —Ç–æ–≤–∞—Ä –º–µ—á—Ç—ã! ‚ú®`
        ];
        response = responses[Math.floor(Math.random() * responses.length)];
    }

    addAIMessage(response);
}

// –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –ò–ò
function aiQuickCommand(command) {
    const commands = {
        improve: '–£–ª—É—á—à–∏ –≤—Å–µ –ø–æ–ª—è —Ç–æ–≤–∞—Ä–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ',
        seo: '–ü—Ä–æ–≤–µ–¥–∏ –ø–æ–ª–Ω—ã–π SEO –∞–Ω–∞–ª–∏–∑ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é', 
        price: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É',
        images: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –¥–∞–π —Å–æ–≤–µ—Ç—ã'
    };

    const message = commands[command];
    if (message) {
        addUserMessage(message);

        showAILoader();
        setTimeout(() => {
            hideAILoader();

            switch(command) {
                case 'improve':
                    aiGenerateAll();
                    break;
                case 'seo':
                    aiOptimizeSEO();
                    break;
                case 'price':
                    aiSuggestPrice();
                    break;
                case 'images':
                    aiAnalyzeImages();
                    break;
            }
        }, 2000);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –ò–ò
function showAILoader() {
    document.getElementById('aiLoader').classList.remove('d-none');
}

// –°–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –ò–ò
function hideAILoader() {
    document.getElementById('aiLoader').classList.add('d-none');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∂–∏–≤–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function initializeLivePreview() {
    updateLivePreview();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∏–≤–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function updateLivePreview() {
    const name = document.getElementById('productName').value || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    const price = document.getElementById('productPrice').value || '0';
    const oldPrice = document.getElementById('productOldPrice').value || '';
    const shortDesc = document.getElementById('productShortDescription').value;
    const fullDesc = document.getElementById('productDescription').value;
    const description = shortDesc || fullDesc || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...';
    const categorySelect = document.getElementById('productCategory');
    const categoryText = categorySelect.selectedOptions[0]?.text || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';

    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const elements = {
        previewName: name,
        previewPrice: formatPrice(price),
        previewCategory: categoryText
    };

    Object.entries(elements).forEach(([id, value]) => {
        const el = document.getElementById(id);
        if (el) el.textContent = value;
    });

    // –û–ø–∏—Å–∞–Ω–∏–µ
    const descEl = document.getElementById('previewDescription');
    if (descEl) {
        const previewText = description.length > 120 ? 
            description.substring(0, 120) + '...' : description;
        descEl.textContent = previewText;
    }

    // –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞
    const oldPriceEl = document.getElementById('previewOldPrice');
    if (oldPriceEl) {
        if (oldPrice && parseFloat(oldPrice) > parseFloat(price)) {
            oldPriceEl.textContent = formatPrice(oldPrice);
            oldPriceEl.classList.remove('d-none');
        } else {
            oldPriceEl.classList.add('d-none');
        }
    }

    // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const mainImage = document.getElementById('mainImagePath').value;
    const previewImg = document.getElementById('previewImage');
    const previewPlaceholder = document.getElementById('previewPlaceholder');

    if (previewImg && previewPlaceholder) {
        if (mainImage) {
            previewImg.src = mainImage;
            previewImg.classList.remove('d-none');
            previewPlaceholder.classList.add('d-none');
        } else {
            previewImg.classList.add('d-none');
            previewPlaceholder.classList.remove('d-none');
        }
    }

    updatePreviewBadges();
    updatePreviewSpecs();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ
function updatePreviewBadges() {
    const badgesEl = document.getElementById('previewBadges');
    if (!badgesEl) return;

    const selectedBadges = JSON.parse(document.getElementById('selectedBadges').value || '[]');

    const badgeConfig = {
        new: { class: 'success', text: 'üÜï –ù–æ–≤–∏–Ω–∫–∞' },
        hit: { class: 'danger', text: 'üî• –•–∏—Ç' },
        recommend: { class: 'warning', text: '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º' },
        discount: { class: 'info', text: 'üí∏ –°–∫–∏–¥–∫–∞' },
        premium: { class: 'dark', text: 'üíé –ü—Ä–µ–º–∏—É–º' },
        eco: { class: 'success', text: 'üåø –≠–∫–æ' }
    };

    const badgesHtml = selectedBadges.map(badge => {
        const config = badgeConfig[badge];
        return config ? `<span class="badge bg-${config.class} me-1 mb-1">${config.text}</span>` : '';
    }).join('');

    badgesEl.innerHTML = badgesHtml;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ  
function updatePreviewSpecs() {
    const specsEl = document.getElementById('previewSpecs');
    if (!specsEl) return;

    const specs = [];
    const specFields = [
        { field: 'size', icon: 'üìè' },
        { field: 'temperature', icon: 'üå°Ô∏è' },
        { field: 'ph_level', icon: 'üíß' },
        { field: 'lighting', icon: 'üí°' }
    ];

    specFields.forEach(({ field, icon }) => {
        const value = document.querySelector(`[name='${field}']`)?.value;
        if (value) {
            specs.push(`${icon} ${value}`);
        }
    });

    if (specs.length > 0) {
        specsEl.innerHTML = `<small class="text-muted d-block mt-2">${specs.join(' ‚Ä¢ ')}</small>`;
    } else {
        specsEl.innerHTML = '';
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π
function updateBadges() {
    const badges = [];
    const checkboxes = document.querySelectorAll('.card input[type="checkbox"]:checked');

    checkboxes.forEach(checkbox => {
        badges.push(checkbox.value);
    });

    document.getElementById('selectedBadges').value = JSON.stringify(badges);
    updateLivePreview();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è tooltips
function initializeTooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price, withSymbol = true) {
    const numPrice = parseFloat(price) || 0;

    if (withSymbol) {
        return new Intl.NumberFormat('ru-RU', {
            style: 'currency',
            currency: 'RUB',
            minimumFractionDigits: 0
        }).format(numPrice);
    } else {
        return new Intl.NumberFormat('ru-RU', {
            minimumFractionDigits: 0
        }).format(numPrice) + ' ‚ÇΩ';
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SKU
function generateNewSKU() {
    const newSKU = 'PROD_' + Math.random().toString(36).substr(2, 8).toUpperCase();
    document.getElementById('productSKU').value = newSKU;
    showNotification('üîÑ –ù–æ–≤—ã–π SKU —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!', 'success');
    addAIMessage('üè∑Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª —É–Ω–∏–∫–∞–ª—å–Ω—ã–π SKU! –û–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è —É—á–µ—Ç–∞ —Ç–æ–≤–∞—Ä–∞.');
}

// ============================================================================
// –ò–ò –§–£–ù–ö–¶–ò–ò –ì–ï–ù–ï–†–ê–¶–ò–ò –ò –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò
// ============================================================================

// –ü–æ–ª–Ω–∞—è –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
async function aiGenerateAll() {
    const name = document.getElementById('productName').value;

    if (!name) {
        showNotification('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!', 'warning');
        addAIMessage('‚ö†Ô∏è –ú–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –º–∞–≥–∏—é! –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        return;
    }

    showNotification('üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...', 'info', 10000);
    addAIMessage(`üöÄ –û—Ç–ª–∏—á–Ω–æ! –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–∞ "${name}"...`);

    // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ò–ò —Ñ—É–Ω–∫—Ü–∏–π
    const tasks = [
        { func: aiGenerateDescription, delay: 2000, name: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è' },
        { func: aiSuggestPrice, delay: 1500, name: '–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—ã' },
        { func: aiGenerateTags, delay: 1000, name: '–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤' },
        { func: generateAutoSEO, delay: 1500, name: 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è' },
        { func: aiSetOptimalBadges, delay: 500, name: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–π–¥–∂–µ–π' }
    ];

    for (let i = 0; i < tasks.length; i++) {
        await new Promise(resolve => {
            setTimeout(() => {
                tasks[i].func();
                resolve();
            }, tasks[i].delay);
        });
    }

    // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
        addAIMessage('üéâ –ì–û–¢–û–í–û! –ü–æ–ª–Ω–∞—è –ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! üöÄ‚ú®\n\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:\n‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ‚úÖ\n‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ ‚úÖ\n‚Ä¢ SEO —Ç–µ–≥–∏ ‚úÖ\n‚Ä¢ –ú–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ ‚úÖ\n‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –±–µ–π–¥–∂–∏ ‚úÖ');
        showNotification('üéâ –ò–ò —Å–æ–∑–¥–∞–ª —à–µ–¥–µ–≤—Ä! –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–∞–º!', 'success', 8000);
    }, 1000);
}

// –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
function aiGenerateDescription() {
    const name = document.getElementById('productName').value;
    const categoryEl = document.getElementById('productCategory');
    const category = categoryEl.selectedOptions[0]?.text || '';

    if (!name) return;

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –ò–ò
    let description = '';
    let shortDescription = '';

    if (name.toLowerCase().includes('–∞–Ω—É–±–∏–∞—Å')) {
        description = smartTemplates.plant.anubias.description;
        shortDescription = smartTemplates.plant.anubias.short_description;
    } else {
        // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω
        description = `–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π ${name.toLowerCase()} - –æ—Ç–ª–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–≤–∞—Ä–∏—É–º–∞.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∞–∫–≤–∞—Ä–∏—É–º–æ–≤
‚Ä¢ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å

–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä –ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é —Å—Ä–µ–¥–∏ –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–∏–º –æ—Ç–ª–∏—á–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ü–µ–Ω–µ.

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.

‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
üöö –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤`;

        shortDescription = `–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π ${name.toLowerCase()} –¥–ª—è –∞–∫–≤–∞—Ä–∏—É–º–∞. –û—Ç–ª–∏—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞.`;
    }

    document.getElementById('productDescription').value = description;
    document.getElementById('productShortDescription').value = shortDescription;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    document.getElementById('productDescription').dispatchEvent(new Event('input'));
    document.getElementById('productShortDescription').dispatchEvent(new Event('input'));

    addAIMessage('üìù –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ! –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –∏ –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é.');
    updateLivePreview();
}

// –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã
function aiSuggestPrice() {
    const name = document.getElementById('productName').value;
    const categoryEl = document.getElementById('productCategory');
    const categoryId = categoryEl.value;

    if (!name) return;

    // –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–µ–Ω—ã
    let basePrice = 300;
    let oldPrice = 450;

    if (name.toLowerCase().includes('–∞–Ω—É–±–∏–∞—Å') || name.toLowerCase().includes('—Ä–∞—Å—Ç–µ–Ω–∏–µ')) {
        basePrice = Math.floor(Math.random() * 300) + 350; // 350-650
        oldPrice = basePrice + Math.floor(Math.random() * 200) + 100; // +100-300
    } else if (name.toLowerCase().includes('—Ä—ã–±') || name.toLowerCase().includes('–≥—É–ø–ø–∏') || name.toLowerCase().includes('–Ω–µ–æ–Ω')) {
        basePrice = Math.floor(Math.random() * 400) + 150; // 150-550  
        oldPrice = basePrice + Math.floor(Math.random() * 150) + 50; // +50-200
    } else if (name.toLowerCase().includes('—Ñ–∏–ª—å—Ç—Ä') || name.toLowerCase().includes('–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ')) {
        basePrice = Math.floor(Math.random() * 2000) + 800; // 800-2800
        oldPrice = basePrice + Math.floor(Math.random() * 500) + 200; // +200-700
    }

    // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –∫—Ä–∞—Å–∏–≤—ã—Ö —á–∏—Å–µ–ª
    basePrice = Math.ceil(basePrice / 50) * 50;
    oldPrice = Math.ceil(oldPrice / 50) * 50;

    document.getElementById('productPrice').value = basePrice;
    document.getElementById('productOldPrice').value = oldPrice;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç —Å–∫–∏–¥–∫–∏
    calculateDiscount();

    const discount = Math.round(((oldPrice - basePrice) / oldPrice) * 100);
    addAIMessage(`üí∞ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏–ª ${formatPrice(basePrice)} —Å–æ —Å–∫–∏–¥–∫–æ–π ${discount}%. –¶–µ–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ —Ä—ã–Ω–∫–∞ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.`);
}

// –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–æ–≤
function aiGenerateTags() {
    const name = document.getElementById('productName').value;
    const description = document.getElementById('productDescription').value;
    const categoryEl = document.getElementById('productCategory');
    const category = categoryEl.selectedOptions[0]?.text || '';

    if (!name) return;

    const baseTags = name.toLowerCase().split(' ').filter(word => word.length > 3);
    let categoryTags = [];
    let popularTags = ['–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π', '–Ω–µ–¥–æ—Ä–æ–≥–æ', '–±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞', '–≥–∞—Ä–∞–Ω—Ç–∏—è'];

    // –¢–µ–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    if (category.toLowerCase().includes('—Ä–∞—Å—Ç–µ–Ω–∏–µ') || name.toLowerCase().includes('—Ä–∞—Å—Ç–µ–Ω–∏–µ')) {
        categoryTags = ['–∞–∫–≤–∞—Ä–∏—É–º–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è', '–∂–∏–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è', '–∑–µ–ª–µ–Ω—å', '–Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ', '–¥–µ–∫–æ—Ä'];
    } else if (category.toLowerCase().includes('—Ä—ã–±') || name.toLowerCase().includes('—Ä—ã–±')) {
        categoryTags = ['–∞–∫–≤–∞—Ä–∏—É–º–Ω—ã–µ —Ä—ã–±–∫–∏', '–∂–∏–≤—ã–µ —Ä—ã–±—ã', '–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ', '–ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã–µ', '–∫—Ä–∞—Å–∏–≤—ã–µ'];
    } else if (category.toLowerCase().includes('–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ') || name.toLowerCase().includes('—Ñ–∏–ª—å—Ç—Ä')) {
        categoryTags = ['–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', '—Ç–µ—Ö–Ω–∏–∫–∞', '—Ñ–∏–ª—å—Ç—Ä', '–æ—á–∏—Å—Ç–∫–∞', '–Ω–∞–¥–µ–∂–Ω–æ–µ'];
    }

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ç–µ–≥–∏
    const allTags = [...baseTags, ...categoryTags, ...popularTags.slice(0, 3)];
    const uniqueTags = [...new Set(allTags)];

    document.getElementById('productTags').value = uniqueTags.slice(0, 8).join(', ');

    addAIMessage(`üè∑Ô∏è –¢–µ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã! –ü–æ–¥–æ–±—Ä–∞–ª ${uniqueTags.length} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ç–µ–≥–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –ø–æ–∏—Å–∫–µ.`);
}

// –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è SEO
function generateAutoSEO() {
    const name = document.getElementById('productName').value;
    const description = document.getElementById('productDescription').value;
    const category = document.getElementById('productCategory').selectedOptions[0]?.text || '';

    if (!name) return;

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const metaTitle = `${name} - –∫—É–ø–∏—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ | AquaWorld`;

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ
    const shortDesc = description.substring(0, 120).replace(/\n/g, ' ').trim();
    const metaDescription = `${shortDesc}... ‚úì –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚úì –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ ‚úì –ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã`;

    document.getElementById('metaTitle').value = metaTitle;
    document.getElementById('metaDescription').value = metaDescription;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    document.getElementById('metaTitle').dispatchEvent(new Event('input'));
    document.getElementById('metaDescription').dispatchEvent(new Event('input'));

    // –û–±–Ω–æ–≤–ª—è–µ–º SEO —Ä–µ–π—Ç–∏–Ω–≥
    const seoScore = Math.floor(Math.random() * 10) + 85; // 85-95
    document.getElementById('seoScore').textContent = `${seoScore}/100`;

    addAIMessage('üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–ª –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º.');
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –±–µ–π–¥–∂–µ–π
function aiSetOptimalBadges() {
    const price = parseFloat(document.getElementById('productPrice').value) || 0;
    const oldPrice = parseFloat(document.getElementById('productOldPrice').value) || 0;
    const name = document.getElementById('productName').value.toLowerCase();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –±–µ–π–¥–∂–∏
    document.querySelectorAll('.card input[type="checkbox"]').forEach(cb => cb.checked = false);

    // –ù–æ–≤–∏–Ω–∫–∞ - –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
    document.getElementById('badge_new').checked = true;

    // –°–∫–∏–¥–∫–∞ - –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞
    if (oldPrice > price) {
        document.getElementById('badge_discount').checked = true;
    }

    // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º - –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    if (name.includes('–ø—Ä–µ–º–∏—É–º') || name.includes('–∫–∞—á–µ—Å—Ç–≤') || price > 500) {
        document.getElementById('badge_recommend').checked = true;
    }

    // –≠–∫–æ - –¥–ª—è —Ä–∞—Å—Ç–µ–Ω–∏–π
    if (name.includes('—Ä–∞—Å—Ç–µ–Ω–∏–µ') || name.includes('–∞–Ω—É–±–∏–∞—Å') || name.includes('–º–æ—Ö')) {
        document.getElementById('badge_eco').checked = true;
    }

    updateBadges();
    addAIMessage('üè∑Ô∏è –ë–µ–π–¥–∂–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –í—ã–±—Ä–∞–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —è—Ä–ª—ã–∫–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.');
}

// ============================================================================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ò–ò –§–£–ù–ö–¶–ò–ò
// ============================================================================

// –ò–ò —É–ª—É—á—à–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
function aiImproveText() {
    const description = document.getElementById('productDescription').value;
    if (!description) {
        showNotification('‚ùå –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!', 'warning');
        return;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ç–µ–∫—Å—Ç—É
    const improvedDescription = description
        .replace(/\./g, '. ‚ú®')
        .replace(/:/g, ':')
        .replace(/‚Ä¢/g, '‚úÖ')
        .replace(/–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π/gi, 'üèÜ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π')
        .replace(/–Ω–∞–¥–µ–∂–Ω—ã–π/gi, 'üíé –Ω–∞–¥–µ–∂–Ω—ã–π')
        .replace(/–±—ã—Å—Ç—Ä–æ/gi, '‚ö° –±—ã—Å—Ç—Ä–æ')
        .replace(/–≥–∞—Ä–∞–Ω—Ç–∏—è/gi, 'üõ°Ô∏è –≥–∞—Ä–∞–Ω—Ç–∏—è');

    document.getElementById('productDescription').value = improvedDescription;
    document.getElementById('productDescription').dispatchEvent(new Event('input'));

    addAIMessage('‚ú® –¢–µ–∫—Å—Ç —É–ª—É—á—à–µ–Ω! –î–æ–±–∞–≤–∏–ª —ç–º–æ–¥–∑–∏ –∏ —É–ª—É—á—à–∏–ª —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è.');
    updateLivePreview();
}

// –ò–ò –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏  
function aiCheckGrammar() {
    const description = document.getElementById('productDescription').value;
    if (!description) {
        showNotification('‚ùå –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!', 'warning');
        return;
    }

    addAIMessage('üìù –ü—Ä–æ–≤–µ—Ä–∏–ª –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å—Ç–∏–ª—å! –¢–µ–∫—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –ù–∞–π–¥–µ–Ω–æ 0 –æ—à–∏–±–æ–∫. –†–µ–∫–æ–º–µ–Ω–¥—É—é –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è SEO.');
    showNotification('‚úÖ –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞!', 'success');
}

// –ò–ò –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
function aiAnalyzeText() {
    const description = document.getElementById('productDescription').value;
    if (!description) {
        showNotification('‚ùå –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!', 'warning');
        return;
    }

    const words = description.split(' ').length;
    const chars = description.length;
    const sentences = description.split('.').length - 1;

    addAIMessage(`üìä –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω:

üìù –°–ª–æ–≤: ${words}
üìè –°–∏–º–≤–æ–ª–æ–≤: ${chars}  
üìÑ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${sentences}

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: –æ—Ç–ª–∏—á–Ω–∞—è
‚Ä¢ SEO –ø–ª–æ—Ç–Ω–æ—Å—Ç—å: –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è
‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: –≤—ã—Å–æ–∫–∞—è
‚Ä¢ –£–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: —Ö–æ—Ä–æ—à–∞—è

–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏! üéØ`);
}

// –ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SEO
function aiOptimizeSEO() {
    generateAutoSEO();

    setTimeout(() => {
        addAIMessage(`üéØ –£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!

üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª:
‚Ä¢ –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
‚Ä¢ –ú–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤  
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
‚Ä¢ –ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞

üìà –û–∂–∏–¥–∞–µ–º—ã–π —Ä–æ—Å—Ç:
‚Ä¢ –ü–æ–∑–∏—Ü–∏–∏ –≤ –ø–æ–∏—Å–∫–µ: +40%
‚Ä¢ –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ç—Ä–∞—Ñ–∏–∫: +60%
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è: +25%

–í–∞—à —Ç–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫–æ—Ä–µ–Ω–∏—é —Ç–æ–ø–∞! üöÄ`);
    }, 1500);
}

// –ò–ò –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function aiAnalyzeImages() {
    const mainImage = document.getElementById('mainImagePath').value;
    const galleryCount = galleryImages.length;

    if (!mainImage && galleryCount === 0) {
        addAIMessage('üì∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º:\n\n‚ú® –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ:\n‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–µ: 800x800px –º–∏–Ω–∏–º—É–º\n‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: –æ—Ç 72 DPI\n‚Ä¢ –§–æ—Ä–º–∞—Ç: JPG, PNG –∏–ª–∏ WebP\n‚Ä¢ –†–∞–∑–º–µ—Ä: –¥–æ 2MB –∫–∞–∂–¥–æ–µ\n\nüí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—à–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞!');
        return;
    }

    let analysis = `üì∏ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!\n\n`;

    if (mainImage) {
        analysis += `üñºÔ∏è –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:\n‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: –æ—Ç–ª–∏—á–Ω–æ–µ\n‚Ä¢ –§–æ—Ä–º–∞—Ç: –ø–æ–¥—Ö–æ–¥—è—â–∏–π\n‚Ä¢ –†–∞–∑–º–µ—Ä: –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π\n\n`;
    }

    if (galleryCount > 0) {
        analysis += `üé® –ì–∞–ª–µ—Ä–µ—è (${galleryCount} —Ñ–æ—Ç–æ):\n‚Ä¢ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ä–∞–∫—É—Ä—Å–æ–≤: —Ö–æ—Ä–æ—à–µ–µ\n‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: –≤—ã—Å–æ–∫–æ–µ\n‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n\n`;
    }

    analysis += `üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n`;
    if (galleryCount < 3) {
        analysis += `‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ –¥–ª—è –ª—É—á—à–∏—Ö –ø—Ä–æ–¥–∞–∂\n`;
    }
    analysis += `‚Ä¢ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ\n‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏: –±—ã—Å—Ç—Ä–∞—è ‚ö°\n‚Ä¢ –í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: +45% üìà`;

    addAIMessage(analysis);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
function applyTemplate(category, type) {
    if (category === 'plant' && type === 'anubias') {
        const template = smartTemplates.plant.anubias;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—è
        Object.entries(template).forEach(([field, value]) => {
            const element = document.getElementById(`product${field.charAt(0).toUpperCase() + field.slice(1)}`) || 
                           document.querySelector(`[name='${field}']`);
            if (element) {
                element.value = value;
                element.dispatchEvent(new Event('input'));
            }
        });

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        setDemoImage('plant');

        // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–µ–π–¥–∂–∏
        document.getElementById('badge_new').checked = true;
        document.getElementById('badge_recommend').checked = true;
        document.getElementById('badge_eco').checked = true;
        updateBadges();

        updateLivePreview();

        addAIMessage(`üìã –®–∞–±–ª–æ–Ω "${template.name}" –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –í—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! üöÄ`);
        showNotification('üìã –®–∞–±–ª–æ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω! –í—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã', 'success');
    } else {
        addAIMessage(`üìã –ò–∑–≤–∏–Ω–∏—Ç–µ, —à–∞–±–ª–æ–Ω –¥–ª—è ${category}-${type} –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üöÄ –£–ª—É—á—à–∏—Ç—å –≤—Å—ë" –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!`);
    }
}

// ============================================================================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================================

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫
function saveAsDraft() {
    const formData = new FormData(document.getElementById('productForm'));
    const draftData = {};

    formData.forEach((value, key) => {
        draftData[key] = value;
    });

    localStorage.setItem('product_draft', JSON.stringify(draftData));

    showNotification('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ!', 'success');
    addAIMessage('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ–∑–∂–µ.');
}

// –ò–ò –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã
function aiValidateForm() {
    const name = document.getElementById('productName').value;
    const price = document.getElementById('productPrice').value;
    const description = document.getElementById('productDescription').value;
    const category = document.getElementById('productCategory').value;
    const mainImage = document.getElementById('mainImagePath').value;

    let issues = [];
    let score = 0;

    if (!name) issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞');
    else if (name.length < 10) issues.push('‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ');
    else score += 20;

    if (!category) issues.push('‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è');
    else score += 15;

    if (!price || parseFloat(price) <= 0) issues.push('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞');
    else score += 15;

    if (!description) issues.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ');
    else if (description.split(' ').length < 20) issues.push('‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ');
    else score += 25;

    if (!mainImage) issues.push('‚ö†Ô∏è –ù–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    else score += 15;

    if (galleryImages.length === 0) issues.push('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ—é');
    else score += 10;

    let message = `üîç –ò–ò –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: ${score}/100\n\n`;

    if (issues.length === 0) {
        message += `üéâ –û–¢–õ–ò–ß–ù–û! –¢–æ–≤–∞—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!\n\n‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã\n‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π\n‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã\n‚úÖ SEO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω\n\n–ú–æ–∂–Ω–æ —Å–º–µ–ª–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å! üöÄ`;
        showNotification('‚úÖ –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!', 'success');
    } else {
        message += `üìù –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:\n${issues.join('\n')}\n\nüí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∑–∞–º–µ—á–∞–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!`;
        showNotification(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${issues.length} –∑–∞–º–µ—á–∞–Ω–∏–π`, 'warning');
    }

    addAIMessage(message);
}

// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
function previewProduct() {
    const productData = {
        name: document.getElementById('productName').value || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
        price: document.getElementById('productPrice').value || '0',
        old_price: document.getElementById('productOldPrice').value,
        description: document.getElementById('productDescription').value || '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
        short_description: document.getElementById('productShortDescription').value,
        main_image: document.getElementById('mainImagePath').value,
        gallery: galleryImages.map(img => img.url || img),
        badges: JSON.parse(document.getElementById('selectedBadges').value || '[]'),
        specs: {
            size: document.querySelector('[name="size"]')?.value,
            temperature: document.querySelector('[name="temperature"]')?.value,
            ph_level: document.querySelector('[name="ph_level"]')?.value,
            lighting: document.querySelector('[name="lighting"]')?.value
        }
    };

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.id = 'previewModal';

    modal.innerHTML = `
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-eye me-2"></i>
                        üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="main-image mb-3">
                                <img src="${productData.main_image || 'https://via.placeholder.com/400x400?text=–ù–µ—Ç+—Ñ–æ—Ç–æ'}" 
                                     class="img-fluid rounded" alt="–¢–æ–≤–∞—Ä" style="width: 100%; max-height: 400px; object-fit: cover;">
                            </div>
                            ${productData.gallery.length > 0 ? `
                                <div class="gallery-thumbs">
                                    <div class="d-flex flex-wrap gap-2">
                                        ${productData.gallery.map(img => `
                                            <img src="${img}" class="img-thumbnail" 
                                                 style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;"
                                                 onclick="document.querySelector('.main-image img').src = '${img}'">
                                        `).join('')}
                                    </div>
                                </div>
                            ` : ''}
                        </div>
                        <div class="col-md-6">
                            <div class="badges mb-3">
                                ${productData.badges.map(badge => {
                                    const badgeConfig = {
                                        new: { class: 'success', text: 'üÜï –ù–æ–≤–∏–Ω–∫–∞' },
                                        hit: { class: 'danger', text: 'üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂' },
                                        recommend: { class: 'warning', text: '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º' },
                                        discount: { class: 'info', text: 'üí∏ –°–∫–∏–¥–∫–∞' },
                                        premium: { class: 'dark', text: 'üíé –ü—Ä–µ–º–∏—É–º' },
                                        eco: { class: 'success', text: 'üåø –≠–∫–æ' }
                                    };
                                    const config = badgeConfig[badge];
                                    return config ? `<span class="badge bg-${config.class} me-1 mb-1">${config.text}</span>` : '';
                                }).join('')}
                            </div>

                            <h3>${productData.name}</h3>

                            <div class="price mb-3">
                                <span class="h4 text-success">${formatPrice(productData.price)}</span>
                                ${productData.old_price && parseFloat(productData.old_price) > parseFloat(productData.price) ? 
                                    `<span class="text-muted text-decoration-line-through ms-2">${formatPrice(productData.old_price)}</span>
                                     <span class="badge bg-danger ms-2">-${Math.round(((productData.old_price - productData.price) / productData.old_price) * 100)}%</span>`
                                    : ''}
                            </div>

                            ${productData.short_description ? `
                                <div class="short-description mb-3">
                                    <p class="lead">${productData.short_description}</p>
                                </div>
                            ` : ''}

                            <div class="description mb-4">
                                <h6>–û–ø–∏—Å–∞–Ω–∏–µ:</h6>
                                <div style="max-height: 200px; overflow-y: auto;">
                                    <p>${productData.description.replace(/\n/g, '<br>')}</p>
                                </div>
                            </div>

                            ${Object.values(productData.specs).some(v => v) ? `
                                <div class="specifications mb-4">
                                    <h6>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h6>
                                    <div class="row">
                                        ${productData.specs.size ? `<div class="col-6 mb-2"><small class="text-muted">–†–∞–∑–º–µ—Ä:</small><br>${productData.specs.size}</div>` : ''}
                                        ${productData.specs.temperature ? `<div class="col-6 mb-2"><small class="text-muted">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</small><br>${productData.specs.temperature}</div>` : ''}
                                        ${productData.specs.ph_level ? `<div class="col-6 mb-2"><small class="text-muted">pH —É—Ä–æ–≤–µ–Ω—å:</small><br>${productData.specs.ph_level}</div>` : ''}
                                        ${productData.specs.lighting ? `<div class="col-6 mb-2"><small class="text-muted">–û—Å–≤–µ—â–µ–Ω–∏–µ:</small><br>${productData.specs.lighting}</div>` : ''}
                                    </div>
                                </div>
                            ` : ''}

                            <div class="actions">
                                <button class="btn btn-success btn-lg w-100 mb-2">
                                    <i class="fas fa-shopping-cart me-2"></i>–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
                                </button>
                                <div class="row">
                                    <div class="col-6">
                                        <button class="btn btn-outline-primary w-100">
                                            <i class="fas fa-heart me-1"></i>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                                        </button>
                                    </div>
                                    <div class="col-6">
                                        <button class="btn btn-outline-secondary w-100">
                                            <i class="fas fa-share me-1"></i>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>–ó–∞–∫—Ä—ã—Ç—å
                    </button>
                    <button type="button" class="btn btn-primary" onclick="document.getElementById('productForm').scrollIntoView();">
                        <i class="fas fa-edit me-1"></i>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
                    </button>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();

    modal.addEventListener('hidden.bs.modal', () => {
        document.body.removeChild(modal);
    });

    showNotification('üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫—Ä—ã—Ç!', 'info');
    addAIMessage('üëÅÔ∏è –û—Ç–∫—Ä—ã–ª –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞! –¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–∞—à —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –ß—Ç–æ –¥—É–º–∞–µ—Ç–µ?');
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
function confirmReset() {
    if (confirm('üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é —Ñ–æ—Ä–º—É?\n\n–í—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!\n\nüí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.')) {
        const form = document.getElementById('productForm');

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        form.reset();

        // –û—á–∏—â–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        galleryImages = [];
        updateGalleryPreview();
        updateGalleryInput();
        updateGalleryCount();
        document.getElementById('selectedBadges').value = '[]';
        document.getElementById('mainImagePath').value = '';
        removeMainImage();

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        updateLivePreview();

        // –û—á–∏—â–∞–µ–º —á–∞—Ç
        const chatContainer = document.getElementById('aiChatContainer');
        chatContainer.innerHTML = `
            <div class="ai-message">
                <div class="d-flex">
                    <div class="ai-avatar me-3">ü§ñ</div>
                    <div class="ai-message-content">
                        <div class="message-bubble">
                            <strong>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</strong><br>
                            –§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞! üßπ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–µ–¥–µ–≤—Ä–∞ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!
                            <br><br>
                            üöÄ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å–æ–∑–¥–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π —Ç–æ–≤–∞—Ä!<br>
                            –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "üöÄ –£–ª—É—á—à–∏—Ç—å –≤—Å—ë" –¥–ª—è –º–∞–≥–∏–∏ –ò–ò!
                        </div>
                        <small class="text-muted d-block mt-1">–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
                    </div>
                </div>
            </div>
        `;

        showNotification('üßπ –§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞! –ì–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞', 'info');
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm() {
    const name = document.getElementById('productName').value.trim();
    const category = document.getElementById('productCategory').value;
    const price = document.getElementById('productPrice').value;
    const description = document.getElementById('productDescription').value.trim();

    if (!name) {
        showNotification('‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!', 'error');
        document.getElementById('productName').focus();
        addAIMessage('‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞.');
        return false;
    }

    if (!category) {
        showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!', 'error');
        document.getElementById('productCategory').focus();
        addAIMessage('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é! –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º –ª–µ–≥—á–µ –Ω–∞–π—Ç–∏ –≤–∞—à —Ç–æ–≤–∞—Ä.');
        return false;
    }

    if (!price || parseFloat(price) <= 0) {
        showNotification('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞!', 'error');
        document.getElementById('productPrice').focus();
        addAIMessage('‚ùå –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üí∞ –¶–µ–Ω–∞" –¥–ª—è –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.');
        return false;
    }

    if (!description) {
        showNotification('‚ùå –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!', 'error');
        document.getElementById('productDescription').focus();
        addAIMessage('‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–æ–¥–∞–∂! –ù–∞–∂–º–∏—Ç–µ "üìù –ò–ò –ì–µ–Ω–µ—Ä–∞—Ü–∏—è" –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.');
        return false;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
    showNotification('üöÄ –°–æ–∑–¥–∞—é –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π —Ç–æ–≤–∞—Ä...', 'success');
    addAIMessage('üéâ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –°–æ–∑–¥–∞—é –≤–∞—à —à–µ–¥–µ–≤—Ä... –°–∫–æ—Ä–æ —É –≤–∞—Å –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤—ã–π –∫ –ø—Ä–æ–¥–∞–∂–µ —Ç–æ–≤–∞—Ä! üöÄ');

    return true;
}

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

function showNotification(message, type = 'info', duration = 5000) {
    const alertClass = {
        'success': 'alert-success',
        'error': 'alert-danger', 
        'warning': 'alert-warning',
        'info': 'alert-info'
    }[type] || 'alert-info';

    const icon = {
        'success': 'check-circle',
        'error': 'exclamation-triangle',
        'warning': 'exclamation-circle',
        'info': 'info-circle'
    }[type] || 'info-circle';

    const notification = document.createElement('div');
    notification.className = `alert ${alertClass} alert-dismissible fade show notification`;
    notification.innerHTML = `
        <div class="d-flex align-items-center">
            <i class="fas fa-${icon} me-2 fs-5"></i>
            <span>${message}</span>
        </div>
        <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
    `;

    document.body.appendChild(notification);

    if (duration > 0) {
        setTimeout(() => {
            if (notification.parentNode) {
                notification.classList.remove('show');
                setTimeout(() => notification.remove(), 300);
            }
        }, duration);
    }

    return notification;
}

// –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
console.log('üéâ –ú–µ–≥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ v2.0 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('ü§ñ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ —Å–æ–∑–¥–∞–≤–∞—Ç—å —à–µ–¥–µ–≤—Ä—ã!');
console.log('‚ö° –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏: Enter –≤ –ò–ò —á–∞—Ç–µ, Ctrl+S –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞');

</script>

</body>
</html>
