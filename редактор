<?php
// product_editor.php - –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –ò–ò-–†–ï–î–ê–ö–¢–û–† –¢–û–í–ê–†–û–í

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑–≤–∞–Ω –ª–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä —á–µ—Ä–µ–∑ –∞–ª–∏–∞—Å
$is_editor_mode = isset($_REQUEST['editor_mode']) && $_REQUEST['editor_mode'];
$from_products = isset($_REQUEST['from_products']) && $_REQUEST['from_products'];

// –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
$product_id = $_GET['id'] ?? $_POST['product_id'] ?? $_REQUEST['product_id'] ?? null;

// –ï—Å–ª–∏ –µ—Å—Ç—å ID —Ç–æ–≤–∞—Ä–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
$product_data = null;
if ($product_id) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∏–∑ products.php
    if (function_exists('getProductById')) {
        $product_data = getProductById($product_id);
    } else {
        // –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        $demo_products = [
            1 => [
                'id' => 1,
                'name' => '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ',
                'latin_name' => 'Anubias barteri var. nana',
                'description' => '–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –º–µ–¥–ª–µ–Ω–Ω–æ—Ä–∞—Å—Ç—É—â–µ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ —Å –∂–µ—Å—Ç–∫–∏–º–∏ —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–º–∏ –ª–∏—Å—Ç—å—è–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤. –†–∞—Å—Ç–µ—Ç –ø—Ä–∏ —Å–ª–∞–±–æ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∞—á–∏ CO2. –ú–æ–∂–Ω–æ –∫—Ä–µ–ø–∏—Ç—å –∫ –∫–æ—Ä—è–≥–∞–º –∏ –∫–∞–º–Ω—è–º.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–æ–≤

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.',
                'short_description' => '–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞',
                'price' => 450,
                'old_price' => 600,
                'category_id' => 1,
                'sku' => 'PLT_ANU_9876',
                'stock_quantity' => 15,
                'status' => 1,
                'main_image' => 'https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=400&h=400&fit=crop',
                'gallery' => [
                    'https://images.unsplash.com/photo-1535591273668-578e31182c4f?w=300&h=300&fit=crop',
                    'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=300&h=300&fit=crop',
                    'https://images.unsplash.com/photo-1524704654690-b56c05c78a00?w=300&h=300&fit=crop'
                ],
                'badges' => ['recommend', 'discount', 'eco'],
                'tags' => '–∞–Ω—É–±–∏–∞—Å, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ, –º–µ–¥–ª–µ–Ω–Ω–æ—Ä–∞—Å—Ç—É—â–∏–µ, —Ç–µ–Ω–µ–ª—é–±–∏–≤—ã–µ, –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω',
                'size' => '10-15 —Å–º',
                'temperature' => '20-28¬∞C',
                'ph_level' => '6.0-8.0',
                'lighting' => '—Å–ª–∞–±–æ–µ',
                'difficulty' => '–ª–µ–≥–∫–æ',
                'meta_title' => '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –∫—É–ø–∏—Ç—å –≤ –ê–∫–≤–∞–°–±–æ—Ä –æ—Ç 450 —Ä—É–±',
                'meta_description' => '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –†–∞—Å—Ç–µ–Ω–∏—è. –õ—É—á—à–∏–µ —Ü–µ–Ω—ã, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞. –ó–∞–∫–∞–∑–∞—Ç—å –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ –ê–∫–≤–∞–°–±–æ—Ä.'
            ]
        ];
        $product_data = $demo_products[$product_id] ?? null;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['save_product'])) {
    $success = false;
    $error_message = '';

    try {
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
        $productData = [
            'id' => $product_id,
            'name' => $_POST['name'] ?? '',
            'latin_name' => $_POST['latin_name'] ?? '',
            'description' => $_POST['description'] ?? '',
            'short_description' => $_POST['short_description'] ?? '',
            'price' => floatval($_POST['price'] ?? 0),
            'old_price' => floatval($_POST['old_price'] ?? 0),
            'category_id' => intval($_POST['category_id'] ?? 0),
            'sku' => $_POST['sku'] ?? '',
            'stock_quantity' => intval($_POST['stock_quantity'] ?? 0),
            'status' => intval($_POST['status'] ?? 1),
            'main_image' => $_POST['main_image'] ?? '',
            'gallery' => json_decode($_POST['gallery'] ?? '[]', true),
            'badges' => json_decode($_POST['badges'] ?? '[]', true),
            'tags' => $_POST['tags'] ?? '',
            'size' => $_POST['size'] ?? '',
            'temperature' => $_POST['temperature'] ?? '',
            'ph_level' => $_POST['ph_level'] ?? '',
            'lighting' => $_POST['lighting'] ?? '',
            'difficulty' => $_POST['difficulty'] ?? '',
            'meta_title' => $_POST['meta_title'] ?? '',
            'meta_description' => $_POST['meta_description'] ?? ''
        ];

        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        error_log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ' . json_encode($productData));

        // –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        $success = true;
        $new_product_id = $product_id ?: rand(1000, 9999);

        if ($success) {
            $success_message = "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! ID: $new_product_id";

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —Ñ–æ—Ä–º—ã
            $product_data = $productData;
            $product_data['id'] = $new_product_id;
            $product_id = $new_product_id;
        }

    } catch (Exception $e) {
        $error_message = $e->getMessage();
    }
}

// –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞
if (!function_exists('getCategories')) {
    function getCategories() {
        return [
            ['id' => 1, 'name' => '–†–∞—Å—Ç–µ–Ω–∏—è'],
            ['id' => 2, 'name' => '–†—ã–±–∫–∏'],
            ['id' => 3, 'name' => '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ'],
            ['id' => 4, 'name' => '–î–µ–∫–æ—Ä'],
            ['id' => 5, 'name' => '–ö–æ—Ä–º–∞'],
            ['id' => 6, 'name' => '–•–∏–º–∏—è –¥–ª—è –≤–æ–¥—ã']
        ];
    }
}

$categories = getCategories();
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= $product_data ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞' : '–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä' ?> - –ò–ò –ü–æ–º–æ—â–Ω–∏–∫</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body class="bg-light">

<!-- –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è -->
<?php if (isset($success_message)): ?>
<script>
document.addEventListener('DOMContentLoaded', function() {
    showNotification('‚úÖ <?= addslashes($success_message) ?>', 'success', 5000);

    // –†–µ–¥–∏—Ä–µ–∫—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    <?php if ($from_products): ?>
    setTimeout(function() {
        if (confirm('–¢–æ–≤–∞—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤?')) {
            window.location.href = '?page=products';
        }
    }, 3000);
    <?php endif; ?>
});
</script>
<?php endif; ?>

<?php if (isset($error_message) && $error_message): ?>
<script>
document.addEventListener('DOMContentLoaded', function() {
    showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: <?= addslashes($error_message) ?>', 'error', 8000);
});
</script>
<?php endif; ?>

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ -->
<div class="modal fade" id="confirmResetModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3"><strong>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é —Ñ–æ—Ä–º—É?</strong></p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-circle me-2"></i>–í—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!
                </div>
                <p class="text-muted">üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>–û—Ç–º–µ–Ω–∞
                </button>
                <button type="button" class="btn btn-outline-info me-2" onclick="saveAsDraft(); bootstrap.Modal.getInstance(document.getElementById('confirmResetModal')).hide();">
                    <i class="fas fa-save me-1"></i>–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
                </button>
                <button type="button" class="btn btn-danger" onclick="confirmReset(); bootstrap.Modal.getInstance(document.getElementById('confirmResetModal')).hide();">
                    <i class="fas fa-trash me-1"></i>–î–∞, –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
                </button>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid py-4">
    <div class="page-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-1 text-gray-800">
                    üöÄ <?= $product_data ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞' : '–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä' ?> —Å –ò–ò
                </h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="?">–ì–ª–∞–≤–Ω–∞—è</a></li>
                        <li class="breadcrumb-item"><a href="?page=products">–¢–æ–≤–∞—Ä—ã</a></li>
                        <li class="breadcrumb-item active"><?= $product_data ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä' : '–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä' ?></li>
                    </ol>
                </nav>
            </div>
            <div>
                <a href="?page=products" class="btn btn-secondary me-2">
                    <i class="fas fa-arrow-left me-1"></i>–ù–∞–∑–∞–¥ –∫ —Ç–æ–≤–∞—Ä–∞–º
                </a>
                <button class="btn btn-success" onclick="previewProduct()">
                    <i class="fas fa-eye me-1"></i>–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
                </button>
            </div>
        </div>
    </div>

    <!-- –ò–ò –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->
    <div id="aiNotifications"></div>

    <div class="row">
        <!-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ -->
        <div class="col-xl-8 col-lg-7">
            <form id="productForm" method="POST" action="">
                <input type="hidden" name="save_product" value="1">
                <input type="hidden" id="productId" name="product_id" value="<?= htmlspecialchars($product_id ?? '') ?>">

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-info-circle me-2"></i>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        </h6>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-robot me-1"></i>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="#" onclick="aiGenerateAll()">
                                    <i class="fas fa-magic me-2"></i>–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å—ë –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                                </a>
                                <a class="dropdown-item" href="#" onclick="aiSuggestName()">
                                    <i class="fas fa-tag me-2"></i>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ
                                </a>
                                <a class="dropdown-item" href="#" onclick="showTemplates()">
                                    <i class="fas fa-file-template me-2"></i>–®–∞–±–ª–æ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">
                                        –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <span class="text-danger">*</span>
                                        <i class="fas fa-question-circle text-muted ms-1" title="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"></i>
                                    </label>
                                    <input type="text" class="form-control form-control-lg" name="name" id="productName" required
                                           placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ"
                                           value="<?= htmlspecialchars($product_data['name'] ?? '') ?>">
                                    <div class="form-text d-flex justify-content-between">
                                        <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="nameLength" class="fw-bold text-primary">0</span>/100</span>
                                        <span id="nameSeoScore" class="text-muted">–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–ê—Ä—Ç–∏–∫—É–ª (SKU)</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" name="sku" id="productSKU" 
                                               placeholder="–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è" value="<?= htmlspecialchars($product_data['sku'] ?? '') ?>">
                                        <button type="button" class="btn btn-outline-secondary" onclick="generateSKU()" title="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞—Ä—Ç–∏–∫—É–ª">
                                            <i class="fas fa-sync"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏—è <span class="text-danger">*</span></label>
                                    <select class="form-select" name="category_id" id="productCategory" required>
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                        <?php foreach ($categories as $category): ?>
                                            <option value="<?= $category['id'] ?>" 
                                                <?= ($product_data['category_id'] ?? '') == $category['id'] ? 'selected' : '' ?>>
                                                <?= htmlspecialchars($category['name']) ?>
                                            </option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">
                                        –¶–µ–Ω–∞ <span class="text-danger">*</span>
                                        <button type="button" class="btn btn-sm btn-outline-warning ms-1" onclick="aiSuggestPrice()" title="–ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É">
                                            <i class="fas fa-robot"></i>
                                        </button>
                                    </label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" name="price" id="productPrice" required
                                               min="0" step="0.01" placeholder="0" value="<?= $product_data['price'] ?? '' ?>">
                                        <span class="input-group-text">‚ÇΩ</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (–¥–ª—è —Å–∫–∏–¥–∫–∏)</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" name="old_price" id="productOldPrice"
                                               min="0" step="0.01" placeholder="0" value="<?= $product_data['old_price'] ?? '' ?>">
                                        <span class="input-group-text">‚ÇΩ</span>
                                    </div>
                                    <div class="form-text text-muted" id="discountInfo">
                                        <small>–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–õ–∞—Ç–∏–Ω—Å–∫–æ–µ/–Ω–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</label>
                                    <input type="text" class="form-control" name="latin_name" id="productLatinName"
                                           placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Anubias barteri var. nana" value="<?= htmlspecialchars($product_data['latin_name'] ?? '') ?>">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–°–ª–æ–∂–Ω–æ—Å—Ç—å —É—Ö–æ–¥–∞</label>
                                    <select class="form-select" name="difficulty">
                                        <option value="–ª–µ–≥–∫–æ" <?= ($product_data['difficulty'] ?? '') == '–ª–µ–≥–∫–æ' ? 'selected' : '' ?>>üü¢ –õ–µ–≥–∫–æ</option>
                                        <option value="—Å—Ä–µ–¥–Ω–µ" <?= ($product_data['difficulty'] ?? '') == '—Å—Ä–µ–¥–Ω–µ' ? 'selected' : '' ?>>üü° –°—Ä–µ–¥–Ω–µ</option>
                                        <option value="—Å–ª–æ–∂–Ω–æ" <?= ($product_data['difficulty'] ?? '') == '—Å–ª–æ–∂–Ω–æ' ? 'selected' : '' ?>>üî¥ –°–ª–æ–∂–Ω–æ</option>
                                        <option value="—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π" <?= ($product_data['difficulty'] ?? '') == '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π' ? 'selected' : '' ?>>üü£ –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group mb-3">
                                    <label class="form-label fw-semibold">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ</label>
                                    <input type="number" class="form-control" name="stock_quantity"
                                           min="0" value="<?= $product_data['stock_quantity'] ?? '' ?>" placeholder="0">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –û–ø–∏—Å–∞–Ω–∏—è -->
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-file-text me-2"></i>–û–ø–∏—Å–∞–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
                        </h6>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="aiGenerateDescription()">
                                <i class="fas fa-robot me-1"></i>–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-success" onclick="aiImproveDescription()">
                                <i class="fas fa-magic me-1"></i>–£–ª—É—á—à–∏—Ç—å
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label class="form-label fw-semibold">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
                            <textarea class="form-control" name="short_description" id="productShortDescription" rows="2"
                                      placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ (–¥–æ 150 —Å–∏–º–≤–æ–ª–æ–≤)"><?= htmlspecialchars($product_data['short_description'] ?? '') ?></textarea>
                            <div class="form-text">
                                <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="shortDescLength">0</span>/150</span>
                                <span class="ms-3 text-muted">–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ —Ç–æ–≤–∞—Ä–æ–≤</span>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label fw-semibold">
                                –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ <span class="text-danger">*</span>
                                <button type="button" class="btn btn-sm btn-outline-warning ms-1" onclick="aiAnalyzeDescription()" title="–ò–ò –∞–Ω–∞–ª–∏–∑ —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏">
                                    <i class="fas fa-search"></i>
                                </button>
                            </label>
                            <textarea class="form-control" name="description" id="productDescription" rows="8" required
                                      placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."><?= htmlspecialchars($product_data['description'] ?? '') ?></textarea>
                            <div class="form-text d-flex justify-content-between">
                                <span>–°–∏–º–≤–æ–ª–æ–≤: <span id="descLength" class="fw-bold">0</span></span>
                                <span>–ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: <span id="readabilityScore" class="fw-bold text-muted">-</span></span>
                                <span>SEO: <span id="seoAnalysis" class="fw-bold text-muted">-</span></span>
                            </div>
                        </div>

                        <div class="form-group mb-0">
                            <label class="form-label fw-semibold">
                                –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
                                <button type="button" class="btn btn-sm btn-outline-info ms-1" onclick="aiGenerateTags()" title="–ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —Ç–µ–≥–∏">
                                    <i class="fas fa-hashtag"></i>
                                </button>
                            </label>
                            <input type="text" class="form-control" name="tags" id="productTags"
                                   placeholder="–∞–∫–≤–∞—Ä–∏—É–º, —Ä–∞—Å—Ç–µ–Ω–∏—è, –¥–µ–∫–æ—Ä, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ"
                                   value="<?= htmlspecialchars($product_data['tags'] ?? '') ?>">
                            <div class="form-text">–ü–æ–º–æ–≥–∞—é—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫</div>
                        </div>
                    </div>
                </div>

                <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º Drag & Drop -->
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-images me-2"></i>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
                        </h6>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-info dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-tools me-1"></i>–ò–ò –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="#" onclick="aiGenerateImage()">
                                    <i class="fas fa-magic me-2"></i>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                                </a>
                                <a class="dropdown-item" href="#" onclick="aiEnhanceImages()">
                                    <i class="fas fa-wand-magic-sparkles me-2"></i>–£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ
                                </a>
                                <a class="dropdown-item" href="#" onclick="aiRemoveBackground()">
                                    <i class="fas fa-cut me-2"></i>–£–¥–∞–ª–∏—Ç—å —Ñ–æ–Ω
                                </a>
                                <a class="dropdown-item" href="#" onclick="aiOptimizeImages()">
                                    <i class="fas fa-compress me-2"></i>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ <span class="text-danger">*</span>
                                        <small class="text-muted">(–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ)</small>
                                    </label>
                                    <div class="image-upload-area <?= !empty($product_data['main_image']) ? 'has-image' : '' ?>" id="mainImageUpload">
                                        <?php if (!empty($product_data['main_image'])): ?>
                                        <div class="image-preview-container">
                                            <img src="<?= htmlspecialchars($product_data['main_image']) ?>" alt="–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" class="img-fluid">
                                            <div class="image-actions">
                                                <button type="button" class="btn btn-sm btn-primary" onclick="cropImage('main')" title="–û–±—Ä–µ–∑–∞—Ç—å">
                                                    <i class="fas fa-crop"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-warning" onclick="aiEnhanceSpecificImage('main')" title="–ò–ò —É–ª—É—á—à–µ–Ω–∏–µ">
                                                    <i class="fas fa-sparkles"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-danger" onclick="removeMainImage()" title="–£–¥–∞–ª–∏—Ç—å">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <?php else: ?>
                                        <div class="upload-placeholder">
                                            <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                            <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
                                            <p class="text-muted mb-3">–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
                                            <button type="button" class="btn btn-primary">
                                                <i class="fas fa-folder-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                                            </button>
                                            <p class="small text-muted mt-2">
                                                JPG, PNG, GIF, WebP ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 10MB<br>
                                                –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 800x600px
                                            </p>
                                        </div>
                                        <?php endif; ?>
                                    </div>
                                    <input type="hidden" name="main_image" id="mainImagePath" value="<?= htmlspecialchars($product_data['main_image'] ?? '') ?>">

                                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ -->
                                    <div class="image-info mt-2">
                                        <div class="d-flex justify-content-between">
                                            <small class="text-muted">üìè 400x400px</small>
                                            <small class="text-success">‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</small>
                                        </div>
                                    </div>

                                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                    <div class="mt-3">
                                        <small class="text-muted d-block mb-2">–ë—ã—Å—Ç—Ä–∞—è –∑–∞–º–µ–Ω–∞ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:</small>
                                        <div class="d-flex gap-2 flex-wrap">
                                            <button type="button" class="btn btn-outline-success btn-sm" onclick="setDemoImage('plant')">
                                                üåø –†–∞—Å—Ç–µ–Ω–∏–µ
                                            </button>
                                            <button type="button" class="btn btn-outline-info btn-sm" onclick="setDemoImage('fish')">
                                                üê† –†—ã–±–∫–∞
                                            </button>
                                            <button type="button" class="btn btn-outline-warning btn-sm" onclick="setDemoImage('equipment')">
                                                ‚öôÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
                                            </button>
                                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDemoImage('decoration')">
                                                ü™® –î–µ–∫–æ—Ä
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- –ì–∞–ª–µ—Ä–µ—è -->
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                                        <small class="text-muted">(–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ)</small>
                                        <span class="badge bg-primary ms-1" id="galleryCount">0</span>
                                    </label>

                                    <!-- Drag & Drop –∑–æ–Ω–∞ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ -->
                                    <div class="image-upload-area" id="galleryUpload">
                                        <div class="upload-placeholder">
                                            <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                            <h6>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞</h6>
                                            <p class="text-muted mb-3">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞</p>
                                            <button type="button" class="btn btn-primary">
                                                <i class="fas fa-folder-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                                            </button>
                                            <p class="small text-muted mt-2">
                                                JPG, PNG, GIF, WebP ‚Ä¢ –ú–∞–∫—Å. 5MB –∫–∞–∂–¥—ã–π<br>
                                                –î–æ 10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                                            </p>
                                        </div>

                                        <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ -->
                                        <div class="upload-progress" id="uploadProgress" style="display: none;">
                                            <div class="d-flex align-items-center">
                                                <div class="spinner-border spinner-border-sm text-primary me-3" role="status">
                                                    <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="d-flex justify-content-between mb-1">
                                                        <small>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...</small>
                                                        <small id="uploadPercent">0%</small>
                                                    </div>
                                                    <div class="progress" style="height: 4px;">
                                                        <div class="progress-bar" id="uploadBar" role="progressbar" style="width: 0%"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- –ü—Ä–µ–≤—å—é –≥–∞–ª–µ—Ä–µ–∏ -->
                                    <div id="galleryPreview" class="gallery-preview mt-3">
                                        <?php if (!empty($product_data['gallery']) && is_array($product_data['gallery'])): ?>
                                            <?php foreach ($product_data['gallery'] as $index => $image): ?>
                                            <div class="gallery-item">
                                                <img src="<?= htmlspecialchars($image) ?>" alt="–ì–∞–ª–µ—Ä–µ—è <?= $index + 1 ?>">
                                                <div class="gallery-overlay">
                                                    <button type="button" class="btn btn-sm btn-primary" onclick="editImage(<?= $index ?>)" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-warning" onclick="aiEnhanceSpecificImage(<?= $index ?>)" title="–ò–ò —É–ª—É—á—à–µ–Ω–∏–µ">
                                                        <i class="fas fa-sparkles"></i>
                                                    </button>
                                                </div>
                                                <button type="button" class="remove-btn" onclick="removeFromGallery(<?= $index ?>)" title="–£–¥–∞–ª–∏—Ç—å">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                            <?php endforeach; ?>
                                        <?php endif; ?>
                                    </div>
                                    <input type="hidden" name="gallery" id="galleryPaths" value="<?= htmlspecialchars(json_encode($product_data['gallery'] ?? [])) ?>">

                                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ -->
                                    <div class="mt-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</small>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-primary" onclick="addDemoToGallery('detail1')">
                                                    üì∏ –î–µ—Ç–∞–ª–∏
                                                </button>
                                                <button type="button" class="btn btn-outline-info" onclick="addDemoToGallery('detail2')">
                                                    üîç –ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω
                                                </button>
                                                <button type="button" class="btn btn-outline-success" onclick="addDemoToGallery('usage')">
                                                    üí° –í –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- –ò–ò –ø–∞–Ω–µ–ª—å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                        <div class="ai-image-panel mt-4 p-3 bg-light rounded">
                            <h6 class="mb-3">
                                <i class="fas fa-robot me-2"></i>ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
                            </h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="d-grid gap-2">
                                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="aiAnalyzeImages()">
                                            <i class="fas fa-search me-1"></i>–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                                        </button>
                                        <button type="button" class="btn btn-outline-success btn-sm" onclick="aiSuggestImageNames()">
                                            <i class="fas fa-tag me-1"></i>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å alt-—Ç–µ–≥–∏ –¥–ª—è SEO
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-grid gap-2">
                                        <button type="button" class="btn btn-outline-warning btn-sm" onclick="aiOptimizeAllImages()">
                                            <i class="fas fa-compress me-1"></i>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                        </button>
                                        <button type="button" class="btn btn-outline-info btn-sm" onclick="aiCreateVariants()">
                                            <i class="fas fa-clone me-1"></i>–°–æ–∑–¥–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º–µ—Ä–æ–≤
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                            <div class="image-stats mt-3 p-2 bg-white rounded">
                                <div class="row text-center">
                                    <div class="col-3">
                                        <small class="text-muted d-block">–ó–∞–≥—Ä—É–∂–µ–Ω–æ</small>
                                        <strong class="text-primary" id="imageCount">0</strong>
                                    </div>
                                    <div class="col-3">
                                        <small class="text-muted d-block">–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä</small>
                                        <strong class="text-info" id="totalSize">0 KB</strong>
                                    </div>
                                    <div class="col-3">
                                        <small class="text-muted d-block">–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</small>
                                        <strong class="text-success" id="optimizedPercent">0%</strong>
                                    </div>
                                    <div class="col-3">
                                        <small class="text-muted d-block">SEO –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å</small>
                                        <strong class="text-warning" id="seoReadiness">0%</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è -->
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <button type="button" class="btn btn-outline-secondary me-2" onclick="saveAsDraft()">
                                    <i class="fas fa-save me-1"></i>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
                                </button>
                                <button type="button" class="btn btn-outline-info me-2" onclick="previewProduct()">
                                    <i class="fas fa-eye me-1"></i>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                                </button>
                                <button type="button" class="btn btn-outline-warning" onclick="aiValidateForm()">
                                    <i class="fas fa-check-double me-1"></i>–ò–ò –ø—Ä–æ–≤–µ—Ä–∫–∞
                                </button>
                            </div>
                            <div>
                                <button type="button" class="btn btn-secondary me-2" onclick="showConfirmResetModal()">
                                    <i class="fas fa-undo me-1"></i>–°–±—Ä–æ—Å–∏—Ç—å
                                </button>
                                <button type="submit" class="btn btn-success" onclick="return validateForm()">
                                    <i class="fas fa-save me-1"></i><?= $product_data ? '–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä' ?>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

            </form>
        </div>

        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
        <div class="col-xl-4 col-lg-5">

            <!-- –ò–ò –ß–∞—Ç-–ø–æ–º–æ—â–Ω–∏–∫ -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-robot me-2"></i>ü§ñ –ò–ò –ß–∞—Ç-–ü–æ–º–æ—â–Ω–∏–∫
                        <div class="float-end">
                            <span class="badge bg-success">–û–Ω–ª–∞–π–Ω</span>
                        </div>
                    </h6>
                </div>
                <div class="card-body p-0">
                    <div class="ai-chat-container" id="aiChatContainer" style="height: 300px; overflow-y: auto; padding: 1rem;">
                        <div class="ai-message mb-3">
                            <div class="d-flex">
                                <div class="ai-avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 35px; height: 35px; font-size: 14px;">
                                    ü§ñ
                                </div>
                                <div class="ai-message-content">
                                    <div class="bg-light rounded p-2">
                                        <strong>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</strong><br>
                                        <?php if ($product_data): ?>
                                        –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä "<?= htmlspecialchars($product_data['name']) ?>"! üõ†Ô∏è
                                        <br><br>–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π:
                                        <?php else: ?>
                                        –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä! üöÄ
                                        <br><br>–ú–æ–≥—É –ø–æ–º–æ—á—å:
                                        <?php endif; ?>
                                        <br>‚Ä¢ –£–ª—É—á—à–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
                                        <br>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                        <br>‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å SEO
                                        <br>‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–≥–∏
                                        <br><br>–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?
                                    </div>
                                    <small class="text-muted">–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="p-3 border-top bg-light">
                        <div class="input-group">
                            <input type="text" class="form-control" id="aiChatInput" placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –ò–ò –æ —Ç–æ–≤–∞—Ä–µ...">
                            <button class="btn btn-primary" onclick="sendAIMessage()">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>

                        <!-- –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã -->
                        <div class="quick-commands mt-2">
                            <div class="d-flex flex-wrap gap-1">
                                <button class="btn btn-outline-primary btn-sm" onclick="aiQuickCommand('improve')">
                                    –£–ª—É—á—à–∏—Ç—å –≤—Å—ë
                                </button>
                                <button class="btn btn-outline-success btn-sm" onclick="aiQuickCommand('seo')">
                                    SEO –∞–Ω–∞–ª–∏–∑
                                </button>
                                <button class="btn btn-outline-info btn-sm" onclick="aiQuickCommand('price')">
                                    –¶–µ–Ω–∞
                                </button>
                                <button class="btn btn-outline-warning btn-sm" onclick="aiQuickCommand('images')">
                                    –§–æ—Ç–æ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-magic me-2"></i>üéØ –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
                    </h6>
                </div>
                <div class="card-body">
                    <div class="template-categories">
                        <div class="mb-3">
                            <h6 class="text-success mb-2">üåø –†–∞—Å—Ç–µ–Ω–∏—è</h6>
                            <div class="list-group list-group-flush">
                                <button type="button" class="list-group-item list-group-item-action py-2 border-0"
                                        onclick="applyTemplate('plant', 'anubias')">
                                    <small><strong>–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞</strong> ‚≠ê<br>
                                    <span class="text-muted">–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞</span></small>
                                </button>
                                <button type="button" class="list-group-item list-group-item-action py-2 border-0"
                                        onclick="applyTemplate('plant', 'vallisneria')">
                                    <small><strong>–í–∞–ª–ª–∏—Å–Ω–µ—Ä–∏—è</strong><br>
                                    <span class="text-muted">–ë—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–µ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –∑–∞–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞</span></small>
                                </button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <h6 class="text-info mb-2">üê† –†—ã–±–∫–∏</h6>
                            <div class="list-group list-group-flush">
                                <button type="button" class="list-group-item list-group-item-action py-2 border-0"
                                        onclick="applyTemplate('fish', 'guppy')">
                                    <small><strong>–ì—É–ø–ø–∏</strong><br>
                                    <span class="text-muted">–Ø—Ä–∫–∞—è –∂–∏–≤–æ—Ä–æ–¥—è—â–∞—è —Ä—ã–±–∫–∞</span></small>
                                </button>
                                <button type="button" class="list-group-item list-group-item-action py-2 border-0"
                                        onclick="applyTemplate('fish', 'neon')">
                                    <small><strong>–ù–µ–æ–Ω</strong><br>
                                    <span class="text-muted">–°—Ç–∞–π–Ω–∞—è —Å–≤–µ—Ç—è—â–∞—è—Å—è —Ä—ã–±–∫–∞</span></small>
                                </button>
                            </div>
                        </div>

                        <div class="mb-0">
                            <h6 class="text-warning mb-2">‚öôÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h6>
                            <div class="list-group list-group-flush">
                                <button type="button" class="list-group-item list-group-item-action py-2 border-0"
                                        onclick="applyTemplate('equipment', 'filter')">
                                    <small><strong>–§–∏–ª—å—Ç—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π</strong><br>
                                    <span class="text-muted">–°–∏—Å—Ç–µ–º–∞ –æ—á–∏—Å—Ç–∫–∏ –≤–æ–¥—ã</span></small>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-cogs me-2"></i>üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group mb-3">
                                <label class="form-label small">–†–∞–∑–º–µ—Ä</label>
                                <input type="text" class="form-control form-control-sm" name="size" 
                                       placeholder="10-15 —Å–º" value="<?= htmlspecialchars($product_data['size'] ?? '') ?>">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group mb-3">
                                <label class="form-label small">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</label>
                                <input type="text" class="form-control form-control-sm" name="temperature" 
                                       placeholder="22-26¬∞C" value="<?= htmlspecialchars($product_data['temperature'] ?? '') ?>">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group mb-3">
                                <label class="form-label small">pH —É—Ä–æ–≤–µ–Ω—å</label>
                                <input type="text" class="form-control form-control-sm" name="ph_level" 
                                       placeholder="6.0-7.5" value="<?= htmlspecialchars($product_data['ph_level'] ?? '') ?>">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group mb-3">
                                <label class="form-label small">–û—Å–≤–µ—â–µ–Ω–∏–µ</label>
                                <select class="form-select form-select-sm" name="lighting">
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                                    <option value="—Å–ª–∞–±–æ–µ" <?= ($product_data['lighting'] ?? '') == '—Å–ª–∞–±–æ–µ' ? 'selected' : '' ?>>–°–ª–∞–±–æ–µ</option>
                                    <option value="—Å—Ä–µ–¥–Ω–µ–µ" <?= ($product_data['lighting'] ?? '') == '—Å—Ä–µ–¥–Ω–µ–µ' ? 'selected' : '' ?>>–°—Ä–µ–¥–Ω–µ–µ</option>
                                    <option value="—è—Ä–∫–æ–µ" <?= ($product_data['lighting'] ?? '') == '—è—Ä–∫–æ–µ' ? 'selected' : '' ?>>–Ø—Ä–∫–æ–µ</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ -->
                    <div class="ai-suggestions bg-light p-2 rounded mt-2">
                        <small class="text-muted d-block mb-2">üí° –ò–ò –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</small>
                        <div class="d-flex flex-wrap gap-1">
                            <span class="badge bg-success">–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ ‚úÖ</span>
                            <span class="badge bg-info">–¢–µ–Ω–µ–ª—é–±–∏–≤–æ–µ</span>
                            <span class="badge bg-warning text-dark">–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞ -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">üè∑Ô∏è –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞</h6>
                </div>
                <div class="card-body">
                    <div class="badges-container">
                        <?php 
                        $current_badges = $product_data['badges'] ?? [];
                        if (!is_array($current_badges)) {
                            $current_badges = json_decode($current_badges, true) ?: [];
                        }
                        ?>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_new" value="new" onchange="updateBadges()" 
                                   <?= in_array('new', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_new">
                                <span class="badge bg-success">üÜï –ù–æ–≤–∏–Ω–∫–∞</span>
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_hit" value="hit" onchange="updateBadges()"
                                   <?= in_array('hit', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_hit">
                                <span class="badge bg-danger">üî• –•–∏—Ç –ø—Ä–æ–¥–∞–∂</span>
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_recommend" value="recommend" onchange="updateBadges()"
                                   <?= in_array('recommend', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_recommend">
                                <span class="badge bg-warning text-dark">‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</span>
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_discount" value="discount" onchange="updateBadges()"
                                   <?= in_array('discount', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_discount">
                                <span class="badge bg-info">üí∏ –°–∫–∏–¥–∫–∞</span>
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_premium" value="premium" onchange="updateBadges()"
                                   <?= in_array('premium', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_premium">
                                <span class="badge bg-dark">üíé –ü—Ä–µ–º–∏—É–º</span>
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="badge_eco" value="eco" onchange="updateBadges()"
                                   <?= in_array('eco', $current_badges) ? 'checked' : '' ?>>
                            <label class="form-check-label" for="badge_eco">
                                <span class="badge bg-success">üåø –≠–∫–æ</span>
                            </label>
                        </div>
                    </div>
                    <input type="hidden" name="badges" id="selectedBadges" value="<?= htmlspecialchars(json_encode($current_badges)) ?>">
                </div>
            </div>

            <!-- SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">üéØ SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>
                    <div class="seo-score">
                        <span class="badge bg-success">85/100</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label class="form-label small">Meta Title</label>
                        <input type="text" class="form-control form-control-sm" name="meta_title" maxlength="60"
                               value="<?= htmlspecialchars($product_data['meta_title'] ?? '') ?>">
                        <small class="text-muted">–°–∏–º–≤–æ–ª–æ–≤: <span id="metaTitleLength">0</span>/60</small>
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label small">Meta Description</label>
                        <textarea class="form-control form-control-sm" name="meta_description" rows="3" maxlength="160"><?= htmlspecialchars($product_data['meta_description'] ?? '') ?></textarea>
                        <small class="text-muted">–°–∏–º–≤–æ–ª–æ–≤: <span id="metaDescLength">0</span>/160</small>
                    </div>

                    <!-- SEO –∞–Ω–∞–ª–∏–∑ -->
                    <div class="seo-analysis bg-light p-2 rounded mb-3">
                        <small class="text-muted d-block mb-2">üîç SEO –∞–Ω–∞–ª–∏–∑:</small>
                        <div class="d-flex flex-column gap-1">
                            <small class="text-success">‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω</small>
                            <small class="text-success">‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</small>
                            <small class="text-warning">‚ö†Ô∏è –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ alt-—Ç–µ–≥–æ–≤ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º</small>
                            <small class="text-info">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</small>
                        </div>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="generateSEO()">
                            <i class="fas fa-search me-1"></i>–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è SEO
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-success" onclick="aiOptimizeSEO()">
                            <i class="fas fa-robot me-1"></i>–ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SEO
                        </button>
                    </div>
                </div>
            </div>

            <!-- –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-eye me-2"></i>üëÅÔ∏è –ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                    </h6>
                </div>
                <div class="card-body">
                    <div class="product-preview" id="productPreview">
                        <div class="preview-badges mb-2" id="previewBadges">
                            <!-- –Ø—Ä–ª—ã–∫–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å -->
                        </div>
                        <div class="preview-image mb-2">
                            <div class="ratio ratio-1x1 bg-light rounded d-flex align-items-center justify-content-center border">
                                <img id="previewImage" src="<?= htmlspecialchars($product_data['main_image'] ?? '') ?>" 
                                     style="width: 100%; height: 100%; object-fit: cover; border-radius: 0.5rem; <?= empty($product_data['main_image']) ? 'display: none;' : '' ?>">
                                <i class="fas fa-fish fa-3x text-muted" id="previewPlaceholder" <?= !empty($product_data['main_image']) ? 'style="display: none;"' : '' ?>></i>
                            </div>
                        </div>
                        <h6 class="preview-name fw-bold mb-1" id="previewName"><?= htmlspecialchars($product_data['name'] ?? '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞') ?></h6>
                        <p class="preview-description text-muted small mb-2" id="previewDescription">
                            <?= htmlspecialchars(mb_substr($product_data['short_description'] ?? $product_data['description'] ?? '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...', 0, 120)) ?>
                        </p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="preview-price fw-bold text-success" id="previewPrice"><?= number_format($product_data['price'] ?? 0, 0, ',', ' ') ?> ‚ÇΩ</span>
                                <small class="preview-old-price text-muted text-decoration-line-through ms-1" id="previewOldPrice" 
                                       <?= empty($product_data['old_price']) || $product_data['old_price'] <= ($product_data['price'] ?? 0) ? 'style="display: none;"' : '' ?>>
                                    <?= number_format($product_data['old_price'] ?? 0, 0, ',', ' ') ?> ‚ÇΩ
                                </small>
                            </div>
                            <small class="text-muted" id="previewCategory">
                                <?php
                                if (!empty($product_data['category_id'])) {
                                    foreach ($categories as $cat) {
                                        if ($cat['id'] == $product_data['category_id']) {
                                            echo htmlspecialchars($cat['name']);
                                            break;
                                        }
                                    }
                                } else {
                                    echo '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';
                                }
                                ?>
                            </small>
                        </div>
                        <div class="preview-specs mt-2" id="previewSpecs">
                            <?php
                            $specs = [];
                            if (!empty($product_data['size'])) $specs[] = 'üìè ' . htmlspecialchars($product_data['size']);
                            if (!empty($product_data['temperature'])) $specs[] = 'üå°Ô∏è ' . htmlspecialchars($product_data['temperature']);
                            if (!empty($product_data['ph_level'])) $specs[] = 'üíß ' . htmlspecialchars($product_data['ph_level']);
                            if (!empty($specs)):
                            ?>
                            <small class="text-muted d-block"><?= implode(' ‚Ä¢ ', $specs) ?></small>
                            <?php endif; ?>
                        </div>
                    </div>

                    <!-- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö -->
                    <div class="preview-formats mt-3">
                        <small class="text-muted d-block mb-2">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤:</small>
                        <div class="btn-group btn-group-sm w-100" role="group">
                            <button type="button" class="btn btn-outline-secondary active" onclick="switchPreview('card')">
                                –ö–∞—Ä—Ç–æ—á–∫–∞
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="switchPreview('list')">
                                –°–ø–∏—Å–æ–∫
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="switchPreview('mobile')">
                                –ú–æ–±–∏–ª—å–Ω—ã–π
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<style>
/* –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ */
.page-header {
    background: #fff;
    padding: 1.5rem 0;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #e3e6f0;
}

.breadcrumb {
    background: none;
    padding: 0;
    margin: 0;
    font-size: 0.85rem;
}

.breadcrumb-item + .breadcrumb-item::before {
    color: #858796;
    content: '‚Ä∫';
}

.card {
    border: 1px solid #e3e6f0;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
}

.card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
}

.card-header {
    background-color: #f8f9fc;
    border-bottom: 1px solid #e3e6f0;
}

.form-control, .form-select {
    border-color: #d1d3e2;
    font-size: 0.9rem;
    transition: all 0.3s ease;
}

.form-control:focus, .form-select:focus {
    border-color: #4e73df;
    box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è drag & drop */
.image-upload-area {
    border: 3px dashed #d1d3e2;
    border-radius: 12px;
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    background: linear-gradient(135deg, #f8f9fc 0%, #f1f3ff 100%);
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
}

.image-upload-area::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(78, 115, 223, 0.1), transparent);
    transition: left 0.8s;
}

.image-upload-area:hover {
    border-color: #4e73df;
    background: linear-gradient(135deg, #f0f2ff 0%, #e8ecff 100%);
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(78, 115, 223, 0.2);
}

.image-upload-area:hover::before {
    left: 100%;
}

.image-upload-area.dragover {
    border-color: #36b9cc;
    background: linear-gradient(135deg, #e8f4f8 0%, #d4edda 100%);
    border-style: solid;
    transform: scale(1.02);
}

.image-upload-area.has-image {
    padding: 1rem;
    min-height: auto;
}

.image-preview-container {
    position: relative;
    display: inline-block;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.image-preview-container:hover {
    transform: scale(1.02);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.image-preview-container img {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 12px;
    transition: all 0.3s ease;
}

.image-actions {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    gap: 5px;
    opacity: 0;
    transition: all 0.3s ease;
}

.image-preview-container:hover .image-actions {
    opacity: 1;
}

.image-actions .btn {
    width: 32px;
    height: 32px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    border-radius: 50%;
    backdrop-filter: blur(10px);
    background: rgba(255,255,255,0.9);
    border: 1px solid rgba(255,255,255,0.3);
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è */
.gallery-preview {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 15px;
}

.gallery-item {
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    border: 2px solid #e3e6f0;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

.gallery-item:hover {
    border-color: #4e73df;
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(78, 115, 223, 0.3);
}

.gallery-item img {
    width: 100%;
    height: 120px;
    object-fit: cover;
    transition: all 0.3s ease;
}

.gallery-item:hover img {
    transform: scale(1.05);
}

.gallery-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    opacity: 0;
    transition: all 0.3s ease;
}

.gallery-item:hover .gallery-overlay {
    opacity: 1;
}

.remove-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: rgba(220, 53, 69, 0.9);
    color: white;
    border: none;
    font-size: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
}

.gallery-item:hover .remove-btn {
    opacity: 1;
}

.remove-btn:hover {
    background: rgba(220, 53, 69, 1);
    transform: scale(1.1);
}

/* –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ */
.upload-progress {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(255,255,255,0.95);
    padding: 15px;
    backdrop-filter: blur(10px);
    border-radius: 0 0 12px 12px;
}

.progress {
    height: 6px;
    border-radius: 3px;
    overflow: hidden;
}

.progress-bar {
    background: linear-gradient(90deg, #4e73df, #36b9cc);
    transition: width 0.3s ease;
}

/* –ò–ò —á–∞—Ç */
.ai-chat-container {
    background: linear-gradient(135deg, #f8f9fc 0%, #f1f3ff 100%);
}

.ai-message {
    margin-bottom: 1rem;
}

.ai-avatar {
    flex-shrink: 0;
    background: linear-gradient(135deg, #4e73df, #36b9cc) !important;
    animation: pulse-avatar 2s infinite;
}

@keyframes pulse-avatar {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.ai-message-content .bg-light {
    background: rgba(255,255,255,0.8) !important;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.3);
}

.quick-commands .btn {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes fadeInUp {
    0% {
        transform: translateY(20px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

.gallery-item {
    animation: fadeInUp 0.6s ease;
}

.gallery-item:nth-child(1) { animation-delay: 0.1s; }
.gallery-item:nth-child(2) { animation-delay: 0.2s; }
.gallery-item:nth-child(3) { animation-delay: 0.3s; }

/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
.image-stats {
    border: 1px solid #e3e6f0;
    background: linear-gradient(135deg, #fff 0%, #f8f9fc 100%);
}

/* SEO –ø–∞–Ω–µ–ª—å */
.seo-score .badge {
    font-size: 0.75rem;
    padding: 0.5rem 0.75rem;
}

.seo-analysis {
    border: 1px solid #e3e6f0;
    background: linear-gradient(135deg, #fff 0%, #f1f8ff 100%);
}

/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ */
.product-preview {
    border: 2px solid #e3e6f0;
    border-radius: 12px;
    padding: 1rem;
    background: linear-gradient(135deg, #fff 0%, #f8f9fc 100%);
    transition: all 0.3s ease;
}

.product-preview:hover {
    border-color: #4e73df;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(78, 115, 223, 0.2);
}

/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
.notification {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    min-width: 350px;
    border-radius: 12px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.3);
    animation: slideInFromRight 0.5s ease;
}

/* –ö–Ω–æ–ø–∫–∏ */
.btn {
    font-size: 0.875rem;
    border-radius: 8px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-weight: 500;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.btn-primary {
    background: linear-gradient(135deg, #4e73df, #2653d4);
    border: none;
}

.btn-success {
    background: linear-gradient(135deg, #1cc88a, #17a673);
    border: none;
}

.btn-warning {
    background: linear-gradient(135deg, #f6c23e, #f4b619);
    border: none;
}

.btn-info {
    background: linear-gradient(135deg, #36b9cc, #2c9faf);
    border: none;
}

/* –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏ */
.text-gray-800 { color: #5a5c69 !important; }
.font-weight-bold { font-weight: 700 !important; }
.fw-semibold { font-weight: 600 !important; }

.container-fluid {
    max-width: 1400px;
    margin: 0 auto;
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
@media (max-width: 768px) {
    .page-header {
        padding: 1rem 0;
        text-align: center;
    }

    .page-header .d-flex {
        flex-direction: column;
        gap: 1rem;
    }

    .card-body {
        padding: 1rem;
    }

    .image-upload-area {
        min-height: 150px;
        padding: 1.5rem;
    }

    .gallery-preview {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 10px;
    }

    .gallery-item img {
        height: 100px;
    }

    .ai-chat-container {
        height: 250px !important;
    }
}

@media (max-width: 576px) {
    .container-fluid {
        padding: 0.5rem;
    }

    .card {
        margin-bottom: 1rem;
    }

    .btn-group {
        display: flex;
        flex-direction: column;
    }

    .btn-group .btn {
        border-radius: 8px !important;
        margin-bottom: 0.5rem;
    }
}
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
// üöÄ –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –ò–ò –†–ï–î–ê–ö–¢–û–† –¢–û–í–ê–†–û–í

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let galleryImages = <?= json_encode($product_data['gallery'] ?? []) ?>;
let currentProductId = '<?= $product_id ?? '' ?>';

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≥–∞–ª–µ—Ä–µ—é –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
if (Array.isArray(galleryImages)) {
    galleryImages = galleryImages.map((url, index) => ({
        url: url,
        name: `gallery_${index + 1}.jpg`,
        size: 245760,
        alt: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ' + (index + 1)
    }));
}

let aiPersonality = {
    name: '–ò–ò –ü–æ–º–æ—â–Ω–∏–∫',
    emoji: 'ü§ñ',
    expertise: ['seo', 'content', 'images', 'pricing', 'marketing'],
    mood: 'helpful',
    learningLevel: 'advanced'
};

// –î–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
const demoImages = {
    plant: 'https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=400&h=400&fit=crop',
    fish: 'https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=400&h=400&fit=crop',
    equipment: 'https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400&h=400&fit=crop',
    decoration: 'https://images.unsplash.com/photo-1583212292454-1fe6229603b7?w=400&h=400&fit=crop',
    detail1: 'https://images.unsplash.com/photo-1535591273668-578e31182c4f?w=300&h=300&fit=crop',
    detail2: 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=300&h=300&fit=crop',
    usage: 'https://images.unsplash.com/photo-1524704654690-b56c05c78a00?w=300&h=300&fit=crop'
};

// –£–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤
let aiTemplates = {
    plant: {
        anubias: {
            name: '–ê–Ω—É–±–∏–∞—Å –Ω–∞–Ω–∞ - –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ',
            latin_name: 'Anubias barteri var. nana',
            price: 450,
            old_price: 600,
            description: `–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –º–µ–¥–ª–µ–Ω–Ω–æ—Ä–∞—Å—Ç—É—â–µ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ —Å –∂–µ—Å—Ç–∫–∏–º–∏ —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–º–∏ –ª–∏—Å—Ç—å—è–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤. –†–∞—Å—Ç–µ—Ç –ø—Ä–∏ —Å–ª–∞–±–æ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∞—á–∏ CO2. –ú–æ–∂–Ω–æ –∫—Ä–µ–ø–∏—Ç—å –∫ –∫–æ—Ä—è–≥–∞–º –∏ –∫–∞–º–Ω—è–º.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –∞–∫–≤–∞—Ä–∏—É–º–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω—ã—Ö –∞–∫–≤–∞—Ä–∏—É–º–æ–≤

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.`,
            short_description: '–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–æ–µ –∞–∫–≤–∞—Ä–∏—É–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –ø–ª–∞–Ω–∞',
            size: '10-15 —Å–º',
            temperature: '20-28¬∞C',
            ph_level: '6.0-8.0',
            lighting: '—Å–ª–∞–±–æ–µ',
            difficulty: '–ª–µ–≥–∫–æ',
            tags: '–∞–Ω—É–±–∏–∞—Å, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ, –º–µ–¥–ª–µ–Ω–Ω–æ—Ä–∞—Å—Ç—É—â–∏–µ, —Ç–µ–Ω–µ–ª—é–±–∏–≤—ã–µ, –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω',
            stock_quantity: 15
        }
    },
    fish: {
        guppy: {
            name: '–ì—É–ø–ø–∏ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è - —è—Ä–∫–∞—è –∂–∏–≤–æ—Ä–æ–¥—è—â–∞—è —Ä—ã–±–∫–∞',
            latin_name: 'Poecilia reticulata',
            price: 150,
            description: '–Ø—Ä–∫–∞—è –∏ –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤–∞—è –∂–∏–≤–æ—Ä–æ–¥—è—â–∞—è —Ä—ã–±–∫–∞, –∏–¥–µ–∞–ª—å–Ω–∞—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∞–∫–≤–∞—Ä–∏—É–º–∏—Å—Ç–æ–≤...',
            tags: '–≥—É–ø–ø–∏, –∂–∏–≤–æ—Ä–æ–¥—è—â–∏–µ, —è—Ä–∫–∏–µ, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ, –Ω–∞—á–∏–Ω–∞—é—â–∏–º'
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤...');

    initAdvancedImageUploads();
    initSmartFormTracking();
    initAIPersonality();
    updateLivePreview();
    initKeyboardShortcuts();
    updateBadges(); // –û–±–Ω–æ–≤–ª—è–µ–º —è—Ä–ª—ã–∫–∏
    updateGalleryCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≥–∞–ª–µ—Ä–µ–∏
    updateImageStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

    console.log(`üîß –†–µ–¥–∞–∫—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ID: ${currentProductId || '–Ω–æ–≤—ã–π'}`);
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
function validateForm() {
    const name = document.getElementById('productName').value.trim();
    const category = document.getElementById('productCategory').value;
    const price = document.getElementById('productPrice').value;
    const description = document.getElementById('productDescription').value.trim();

    if (!name) {
        showNotification('‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', 'error');
        document.getElementById('productName').focus();
        return false;
    }

    if (!category) {
        showNotification('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞', 'error');
        document.getElementById('productCategory').focus();
        return false;
    }

    if (!price || parseFloat(price) <= 0) {
        showNotification('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞', 'error');
        document.getElementById('productPrice').focus();
        return false;
    }

    if (!description) {
        showNotification('‚ùå –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', 'error');
        document.getElementById('productDescription').focus();
        return false;
    }

    showNotification('üíæ –°–æ—Ö—Ä–∞–Ω—è—é —Ç–æ–≤–∞—Ä...', 'info');
    return true;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞
function showConfirmResetModal() {
    const modal = new bootstrap.Modal(document.getElementById('confirmResetModal'));
    modal.show();
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
function previewProduct() {
    const productData = {
        name: document.getElementById('productName').value,
        price: document.getElementById('productPrice').value,
        old_price: document.getElementById('productOldPrice').value,
        description: document.getElementById('productDescription').value,
        main_image: document.getElementById('mainImagePath').value,
        gallery: galleryImages.map(img => img.url || img),
        badges: JSON.parse(document.getElementById('selectedBadges').value || '[]')
    };

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class='modal-dialog modal-lg'>
            <div class='modal-content'>
                <div class='modal-header'>
                    <h5 class='modal-title'>üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞</h5>
                    <button type='button' class='btn-close' data-bs-dismiss='modal'></button>
                </div>
                <div class='modal-body'>
                    <div class='row'>
                        <div class='col-md-6'>
                            <img src='${productData.main_image || 'https://via.placeholder.com/400x400?text=–ù–µ—Ç+—Ñ–æ—Ç–æ'}'
                                 class='img-fluid rounded' alt='–¢–æ–≤–∞—Ä'>
                            <div class='gallery-preview mt-3'>
                                ${productData.gallery.map(img => `
                                    <img src='${img}' class='img-thumbnail me-2' style='width: 80px; height: 80px; object-fit: cover;'>
                                `).join('')}
                            </div>
                        </div>
                        <div class='col-md-6'>
                            <div class='badges mb-2'>
                                ${productData.badges.map(badge => {
                                    const badgeColors = {new: 'success', hit: 'danger', recommend: 'warning', discount: 'info', premium: 'dark', eco: 'success'};
                                    const badgeTexts = {new: 'üÜï –ù–æ–≤–∏–Ω–∫–∞', hit: 'üî• –•–∏—Ç', recommend: '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º', discount: 'üí∏ –°–∫–∏–¥–∫–∞', premium: 'üíé –ü—Ä–µ–º–∏—É–º', eco: 'üåø –≠–∫–æ'};
                                    return `<span class='badge bg-${badgeColors[badge]} me-1'>${badgeTexts[badge]}</span>`;
                                }).join('')}
                            </div>
                            <h4>${productData.name || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'}</h4>
                            <div class='price mb-3'>
                                <span class='h4 text-success'>${formatPrice(productData.price)}</span>
                                ${productData.old_price && parseFloat(productData.old_price) > parseFloat(productData.price) ?
                                    `<span class='text-muted text-decoration-line-through ms-2'>${formatPrice(productData.old_price)}</span>` : ''}
                            </div>
                            <div class='description'>
                                <p>${productData.description.replace(/\n/g, '<br>') || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                            </div>
                            <button class='btn btn-success btn-lg w-100'>
                                <i class='fas fa-shopping-cart me-2'></i>–ö—É–ø–∏—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();

    modal.addEventListener('hidden.bs.modal', () => {
        document.body.removeChild(modal);
    });

    showNotification('üëÅÔ∏è –û—Ç–∫—Ä—ã—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞', 'info');
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
function confirmReset() {
    const form = document.getElementById('productForm');

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–ª—è
    form.reset();

    // –û—á–∏—â–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    galleryImages = [];
    updateGalleryPreview();
    updateGalleryInput();
    updateGalleryCount();
    document.getElementById('selectedBadges').value = '[]';
    document.getElementById('mainImagePath').value = '';
    removeMainImage();
    updateLivePreview();
    updateImageStats();

    // –û—á–∏—â–∞–µ–º —á–∞—Ç
    const container = document.getElementById('aiChatContainer');
    container.innerHTML = `
        <div class='ai-message mb-3'>
            <div class='d-flex'>
                <div class='ai-avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3' style='width: 35px; height: 35px; font-size: 14px;'>
                    ü§ñ
                </div>
                <div class='ai-message-content'>
                    <div class='bg-light rounded p-2'>
                        <strong>–ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</strong><br>
                        –§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞! üßπ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π —Ç–æ–≤–∞—Ä.
                        <br><br>–ù–∞—á–Ω–µ–º —Å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞? üöÄ
                    </div>
                    <small class='text-muted'>–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
                </div>
            </div>
        </div>
    `;

    showNotification('üßπ –§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'info');
}

// üéØ –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –°–ò–°–¢–ï–ú–ê DRAG & DROP
function initAdvancedImageUploads() {
    const mainUpload = document.getElementById('mainImageUpload');
    const galleryUpload = document.getElementById('galleryUpload');

    // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (mainUpload) {
        setupDragAndDrop(mainUpload, 'main');
    }

    // –ì–∞–ª–µ—Ä–µ—è
    if (galleryUpload) {
        setupDragAndDrop(galleryUpload, 'gallery');
    }

    console.log('‚úÖ Drag & Drop —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

function setupDragAndDrop(element, type) {
    // –ö–ª–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    element.addEventListener('click', (e) => {
        if (!e.target.closest('.btn-danger') && !e.target.closest('.image-actions') && !e.target.closest('.remove-btn')) {
            selectFiles(type);
        }
    });

    // Drag & Drop —Å–æ–±—ã—Ç–∏—è
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        element.addEventListener(eventName, preventDefaults, false);
    });

    ['dragenter', 'dragover'].forEach(eventName => {
        element.addEventListener(eventName, () => handleDragEnter(element), false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        element.addEventListener(eventName, () => handleDragLeave(element), false);
    });

    element.addEventListener('drop', (e) => handleFileDrop(e, type), false);
}

function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
}

function handleDragEnter(element) {
    element.classList.add('dragover');
}

function handleDragLeave(element) {
    element.classList.remove('dragover');
}

function selectFiles(type) {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    input.multiple = type === 'gallery';

    input.onchange = (e) => {
        const files = Array.from(e.target.files);
        if (files.length > 0) {
            processFiles(files, type);
        }
    };

    input.click();
}

function handleFileDrop(e, type) {
    const dt = e.dataTransfer;
    const files = Array.from(dt.files);

    processFiles(files, type);
}

// üñºÔ∏è –£–ú–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
async function processFiles(files, type) {
    console.log(`üñºÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ ${files.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è ${type}`);

    const validFiles = files.filter(file => {
        if (!file.type.startsWith('image/')) {
            showNotification(`‚ùå –§–∞–π–ª ${file.name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º`, 'error');
            return false;
        }

        if (file.size > 10 * 1024 * 1024) { // 10MB
            showNotification(`‚ùå –§–∞–π–ª ${file.name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 10MB)`, 'error');
            return false;
        }

        return true;
    });

    if (validFiles.length === 0) return;

    showUploadProgress(true, validFiles.length);

    for (let i = 0; i < validFiles.length; i++) {
        const file = validFiles[i];
        await processFile(file, type, i, validFiles.length);
    }

    showUploadProgress(false);
    updateLivePreview();
    updateImageStats();

    addAIMessage(`üì∏ –û—Ç–ª–∏—á–Ω–æ! –ó–∞–≥—Ä—É–∑–∏–ª ${validFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ alt-—Ç–µ–≥–∏ –¥–ª—è SEO\n‚Ä¢ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Ä–µ–∂—å—Ç–µ –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ\n\n–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π?`);
}

async function processFile(file, type, index, total) {
    return new Promise((resolve) => {
        const reader = new FileReader();

        reader.onload = async function(e) {
            const imageData = {
                url: e.target.result,
                name: file.name,
                size: file.size,
                alt: generateAltText(file.name),
                dimensions: await getImageDimensions(e.target.result),
                optimized: false
            };

            // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            setTimeout(() => {
                if (type === 'main') {
                    setMainImage(imageData);
                } else {
                    addToGallery(imageData);
                }

                updateUploadProgress(((index + 1) / total) * 100);
                resolve();
            }, 800 + Math.random() * 400);
        };

        reader.onerror = function() {
            showNotification(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${file.name}`, 'error');
            resolve();
        };

        reader.readAsDataURL(file);
    });
}

function getImageDimensions(src) {
    return new Promise((resolve) => {
        const img = new Image();
        img.onload = function() {
            resolve({ width: this.width, height: this.height });
        };
        img.src = src;
    });
}

function generateAltText(filename) {
    const productName = document.getElementById('productName').value || '–¢–æ–≤–∞—Ä';
    const baseAlt = productName.split(' ').slice(0, 3).join(' ');

    if (filename.includes('detail')) return `${baseAlt} - –¥–µ—Ç–∞–ª–∏`;
    if (filename.includes('usage')) return `${baseAlt} - –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏`;
    return `${baseAlt} - —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞`;
}

// üìä –ü–û–ö–ê–ó –ü–†–û–ì–†–ï–°–°–ê –ó–ê–ì–†–£–ó–ö–ò
function showUploadProgress(show, fileCount = 1) {
    const progressEl = document.getElementById('uploadProgress');

    if (show && progressEl) {
        progressEl.style.display = 'block';
        const textEl = progressEl.querySelector('small');
        if (textEl) textEl.textContent = `–ó–∞–≥—Ä—É–∑–∫–∞ ${fileCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...`;
        updateUploadProgress(0);
    } else if (progressEl) {
        setTimeout(() => {
            progressEl.style.display = 'none';
        }, 1000);
    }
}

function updateUploadProgress(percent) {
    const bar = document.getElementById('uploadBar');
    const text = document.getElementById('uploadPercent');

    if (bar) bar.style.width = percent + '%';
    if (text) text.textContent = Math.round(percent) + '%';
}

// üñºÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–ù–û–í–ù–´–ú –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï–ú
function setMainImage(imageData) {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <div class='image-preview-container'>
            <img src='${imageData.url}' alt='${imageData.alt}' class='img-fluid'>
            <div class='image-actions'>
                <button type='button' class='btn btn-primary' onclick='cropImage("main")' title='–û–±—Ä–µ–∑–∞—Ç—å'>
                    <i class='fas fa-crop'></i>
                </button>
                <button type='button' class='btn btn-warning' onclick='aiEnhanceSpecificImage("main")' title='–ò–ò —É–ª—É—á—à–µ–Ω–∏–µ'>
                    <i class='fas fa-sparkles'></i>
                </button>
                <button type='button' class='btn btn-danger' onclick='removeMainImage()' title='–£–¥–∞–ª–∏—Ç—å'>
                    <i class='fas fa-times'></i>
                </button>
            </div>
        </div>
    `;

    mainUpload.classList.add('has-image');
    mainPath.value = imageData.url;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    const imageInfo = mainUpload.nextElementSibling;
    if (imageInfo && imageInfo.classList.contains('image-info')) {
        imageInfo.innerHTML = `
            <div class='d-flex justify-content-between'>
                <small class='text-muted'>üìè ${imageData.dimensions?.width || 'N/A'}x${imageData.dimensions?.height || 'N/A'}px</small>
                <small class='text-muted'>üíæ ${formatFileSize(imageData.size)}</small>
                <small class='${imageData.optimized ? 'text-success' : 'text-warning'}'>
                    ${imageData.optimized ? '‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ' : '‚ö†Ô∏è –ù—É–∂–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'}
                </small>
            </div>
        `;
    }
}

function removeMainImage() {
    const mainUpload = document.getElementById('mainImageUpload');
    const mainPath = document.getElementById('mainImagePath');

    mainUpload.innerHTML = `
        <div class='upload-placeholder'>
            <i class='fas fa-cloud-upload-alt fa-3x text-primary mb-3'></i>
            <h5>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞</h5>
            <p class='text-muted mb-3'>–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞</p>
            <button type='button' class='btn btn-primary'>
                <i class='fas fa-folder-open me-1'></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
            </button>
            <p class='small text-muted mt-2'>
                JPG, PNG, GIF, WebP ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 10MB<br>
                –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 800x600px
            </p>
        </div>
    `;

    mainUpload.classList.remove('has-image');
    mainPath.value = '';
    updateLivePreview();
}

// üñºÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –ì–ê–õ–ï–†–ï–ï–ô
function addToGallery(imageData) {
    galleryImages.push(imageData);
    updateGalleryPreview();
    updateGalleryInput();
    updateGalleryCount();
}

function updateGalleryPreview() {
    const preview = document.getElementById('galleryPreview');

    if (galleryImages.length === 0) {
        preview.innerHTML = '<p class="text-muted text-center py-4">–ì–∞–ª–µ—Ä–µ—è –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!</p>';
        return;
    }

    preview.innerHTML = galleryImages.map((imageData, index) => `
        <div class='gallery-item' style='animation-delay: ${index * 0.1}s'>
            <img src='${imageData.url || imageData}' alt='${imageData.alt || '–ì–∞–ª–µ—Ä–µ—è ' + (index + 1)}' title='${imageData.name || 'gallery_' + (index + 1)}'>
            <div class='gallery-overlay'>
                <button type='button' class='btn btn-sm btn-primary' onclick='editImage(${index})' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                    <i class='fas fa-edit'></i>
                </button>
                <button type='button' class='btn btn-sm btn-warning' onclick='aiEnhanceSpecificImage(${index})' title='–ò–ò —É–ª—É—á—à–µ–Ω–∏–µ'>
                    <i class='fas fa-sparkles'></i>
                </button>
            </div>
            <button type='button' class='remove-btn' onclick='removeFromGallery(${index})' title='–£–¥–∞–ª–∏—Ç—å'>
                <i class='fas fa-times'></i>
            </button>
        </div>
    `).join('');
}

function removeFromGallery(index) {
    const removedImage = galleryImages.splice(index, 1)[0];
    updateGalleryPreview();
    updateGalleryInput();
    updateGalleryCount();
    updateLivePreview();
    updateImageStats();

    showNotification(`üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏`, 'info');
}

function updateGalleryInput() {
    const urls = galleryImages.map(img => img.url || img);
    document.getElementById('galleryPaths').value = JSON.stringify(urls);
}

function updateGalleryCount() {
    const countEl = document.getElementById('galleryCount');
    if (countEl) {
        countEl.textContent = galleryImages.length;
    }
}

function updateImageStats() {
    const mainImage = document.getElementById('mainImagePath').value;
    const totalImages = (mainImage ? 1 : 0) + galleryImages.length;
    const totalSize = galleryImages.reduce((sum, img) => sum + (img.size || 0), 0) + (mainImage ? 245760 : 0);

    document.getElementById('imageCount').textContent = totalImages;
    document.getElementById('totalSize').textContent = formatFileSize(totalSize);
    document.getElementById('optimizedPercent').textContent = Math.round((totalImages * 0.75)) + '%';
    document.getElementById('seoReadiness').textContent = Math.round((totalImages * 0.6)) + '%';
}

// üöÄ –ë–´–°–¢–†–´–ï –î–ï–ú–û –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
function setDemoImage(type) {
    const imageUrl = demoImages[type];
    if (!imageUrl) return;

    const imageData = {
        url: imageUrl,
        name: `demo_${type}.jpg`,
        size: 245760, // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        alt: generateAltText(`demo_${type}`),
        dimensions: { width: 400, height: 400 },
        optimized: true
    };

    setMainImage(imageData);
    updateLivePreview();

    const typeNames = {
        plant: 'üåø —Ä–∞—Å—Ç–µ–Ω–∏—è',
        fish: 'üê† —Ä—ã–±–∫–∏',
        equipment: '‚öôÔ∏è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        decoration: 'ü™® –¥–µ–∫–æ—Ä–∞'
    };

    showNotification(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${typeNames[type]}!`, 'success');

    addAIMessage(`üñºÔ∏è –û—Ç–ª–∏—á–Ω–æ! –£—Å—Ç–∞–Ω–æ–≤–∏–ª –∫—Ä–∞—Å–∏–≤–æ–µ –¥–µ–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${typeNames[type]}.\n\n–≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–µ—Ç–µ:\n‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —Ä–∞–∫—É—Ä—Å–æ–≤ –≤ –≥–∞–ª–µ—Ä–µ—é\n‚Ä¢ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å alt-—Ç–µ–≥ –¥–ª—è –ª—É—á—à–µ–≥–æ SEO`);
}

function addDemoToGallery(type) {
    const imageUrl = demoImages[type];
    if (!imageUrl) return;

    const imageData = {
        url: imageUrl,
        name: `gallery_${type}.jpg`,
        size: 198432,
        alt: generateAltText(`gallery_${type}`),
        dimensions: { width: 300, height: 300 },
        optimized: true
    };

    addToGallery(imageData);
    updateLivePreview();

    const typeNames = {
        detail1: 'üì∏ –¥–µ—Ç–∞–ª–µ–π',
        detail2: 'üîç –∫—Ä—É–ø–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        usage: 'üí° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
    };

    showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ ${typeNames[type]} –≤ –≥–∞–ª–µ—Ä–µ—é!`, 'success');

    addAIMessage(`üì∏ –î–æ–±–∞–≤–∏–ª —Ñ–æ—Ç–æ ${typeNames[type]} –≤ –≥–∞–ª–µ—Ä–µ—é!\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–º–æ–≥–∞—é—Ç:\n‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä —Å —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–æ–≤\n‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–≤–µ—Ä–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π\n‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 40-60%\n\n–†–µ–∫–æ–º–µ–Ω–¥—É—é –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ 1-2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞!`);
}

// ü§ñ –°–ò–°–¢–ï–ú–ê –ò–ò –ü–û–ú–û–©–ù–ò–ö–ê
function initAIPersonality() {
    const input = document.getElementById('aiChatInput');

    if (input) {
        input.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendAIMessage();
            }
        });

        // –£–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
        input.addEventListener('focus', function() {
            if (!this.value) {
                showAISuggestions();
            }
        });
    }

    console.log('ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

function sendAIMessage() {
    const input = document.getElementById('aiChatInput');
    const message = input.value.trim();

    if (!message) return;

    addUserMessage(message);
    input.value = '';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏
    addAIMessage('ü§î –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...', true);

    setTimeout(() => {
        removeTemporaryMessages();
        processAIRequest(message);
    }, 1000 + Math.random() * 1500);
}

function addUserMessage(message) {
    const container = document.getElementById('aiChatContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'user-message mb-3';

    messageDiv.innerHTML = `
        <div class='d-flex justify-content-end'>
            <div class='user-message-content'>
                <div class='bg-primary text-white rounded p-2' style='max-width: 250px;'>
                    ${escapeHtml(message)}
                </div>
                <small class='text-muted float-end'>–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
            </div>
            <div class='user-avatar bg-secondary text-white rounded-circle d-flex align-items-center justify-content-center ms-3' style='width: 35px; height: 35px; font-size: 14px;'>
                üë§
            </div>
        </div>
    `;

    container.appendChild(messageDiv);
    container.scrollTop = container.scrollHeight;
}

function addAIMessage(message, isTemporary = false) {
    const container = document.getElementById('aiChatContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = `ai-message mb-3 ${isTemporary ? 'temporary' : ''}`;

    messageDiv.innerHTML = `
        <div class='d-flex'>
            <div class='ai-avatar bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3' style='width: 35px; height: 35px; font-size: 14px;'>
                ${aiPersonality.emoji}
            </div>
            <div class='ai-message-content'>
                <div class='bg-light rounded p-2' style='max-width: 280px;'>
                    <strong>${aiPersonality.name}:</strong><br>
                    ${message.replace(/\n/g, '<br>')}
                </div>
                <small class='text-muted'>–¢–æ–ª—å–∫–æ —á—Ç–æ</small>
            </div>
        </div>
    `;

    container.appendChild(messageDiv);
    container.scrollTop = container.scrollHeight;

    // –ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    playNotificationSound();
}

function removeTemporaryMessages() {
    const tempMessages = document.querySelectorAll('.temporary');
    tempMessages.forEach(msg => msg.remove());
}

// üß† –£–ú–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–û–í
function processAIRequest(message) {
    const lowerMessage = message.toLowerCase();
    let response = '';

    // –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
    if (lowerMessage.includes('—Ü–µ–Ω–∞') || lowerMessage.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å') || lowerMessage.includes('price')) {
        response = analyzePrice();
    } else if (lowerMessage.includes('–æ–ø–∏—Å–∞–Ω–∏–µ') || lowerMessage.includes('description')) {
        response = analyzeDescription();
    } else if (lowerMessage.includes('—Ñ–æ—Ç–æ') || lowerMessage.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') || lowerMessage.includes('–∫–∞—Ä—Ç–∏–Ω–∫')) {
        response = analyzeImages();
    } else if (lowerMessage.includes('seo') || lowerMessage.includes('–ø–æ–∏—Å–∫') || lowerMessage.includes('–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è')) {
        response = analyzeSEO();
    } else if (lowerMessage.includes('—Ç–µ–≥') || lowerMessage.includes('tag') || lowerMessage.includes('–∫–∞—Ç–µ–≥–æ—Ä')) {
        response = analyzeTags();
    } else if (lowerMessage.includes('–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç') || lowerMessage.includes('—Ä—ã–Ω–æ–∫') || lowerMessage.includes('–∞–Ω–∞–ª–∏–∑')) {
        response = analyzeCompetitors();
    } else if (lowerMessage.includes('–ø–æ–º–æ—â—å') || lowerMessage.includes('help') || lowerMessage.includes('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å')) {
        response = showHelp();
    } else {
        response = generateSmartResponse(message);
    }

    addAIMessage(response);
}

function analyzePrice() {
    const currentPrice = parseFloat(document.getElementById('productPrice').value) || 0;
    const oldPrice = parseFloat(document.getElementById('productOldPrice').value) || 0;
    const categorySelect = document.getElementById('productCategory');
    const category = categorySelect.selectedOptions[0]?.text || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞';

    let analysis = 'üí∞ –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:\n\n';

    if (currentPrice === 0) {
        analysis += '‚ùå –¶–µ–Ω–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!\n\n–†–µ–∫–æ–º–µ–Ω–¥—É—é:';
        analysis += '\n‚Ä¢ –ò–∑—É—á–∏—Ç—å —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤';
        analysis += '\n‚Ä¢ –£—á–µ—Å—Ç—å —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + –º–∞—Ä–∂—É 30-50%';
        analysis += '\n‚Ä¢ –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ \'' + category + '\' —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ 300-800‚ÇΩ';
    } else {
        analysis += `‚úÖ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${currentPrice}‚ÇΩ\n`;

        if (oldPrice > currentPrice) {
            const discount = Math.round(((oldPrice - currentPrice) / oldPrice) * 100);
            analysis += `üî• –°–∫–∏–¥–∫–∞: ${discount}% (—ç–∫–æ–Ω–æ–º–∏—è ${oldPrice - currentPrice}‚ÇΩ)\n`;
        }

        // –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
        if (currentPrice < 300) {
            analysis += '\nüí° –¶–µ–Ω–∞ –¥–æ–≤–æ–ª—å–Ω–æ –Ω–∏–∑–∫–∞—è. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç:';
            analysis += '\n‚Ä¢ –ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞';
            analysis += '\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞';
        } else if (currentPrice > 800) {
            analysis += '\n‚ö†Ô∏è –¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é:';
            analysis += '\n‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞';
            analysis += '\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞';
            analysis += '\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è—Ä–ª—ã–∫ \'–ü—Ä–µ–º–∏—É–º\'';
        } else {
            analysis += '\n‚úÖ –¶–µ–Ω–∞ –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ!';
        }
    }

    analysis += '\n\nüéØ –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞?';

    return analysis;
}

function generateSmartResponse(message) {
    const productName = document.getElementById('productName').value || '—Ç–æ–≤–∞—Ä';

    const responses = [
        `–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! ü§î\n\n–Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à —Ç–æ–≤–∞—Ä –∏ –≤–∏–∂—É, —á—Ç–æ —ç—Ç–æ '${productName}'.\n\n–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\n‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Ü–µ–Ω—ã\n‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n‚Ä¢ SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏\n‚Ä¢ –ü–æ–¥–±–æ—Ä–æ–º —Ç–µ–≥–æ–≤\n\n–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,

        `–û—Ç–ª–∏—á–Ω–æ! üëç\n\n–ü–æ —Ç–æ–≤–∞—Ä—É '${productName}' –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:\n\n‚Ä¢ –ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ SEO –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?`,

        `–ü–æ–Ω–∏–º–∞—é! üí°\n\n–î–∞–≤–∞–π—Ç–µ —É–ª—É—á—à–∏–º –≤–∞—à —Ç–æ–≤–∞—Ä. –Ø –≤–∏–∂—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:\n\n1. –û–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ –ø—Ä–æ–¥–∞—é—â–∏–º\n2. –¶–µ–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤\n3. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏\n4. SEO –º–æ–∂–Ω–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!`
    ];

    return responses[Math.floor(Math.random() * responses.length)];
}

// üöÄ –ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´ –ò–ò
function aiQuickCommand(command) {
    switch(command) {
        case 'improve':
            addUserMessage('–£–ª—É—á—à–∏ –≤—Å–µ –ø–æ–ª—è —Ç–æ–≤–∞—Ä–∞');
            setTimeout(() => {
                addAIMessage('üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–∞!', true);
                setTimeout(() => {
                    removeTemporaryMessages();
                    aiGenerateAll();
                }, 2000);
            }, 500);
            break;

        case 'seo':
            addUserMessage('–ü—Ä–æ–≤–µ–¥–∏ SEO –∞–Ω–∞–ª–∏–∑');
            setTimeout(() => {
                processAIRequest('seo –∞–Ω–∞–ª–∏–∑');
            }, 1000);
            break;

        case 'price':
            addUserMessage('–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞');
            setTimeout(() => {
                processAIRequest('–∞–Ω–∞–ª–∏–∑ —Ü–µ–Ω—ã');
            }, 1000);
            break;

        case 'images':
            addUserMessage('–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?');
            setTimeout(() => {
                processAIRequest('–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
            }, 1000);
            break;
    }
}

// üí° –£–ú–ù–û–ï –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –§–û–†–ú–´
function initSmartFormTracking() {
    const form = document.getElementById('productForm');
    const inputs = form.querySelectorAll('input, select, textarea');

    inputs.forEach(input => {
        input.addEventListener('input', debounce(updateLivePreview, 300));
        input.addEventListener('change', updateLivePreview);

        // –£–º–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
        input.addEventListener('blur', function() {
            provideSuggestionForField(this);
        });
    });

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π
    setupSpecialFieldHandlers();

    console.log('üí° –£–º–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');
}

function setupSpecialFieldHandlers() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    const nameField = document.getElementById('productName');
    if (nameField) {
        nameField.addEventListener('input', function() {
            const length = this.value.length;
            const lengthEl = document.getElementById('nameLength');
            const seoEl = document.getElementById('nameSeoScore');

            if (lengthEl) lengthEl.textContent = length;

            if (seoEl) {
                if (length < 10) {
                    seoEl.innerHTML = '<span class="text-warning">üìà –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –¥–ª—è SEO</span>';
                } else if (length <= 30) {
                    seoEl.innerHTML = '<span class="text-success">‚úÖ –•–æ—Ä–æ—à–æ –¥–ª—è SEO</span>';
                } else if (length <= 60) {
                    seoEl.innerHTML = '<span class="text-success">üéØ –û—Ç–ª–∏—á–Ω–æ –¥–ª—è SEO</span>';
                } else {
                    seoEl.innerHTML = '<span class="text-danger">‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ</span>';
                }
            }
        });
        // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        nameField.dispatchEvent(new Event('input'));
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø–∏—Å–∞–Ω–∏—è
    const descField = document.getElementById('productDescription');
    if (descField) {
        descField.addEventListener('input', function() {
            const text = this.value;
            const length = text.length;
            const words = text.split(' ').filter(word => word.length > 0).length;

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            const lengthEl = document.getElementById('descLength');
            const readabilityEl = document.getElementById('readabilityScore');
            const seoEl = document.getElementById('seoAnalysis');

            if (lengthEl) lengthEl.textContent = length;

            if (readabilityEl && seoEl) {
                if (words < 30) {
                    readabilityEl.textContent = '–ö–æ—Ä–æ—Ç–∫–æ';
                    readabilityEl.className = 'fw-bold text-warning';
                    seoEl.innerHTML = '<span class="text-danger">–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ</span>';
                } else if (words < 100) {
                    readabilityEl.textContent = '–•–æ—Ä–æ—à–æ';
                    readabilityEl.className = 'fw-bold text-success';
                    seoEl.innerHTML = '<span class="text-success">–•–æ—Ä–æ—à–æ</span>';
                } else if (words < 200) {
                    readabilityEl.textContent = '–û—Ç–ª–∏—á–Ω–æ';
                    readabilityEl.className = 'fw-bold text-success';
                    seoEl.innerHTML = '<span class="text-success">–û—Ç–ª–∏—á–Ω–æ</span>';
                } else {
                    readabilityEl.textContent = '–û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ';
                    readabilityEl.className = 'fw-bold text-info';
                    seoEl.innerHTML = '<span class="text-info">–û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ</span>';
                }
            }
        });
        // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        descField.dispatchEvent(new Event('input'));
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
    const shortDescField = document.getElementById('productShortDescription');
    if (shortDescField) {
        shortDescField.addEventListener('input', function() {
            const lengthEl = document.getElementById('shortDescLength');
            if (lengthEl) lengthEl.textContent = this.value.length;
        });
        shortDescField.dispatchEvent(new Event('input'));
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ü–µ–Ω
    ['productPrice', 'productOldPrice'].forEach(id => {
        const field = document.getElementById(id);
        if (field) {
            field.addEventListener('input', calculateDiscount);
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ meta –ø–æ–ª–µ–π
    const metaTitleField = document.querySelector('[name="meta_title"]');
    if (metaTitleField) {
        metaTitleField.addEventListener('input', function() {
            const lengthEl = document.getElementById('metaTitleLength');
            if (lengthEl) lengthEl.textContent = this.value.length;
        });
        metaTitleField.dispatchEvent(new Event('input'));
    }

    const metaDescField = document.querySelector('[name="meta_description"]');
    if (metaDescField) {
        metaDescField.addEventListener('input', function() {
            const lengthEl = document.getElementById('metaDescLength');
            if (lengthEl) lengthEl.textContent = this.value.length;
        });
        metaDescField.dispatchEvent(new Event('input'));
    }
}

function provideSuggestionForField(field) {
    const fieldName = field.getAttribute('name');
    const fieldValue = field.value.trim();

    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ –∏ —ç—Ç–æ –≤–∞–∂–Ω–æ–µ –ø–æ–ª–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    if (!fieldValue && ['name', 'description', 'price', 'category_id'].includes(fieldName)) {
        const suggestions = {
            name: '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏',
            description: '–î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏',
            price: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—É—é —Ü–µ–Ω—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞',
            category_id: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ª—É—á—à–µ–π –Ω–∞—Ö–æ–¥–∏–º–æ—Å—Ç–∏'
        };

        if (suggestions[fieldName]) {
            showNotification(`üí° ${suggestions[fieldName]}`, 'info', 3000);
        }
    }
}

// üîÑ –ñ–ò–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–ï–î–ü–†–û–°–ú–û–¢–†–ê
function updateLivePreview() {
    const name = document.getElementById('productName').value || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    const price = document.getElementById('productPrice').value || '0';
    const oldPrice = document.getElementById('productOldPrice').value || '';
    const description = document.getElementById('productDescription').value || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...';
    const shortDescription = document.getElementById('productShortDescription').value || description;
    const categorySelect = document.getElementById('productCategory');
    const categoryText = categorySelect.selectedOptions[0]?.text || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è';

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const nameEl = document.getElementById('previewName');
    const priceEl = document.getElementById('previewPrice');
    const oldPriceEl = document.getElementById('previewOldPrice');
    const descEl = document.getElementById('previewDescription');
    const categoryEl = document.getElementById('previewCategory');

    if (nameEl) nameEl.textContent = name;
    if (priceEl) priceEl.textContent = formatPrice(price);
    if (categoryEl) categoryEl.textContent = categoryText;

    // –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —É–º–Ω—ã–º —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ–º
    if (descEl) {
        const previewText = shortDescription || description;
        descEl.textContent = previewText.length > 120 ?
            previewText.substring(0, 120) + '...' : previewText;
    }

    // –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –∏ —Å–∫–∏–¥–∫–∞
    if (oldPriceEl) {
        if (oldPrice && parseFloat(oldPrice) > parseFloat(price)) {
            oldPriceEl.textContent = formatPrice(oldPrice);
            oldPriceEl.style.display = 'inline';
        } else {
            oldPriceEl.style.display = 'none';
        }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const mainImage = document.getElementById('mainImagePath').value;
    const previewImg = document.getElementById('previewImage');
    const previewPlaceholder = document.getElementById('previewPlaceholder');

    if (previewImg && previewPlaceholder) {
        if (mainImage) {
            previewImg.src = mainImage;
            previewImg.style.display = 'block';
            previewPlaceholder.style.display = 'none';
        } else {
            previewImg.style.display = 'none';
            previewPlaceholder.style.display = 'block';
        }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —è—Ä–ª—ã–∫–∏
    updatePreviewBadges();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    updatePreviewSpecs();
}

function updatePreviewBadges() {
    const badgesEl = document.getElementById('previewBadges');
    if (!badgesEl) return;

    const selectedBadges = JSON.parse(document.getElementById('selectedBadges').value || '[]');

    const badgeColors = {
        new: 'success', hit: 'danger', recommend: 'warning',
        discount: 'info', premium: 'dark', eco: 'success'
    };

    const badgeTexts = {
        new: 'üÜï –ù–æ–≤–∏–Ω–∫–∞', hit: 'üî• –•–∏—Ç', recommend: '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º',
        discount: 'üí∏ –°–∫–∏–¥–∫–∞', premium: 'üíé –ü—Ä–µ–º–∏—É–º', eco: 'üåø –≠–∫–æ'
    };

    const badgesHtml = selectedBadges.map(badge => {
        const color = badgeColors[badge] || 'secondary';
        const text = badgeTexts[badge] || badge;
        return `<span class='badge bg-${color} me-1 mb-1'>${text}</span>`;
    }).join('');

    badgesEl.innerHTML = badgesHtml;
}

function updatePreviewSpecs() {
    const specsEl = document.getElementById('previewSpecs');
    if (!specsEl) return;

    const specs = [];

    const specFields = [
        { field: 'size', icon: 'üìè' },
        { field: 'temperature', icon: 'üå°Ô∏è' },
        { field: 'ph_level', icon: 'üíß' },
        { field: 'lighting', icon: 'üí°' }
    ];

    specFields.forEach(({ field, icon }) => {
        const value = document.querySelector(`[name='${field}']`)?.value;
        if (value) {
            specs.push(`${icon} ${value}`);
        }
    });

    if (specs.length > 0) {
        specsEl.innerHTML = `<small class='text-muted d-block mt-2'>${specs.join(' ‚Ä¢ ')}</small>`;
    } else {
        specsEl.innerHTML = '';
    }
}

// üí∞ –£–ú–ù–´–ô –†–ê–°–ß–ï–¢ –°–ö–ò–î–ö–ò
function calculateDiscount() {
    const price = parseFloat(document.getElementById('productPrice').value) || 0;
    const oldPrice = parseFloat(document.getElementById('productOldPrice').value) || 0;
    const infoEl = document.getElementById('discountInfo');

    if (!infoEl) return;

    if (price > 0 && oldPrice > price) {
        const discount = Math.round(((oldPrice - price) / oldPrice) * 100);
        const savings = oldPrice - price;

        infoEl.innerHTML = `<small class='text-success'>‚ú® –°–∫–∏–¥–∫–∞: ${discount}% (—ç–∫–æ–Ω–æ–º–∏—è ${formatPrice(savings, false)})</small>`;

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º —è—Ä–ª—ã–∫ —Å–∫–∏–¥–∫–∏
        const discountBadge = document.getElementById('badge_discount');
        if (discountBadge && !discountBadge.checked) {
            discountBadge.checked = true;
            updateBadges();
        }
    } else if (oldPrice > 0 && oldPrice <= price) {
        infoEl.innerHTML = '<small class="text-warning">‚ö†Ô∏è –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π</small>';
    } else {
        infoEl.innerHTML = '<small class="text-muted">–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏</small>';
    }

    updateLivePreview();
}

// üè∑Ô∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –Ø–†–õ–´–ö–ê–ú–ò
function updateBadges() {
    const badges = [];
    const checkboxes = document.querySelectorAll('.badges-container input[type="checkbox"]:checked');

    checkboxes.forEach(checkbox => {
        badges.push(checkbox.value);
    });

    document.getElementById('selectedBadges').value = JSON.stringify(badges);
    updateLivePreview();
}

// üîß –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
function formatPrice(price, withSymbol = true) {
    const numPrice = parseFloat(price) || 0;

    if (withSymbol) {
        return new Intl.NumberFormat('ru-RU', {
            style: 'currency',
            currency: 'RUB',
            minimumFractionDigits: 0
        }).format(numPrice);
    } else {
        return new Intl.NumberFormat('ru-RU', {
            minimumFractionDigits: 0
        }).format(numPrice) + ' ‚ÇΩ';
    }
}

function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';

    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
}

function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// üîî –£–ú–ù–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
function showNotification(message, type = 'success', duration = 5000) {
    const alertClass = {
        'success': 'alert-success',
        'error': 'alert-danger',
        'warning': 'alert-warning',
        'info': 'alert-info'
    }[type] || 'alert-info';

    const icon = {
        'success': 'check-circle',
        'error': 'exclamation-triangle',
        'warning': 'exclamation-circle',
        'info': 'info-circle'
    }[type] || 'info-circle';

    const notification = document.createElement('div');
    notification.className = `alert ${alertClass} alert-dismissible fade show notification`;
    notification.innerHTML = `
        <div class='d-flex align-items-center'>
            <i class='fas fa-${icon} me-2'></i>
            <span>${message}</span>
        </div>
        <button type='button' class='btn-close' onclick='this.parentElement.remove()'></button>
    `;

    document.body.appendChild(notification);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        if (notification.parentNode) {
            notification.classList.add('fade');
            setTimeout(() => notification.remove(), 300);
        }
    }, duration);

    return notification;
}

function playNotificationSound() {
    // –°–æ–∑–¥–∞–µ–º –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—É–∫–æ–≤–æ–π —Å–∏–≥–Ω–∞–ª
    try {
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = audioContext.createOscillator();
        const gainNode = audioContext.createGain();

        oscillator.connect(gainNode);
        gainNode.connect(audioContext.destination);

        oscillator.frequency.value = 800;
        oscillator.type = 'sine';
        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);

        oscillator.start(audioContext.currentTime);
        oscillator.stop(audioContext.currentTime + 0.1);
    } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–≤—É–∫–∞
    }
}

// ‚å®Ô∏è –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò
function initKeyboardShortcuts() {
    document.addEventListener('keydown', function(e) {
        // Ctrl/Cmd + S - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        if ((e.ctrlKey || e.metaKey) && e.key === 's') {
            e.preventDefault();
            if (validateForm()) {
                document.getElementById('productForm').submit();
            }
        }

        // Ctrl/Cmd + Enter - –ò–ò –ø–æ–º–æ—â—å
        if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
            e.preventDefault();
            const aiInput = document.getElementById('aiChatInput');
            if (aiInput) aiInput.focus();
        }

        // Escape - –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        if (e.key === 'Escape') {
            closeModals();
        }
    });

    console.log('‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
}

// üöÄ –ü–†–û–î–í–ò–ù–£–¢–´–ï –ò–ò –§–£–ù–ö–¶–ò–ò

async function aiGenerateAll() {
    const name = document.getElementById('productName').value;

    if (!name) {
        showNotification('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!', 'warning');
        return;
    }

    addAIMessage(`üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –ò–ò-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–∞ '${name}'!\n\n–≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n1. ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è\n2. üîÑ –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n3. üîÑ –ü–æ–¥–±–æ—Ä —Ç–µ–≥–æ–≤\n4. üîÑ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è\n5. üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è—Ä–ª—ã–∫–æ–≤\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`, true);

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ—ç—Ç–∞–ø–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    setTimeout(async () => {
        removeTemporaryMessages();

        // 1. –û–ø–∏—Å–∞–Ω–∏–µ
        await aiGenerateDescription();

        setTimeout(async () => {
            // 2. –¶–µ–Ω–∞
            await aiSuggestPrice();

            setTimeout(async () => {
                // 3. –¢–µ–≥–∏
                await aiGenerateTags();

                setTimeout(async () => {
                    // 4. SEO
                    await generateSEO();

                    setTimeout(() => {
                        // 5. –Ø—Ä–ª—ã–∫–∏
                        const recommendBadge = document.getElementById('badge_recommend');
                        const newBadge = document.getElementById('badge_new');

                        if (recommendBadge) recommendBadge.checked = true;
                        if (newBadge) newBadge.checked = true;
                        updateBadges();

                        // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        addAIMessage(`üéâ –ü–æ–ª–Ω–∞—è –ò–ò-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:\n‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞\n‚úÖ –ü–æ–¥–æ–±—Ä–∞–Ω—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–≥–∏\n‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã SEO –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —è—Ä–ª—ã–∫–∏\n\n–¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! üöÄ\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–∞–∫–∂–µ:\n‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é`);

                        showNotification('üéâ –ò–ò –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏', 'success', 8000);

                    }, 1000);
                }, 1000);
            }, 1000);
        }, 1000);
    }, 2000);
}

// –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ò–ò –§–£–ù–ö–¶–ò–ô - —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –∏ –∫—Ä–∞—Å–∏–≤—ã–µ

async function aiGenerateDescription() {
    addAIMessage('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞...', true);
    setTimeout(() => {
        removeTemporaryMessages();
        addAIMessage('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ! –°–æ–∑–¥–∞–ª –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –∏ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π.');
        showNotification('üìù –û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ò–ò!', 'success');
    }, 2500);
}

async function aiSuggestPrice() {
    addAIMessage('üí∞ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ä—ã–Ω–æ–∫ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã...', true);
    setTimeout(() => {
        removeTemporaryMessages();
        addAIMessage('üí∞ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞! –£—Å—Ç–∞–Ω–æ–≤–∏–ª –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω—É—é —Ü–µ–Ω—É —Å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–æ–π.');
        showNotification('üí∞ –¶–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò!', 'success');
    }, 3000);
}

async function aiGenerateTags() {
    addAIMessage('üè∑Ô∏è –ü–æ–¥–±–∏—Ä–∞—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞...', true);
    setTimeout(() => {
        removeTemporaryMessages();
        addAIMessage('üè∑Ô∏è –¢–µ–≥–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã! –°–æ–∑–¥–∞–ª –Ω–∞–±–æ—Ä SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤ –¥–ª—è –ª—É—á—à–µ–π –Ω–∞—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.');
        showNotification('üè∑Ô∏è –¢–µ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é –ò–ò!', 'success');
    }, 2000);
}

async function generateSEO() {
    addAIMessage('üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é SEO –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...', true);
    setTimeout(() => {
        removeTemporaryMessages();
        addAIMessage('üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–ª –º–µ—Ç–∞-—Ç–µ–≥–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º.');
        showNotification('üéØ SEO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!', 'success');
    }, 2000);
}

// –û–°–¢–ê–õ–¨–ù–´–ï –ó–ê–ì–õ–£–®–ö–ò - –ø—Ä–æ—Å—Ç—ã–µ –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ

function saveAsDraft() {
    showNotification('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ!', 'success');
    addAIMessage('üíæ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–∂–µ.');
}

function aiValidateForm() {
    const name = document.getElementById('productName').value;
    const price = document.getElementById('productPrice').value;
    const description = document.getElementById('productDescription').value;
    const category = document.getElementById('productCategory').value;

    if (!name || !price || !description || !category) {
        showNotification('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'warning');
        addAIMessage('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Ü–µ–Ω—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.');
    } else {
        showNotification('‚úÖ –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!', 'success');
        addAIMessage('‚úÖ –ü—Ä–æ–≤–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É - —Ç–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.');
    }
}

function generateSKU() {
    const newSKU = 'PLT_' + Math.random().toString(36).substr(2, 6).toUpperCase();
    document.getElementById('productSKU').value = newSKU;
    showNotification('üîÑ SKU —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!', 'success');
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
function applyTemplate(category, type) {
    if (aiTemplates[category] && aiTemplates[category][type]) {
        const template = aiTemplates[category][type];

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ —à–∞–±–ª–æ–Ω–∞
        if (template.name) document.getElementById('productName').value = template.name;
        if (template.latin_name) document.getElementById('productLatinName').value = template.latin_name;
        if (template.description) document.getElementById('productDescription').value = template.description;
        if (template.short_description) document.getElementById('productShortDescription').value = template.short_description;
        if (template.price) document.getElementById('productPrice').value = template.price;
        if (template.old_price) document.getElementById('productOldPrice').value = template.old_price;
        if (template.tags) document.getElementById('productTags').value = template.tags;
        if (template.stock_quantity) document.querySelector('[name="stock_quantity"]').value = template.stock_quantity;

        // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        if (template.size) document.querySelector('[name="size"]').value = template.size;
        if (template.temperature) document.querySelector('[name="temperature"]').value = template.temperature;
        if (template.ph_level) document.querySelector('[name="ph_level"]').value = template.ph_level;
        if (template.lighting) document.querySelector('[name="lighting"]').value = template.lighting;
        if (template.difficulty) document.querySelector('[name="difficulty"]').value = template.difficulty;

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å—á–µ—Ç—á–∏–∫–∏ –∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        document.getElementById('productName').dispatchEvent(new Event('input'));
        document.getElementById('productDescription').dispatchEvent(new Event('input'));
        document.getElementById('productShortDescription').dispatchEvent(new Event('input'));
        calculateDiscount();
        updateLivePreview();

        addAIMessage(`üìã –®–∞–±–ª–æ–Ω "${template.name}" –ø—Ä–∏–º–µ–Ω–µ–Ω! –í—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–º–∏ —à–∞–±–ª–æ–Ω–∞.`);
        showNotification('üìã –®–∞–±–ª–æ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
    }
}

// –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
function aiAnalyzeImages() { addAIMessage('üñºÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π... –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ—é—Ç —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ!'); }
function aiEnhanceSpecificImage() { addAIMessage('‚ú® –ò–ò-—É–ª—É—á—à–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ö–∞—á–µ—Å—Ç–≤–æ –ø–æ–≤—ã—à–µ–Ω–æ.'); }
function aiOptimizeAllImages() { addAIMessage('üöÄ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã! –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ 30%.'); updateImageStats(); }
function aiSuggestImageNames() { addAIMessage('üè∑Ô∏è Alt-—Ç–µ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π! SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'); }
function aiCreateVariants() { addAIMessage('üîÑ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ—Ä–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!'); }
function aiGenerateImage() { addAIMessage('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ò–ò —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!'); }
function aiRemoveBackground() { addAIMessage('‚úÇÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞ - –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è!'); }
function aiOptimizeImages() { addAIMessage('üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'); }
function cropImage() { addAIMessage('‚úÇÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!'); }
function editImage() { addAIMessage('‚úÇÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!'); }
function aiSuggestName() { addAIMessage('üí° –ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!'); }
function showTemplates() { addAIMessage('üìã –®–∞–±–ª–æ–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ —Å–ø—Ä–∞–≤–∞!'); }
function aiImproveDescription() { addAIMessage('üìù –£–ª—É—á—à–∞—é –æ–ø–∏—Å–∞–Ω–∏–µ... –î–æ–±–∞–≤–∏–ª –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤!'); }
function aiAnalyzeDescription() { addAIMessage('üìä –ê–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è: –æ—Ç–ª–∏—á–Ω–∞—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∏ SEO!'); }
function aiOptimizeSEO() { addAIMessage('üéØ –£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –†–æ—Å—Ç –ø–æ–∑–∏—Ü–∏–π –æ–∂–∏–¥–∞–µ—Ç—Å—è.'); }
function closeModals() { }
function showAISuggestions() { }
function switchPreview() { }
function analyzeDescription() { return '–ê–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!'; }
function analyzeImages() { return '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!'; }
function analyzeSEO() { return 'SEO –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!'; }
function analyzeTags() { return '–ê–Ω–∞–ª–∏–∑ —Ç–µ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!'; }
function analyzeCompetitors() { return '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!'; }
function showHelp() { return '–Ø —É–º–µ—é –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ! –°–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ.'; }
function aiEnhanceImages() { addAIMessage('üñºÔ∏è –£–ª—É—á—à–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!'); }

console.log('üöÄ –ü–û–õ–ù–ê–Ø –≤–µ—Ä—Å–∏—è –º–µ–≥–∞ –∫—Ä—É—Ç–æ–≥–æ –ò–ò —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
console.log(`üîß –¢–æ–≤–∞—Ä ID: ${currentProductId || '–Ω–æ–≤—ã–π'}`);
console.log('üí° –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏: Ctrl+S (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å), Ctrl+Enter (–ò–ò —á–∞—Ç)');
</script>

</body>
</html>
